Index: step_ai/pubspec.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>name: step_ai\ndescription: \"An AI that helps users take the right steps towards optimizing productivity in various tasks.\"\n# The following line prevents the package from being accidentally published to\n# pub.dev using `flutter pub publish`. This is preferred for private packages.\npublish_to: 'none' # Remove this line if you wish to publish to pub.dev\n\n# The following defines the version and build number for your application.\n# A version number is three numbers separated by dots, like 1.2.43\n# followed by an optional build number separated by a +.\n# Both the version and the builder number may be overridden in flutter\n# build by specifying --build-name and --build-number, respectively.\n# In Android, build-name is used as versionName while build-number used as versionCode.\n# Read more about Android versioning at https://developer.android.com/studio/publish/versioning\n# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.\n# Read more about iOS versioning at\n# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html\n# In Windows, build-name is used as the major, minor, and patch parts\n# of the product and file versions while build-number is used as the build suffix.\nversion: 1.0.0+1\n\nenvironment:\n  sdk: ^3.5.3\n\n# Dependencies specify other packages that your package needs in order to work.\n# To automatically upgrade your package dependencies to the latest versions\n# consider running `flutter pub upgrade --major-versions`. Alternatively,\n# dependencies can be manually updated by changing the version numbers below to\n# the latest version available on pub.dev. To see which dependencies have newer\n# versions available, run `flutter pub outdated`.\ndependencies:\n  google_fonts: ^6.2.1\n  font_awesome_flutter: ^10.7.0\n  flutter:\n    sdk: flutter\n\n  freezed_annotation: ^2.0.3\n  json_annotation: ^4.9.0\n  \n  http: ^1.2.2\n  provider: ^6.1.2\n  flutter_secure_storage: ^9.2.2\n  shared_preferences: ^2.3.3\n  get_it: ^8.0.2\n  flutter_highlight: ^0.7.0\n\n  cupertino_icons: ^1.0.8\n  flutter_markdown: ^0.7.4+1\n  dio: ^5.7.0\n  loading_animation_widget: ^1.3.0\n  file_picker: ^8.1.6\n  http_parser: ^4.0.2\n  url_launcher: ^6.3.1\n\n  image_picker: ^0.8.7+4\n  connectivity_plus: ^6.1.1\n  google_mobile_ads: ^5.2.0\n\n\n\ndev_dependencies:\n  flutter_native_splash: ^2.2.10\n  flutter_test:\n    sdk: flutter\n  freezed: ^2.4.2\n  build_runner: ^2.3.3\n  json_serializable: ^6.6.2\n\n\n  # The \"flutter_lints\" package below contains a set of recommended lints to\n  # encourage good coding practices. The lint set provided by the package is\n  # activated in the `analysis_options.yaml` file located at the root of your\n  # package. See that file for information about deactivating specific lint\n  # rules and activating additional ones.\n  flutter_lints: ^4.0.0\n\n# For information on the generic Dart part of this file, see the\n# following page: https://dart.dev/tools/pub/pubspec\n\n# The following section is specific to Flutter packages.\nflutter:\n\n  # The following line ensures that the Material Icons font is\n  # included with your application, so that you can use the icons in\n  # the material Icons class.\n  uses-material-design: true\n\n  # To add assets to your application, add an assets section, like this:\n  assets:\n     - lib/core/assets/imgs/\n     - lib/core/assets/source_unit_images/\n  #   - images/a_dot_ham.jpeg\n\n  # An image asset can refer to one or more resolution-specific \"variants\", see\n  # https://flutter.dev/to/resolution-aware-images\n\n  # For details regarding adding assets from package dependencies, see\n  # https://flutter.dev/to/asset-from-package\n\n  # To add custom fonts to your application, add a fonts section here,\n  # in this \"flutter\" section. Each entry in this list should have a\n  # \"family\" key with the font family name, and a \"fonts\" key with a\n  # list giving the asset and other descriptors for the font. For\n  # example:\n  # fonts:\n  #   - family: Schyler\n  #     fonts:\n  #       - asset: fonts/Schyler-Regular.ttf\n  #       - asset: fonts/Schyler-Italic.ttf\n  #         style: italic\n  #   - family: Trajan Pro\n  #     fonts:\n  #       - asset: fonts/TrajanPro.ttf\n  #       - asset: fonts/TrajanPro_Bold.ttf\n  #         weight: 700\n  #\n  # For details regarding fonts from package dependencies,\n  # see https://flutter.dev/to/font-from-package\nflutter_native_splash:\n  color: \"#ffffff\" # Background color of the splash screen\n  image: lib/core/assets/imgs/step-ai-logo.png # Path to your splash image\n  android: true\n  ios: true\n  web: false\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/pubspec.yaml b/step_ai/pubspec.yaml
--- a/step_ai/pubspec.yaml	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/pubspec.yaml	(date 1735924361378)
@@ -35,6 +35,7 @@
 
   freezed_annotation: ^2.0.3
   json_annotation: ^4.9.0
+  sentry_flutter: ^8.12.0
   
   http: ^1.2.2
   provider: ^6.1.2
Index: step_ai/lib/config/constants.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:step_ai/features/publish/domain/params/disconnector_param.dart';\n\nclass Constant {\n  Constant._();\n  //API:------------------------------------------------------------------------\n  // static String apiBaseUrl = 'https://api.dev.jarvis.cx';\n  // static String kbApiUrl = 'https://knowledge-api.dev.jarvis.cx';\n  static String apiBaseUrl = 'https://api.jarvis.cx';\n  static String kbApiUrl = 'https://knowledge-api.jarvis.cx';\n\n  static String loginEndpoint = '/api/v1/auth/sign-in';\n  static String registerEndpoint = '/api/v1/auth/sign-up';\n  static String logoutEndpoint = '/api/v1/auth/sign-out';\n  static String refreshTokenPartEndpoint = '/api/v1/auth/refresh?refreshToken=';\n  static String usageEndpoint = '/api/v1/subscriptions/me';\n\n  static String promptSearchBaseEndpoint = '/api/v1/prompts?';\n  static String promptSearchQuery = 'query=';\n  static String promptSearchOffset = 'offset=';\n  static String promptSearchLimit = 'limit=';\n  static String promptSearchIsFavorite = 'isFavorite=';\n  static String promptSearchIsPublic = 'isPublic=';\n  //Tokens map key:-------------------------------------------------------------\n  static String access = 'AccessToken';\n  static String refresh = 'RefreshToken';\n\n  //Bot/Assistant Endpoint:-----------------------------------------------------\n  static String createBotEndpoint = '/kb-core/v1/ai-assistant';\n  static String loginKbEndpoint = '/kb-core/v1/auth/external-sign-in';\n  static String kbRefreshEndpointPart =\n      '/kb-core/v1/auth/refresh?refreshToken=';\n  static String deleteBotEndpoint = '/kb-core/v1/ai-assistant/';\n  static String updateBotEndpoint = '/kb-core/v1/ai-assistant/';\n  //----Bot get-----------------------------------------------------------------\n  static String botGetEndpoint = '/kb-core/v1/ai-assistant?q';\n  static String botGetOrderSet = '&order=DESC&order_field=createdAt';\n  static String botOffset = '&offset=';\n  static String botLimit = '&limit=10';\n  static String botPublished = '&isPublished';\n  static String createThreadEndpoint = '/kb-core/v1/ai-assistant/thread';\n  static String askBotInThreadEndpoint = '/kb-core/v1/ai-assistant';\n  static String botEndpoint = '/kb-core/v1/ai-assistant';\n  static String kbInBotQuery =\n      '/knowledges?q&order=DESC&order_field=createdAt&offset&limit=20';\n\n  //Image File Source:----------------------------------------------------------\n  static String localFileImagePath =\n      'lib/core/assets/source_unit_images/file.png';\n  static String webImagePath = 'lib/core/assets/source_unit_images/web.png';\n  static String driveImagePath = 'lib/core/assets/source_unit_images/drive.png';\n  static String confluenceImagePath =\n      'lib/core/assets/source_unit_images/confluence.png';\n  static String slackImagePath = 'lib/core/assets/source_unit_images/slack.png';\n\n  //Publish:--------------------------------------------------------------------\n  static String getPublishedEndpoint(String id) =>\n      '/kb-core/v1/bot-integration/$id/configurations';\n\n  static String telegramValidateEndpoint =\n      '/kb-core/v1/bot-integration/telegram/validation';\n  static String messengerValidateEndpoint =\n      '/kb-core/v1/bot-integration/messenger/validation';\n  static String slackValidateEndpoint =\n      '/kb-core/v1/bot-integration/slack/validation';\n\n  static String telegramPublishEndpoint(String id) =>\n      '/kb-core/v1/bot-integration/telegram/publish/$id';\n  static String messengerPublishEndpoint(String id) =>\n      '/kb-core/v1/bot-integration/messenger/publish/$id';\n  static String slackPublishEndpoint(String id) =>\n      '/kb-core/v1/bot-integration/slack/publish/$id';\n\n  static String disconnectBotEndpoint(String id, String type) =>\n      '/kb-core/v1/bot-integration/$id/$type';\n\n  static final Map<String, String> lengthOptions = {\n    \"Short\": \"short\",\n    \"Medium\": \"medium\",\n    \"Long\": \"long\"\n  };\n\n  static final Map<String, String> formalityOptions = {\n    \"\uD83E\uDD19 Casual\": \"casual\",\n    \"\uD83D\uDE10 Neutral\": \"neutral\",\n    \"\uD83C\uDFA9 Formal\": \"formal\"\n  };\n\n  static final Map<String, String> toneOptions = {\n    \"\uD83D\uDE1C Witty\": \"witty\",\n    \"\uD83D\uDE32 Direct\": 'direct',\n    \"\uD83E\uDDD0 Personable\": 'personable',\n    \"\uD83E\uDD13 Informational\": 'informative',\n    \"\uD83D\uDE03 Friendly\": 'friendly',\n    \"\uD83D\uDE0E Confident\": 'confident',\n    \"\uD83D\uDE0C Sincere\": 'sincere',\n    \"\uD83E\uDD29 Enthusiastic\": 'enthusiastic',\n    \"\uD83D\uDE07 Optimistic\": 'optimistic',\n    \"\uD83E\uDD76 Concerned\": 'concerned',\n    \"\uD83E\uDD7A Empathetic\": 'empathetic',\n  };\n\n  static List<Map<String, dynamic>> baseModels = [\n    {\n      'name': 'Claude 3 Haiku',\n      'id': 'claude-3-haiku-20240307',\n      'model': \"dify\",\n      'logoPath': \"lib/core/assets/imgs/claude-ai.png\",\n    },\n    {\n      'name': 'Claude 3 Sonnet',\n      'id': 'claude-3-sonnet-20240229',\n      'model': \"dify\",\n      'logoPath': \"lib/core/assets/imgs/claude.png\"\n    },\n    {\n      'name': 'Gemini',\n      'id': 'gemini-1.5-flash-latest',\n      'model': \"dify\",\n      'logoPath': \"lib/core/assets/imgs/gemini.png\"\n    },\n    {\n      'name': 'Gemini 1.5 pro',\n      'id': 'gemini-1.5-pro-latest',\n      'model': \"dify\",\n      'logoPath': \"lib/core/assets/imgs/gemini-1.png\"\n    },\n    {\n      'name': 'GPT 4o',\n      'id': 'gpt-4o',\n      'model': \"dify\",\n      'logoPath': \"lib/core/assets/imgs/gpt-4.png\"\n    },\n    {\n      'name': 'GPT 4o Mini',\n      'id': 'gpt-4o-mini',\n      'model': \"dify\",\n      'logoPath': \"lib/core/assets/imgs/gpt.png\",\n    }\n  ];\n\n  static final Map<String, String> languages = {\n    \"Auto\": \"Let AI choose the language\",\n    \"Afrikaans\": \"Afrikaans\",\n    \"Albanian\": \"Shqip\",\n    \"Amharic\": \"አማርኛ\",\n    \"Arabic\": \"العربية\",\n    \"Aragonese\": \"Aragonés\",\n    \"Assamese\": \"অসমীয়া\",\n    \"Asturian\": \"Asturianu\",\n    \"Azerbaijani\": \"Azərbaycan dili\",\n    \"Basque\": \"Euskara\",\n    \"Belarusian\": \"Беларуская\",\n    \"Bengali\": \"বাংলা\",\n    \"Bosnian\": \"Bosanski\",\n    \"Breton\": \"Brezhoneg\",\n    \"Bulgarian\": \"Български\",\n    \"Catalan\": \"Català\",\n    \"Chinese (Simplified)\": \"中文 (Simplified)\",\n    \"Chinese (Traditional)\": \"繁體中文\",\n    \"Cornish\": \"Kernewek\",\n    \"Croatian\": \"Hrvatski\",\n    \"Czech\": \"Čeština\",\n    \"Danish\": \"Dansk\",\n    \"Dutch\": \"Nederlands\",\n    \"English (Australia)\": \"English (Australia)\",\n    \"English (Canada)\": \"English (Canada)\",\n    \"English (India)\": \"English (India)\",\n    \"English (New Zealand)\": \"English (New Zealand)\",\n    \"English (UK)\": \"English (UK)\",\n    \"English (US)\": \"English (US)\",\n    \"Esperanto\": \"Esperanto\",\n    \"Estonian\": \"Eesti\",\n    \"Finnish\": \"Suomi\",\n    \"French\": \"Français\",\n    \"Frisian\": \"Frysk\",\n    \"Galician\": \"Galego\",\n    \"Georgian\": \"ქართული\",\n    \"German\": \"Deutsch\",\n    \"Greek\": \"Ελληνικά\",\n    \"Gujarati\": \"ગુજરાતી\",\n    \"Hausa\": \"Hausa\",\n    \"Hebrew\": \"עברית\",\n    \"Hindi\": \"हिन्दी\",\n    \"Hungarian\": \"Magyar\",\n    \"Icelandic\": \"Íslenska\",\n    \"Igbo\": \"Igbo\",\n    \"Indonesian\": \"Bahasa Indonesia\",\n    \"Interlingua\": \"Interlingua\",\n    \"Irish Gaelic\": \"Gaeilge\",\n    \"Italian\": \"Italiano\",\n    \"Japanese\": \"日本語\",\n    \"Kannada\": \"ಕನ್ನಡ\",\n    \"Kazakh\": \"Қазақша\",\n    \"Korean\": \"한국어\",\n    \"Kyrgyz\": \"Кыргызча\",\n    \"Lao\": \"ພາສາລາວ\",\n    \"Latvian\": \"Latviešu\",\n    \"Lithuanian\": \"Lietuvių\",\n    \"Lojban\": \"Lojban\",\n    \"Luxembourgish\": \"Lëtzebuergesch\",\n    \"Macedonian\": \"Македонски\",\n    \"Maithili\": \"मैथिली\",\n    \"Malay\": \"Bahasa Melayu\",\n    \"Malayalam\": \"മലയാളം\",\n    \"Maltese\": \"Malti\",\n    \"Marathi\": \"मराठी\",\n    \"Mongolian\": \"Монгол\",\n    \"Nepali\": \"नेपाली\",\n    \"Norwegian\": \"Norsk\",\n    \"Occitan\": \"Occitan\",\n    \"Oriya\": \"ଓଡ଼ିଆ\",\n    \"Oromo\": \"Afaan Oromoo\",\n    \"Pashto\": \"پښتو\",\n    \"Persian\": \"فارسی\",\n    \"Polish\": \"Polski\",\n    \"Portuguese\": \"Português\",\n    \"Punjabi\": \"ਪੰਜਾਬੀ\",\n    \"Romanian\": \"Română\",\n    \"Russian\": \"Русский\",\n    \"Sanskrit\": \"संस्कृतम्\",\n    \"Serbian\": \"Српски\",\n    \"Shona\": \"ChiShona\",\n    \"Sindhi\": \"سنڌي\",\n    \"Sinhala\": \"සිංහල\",\n    \"Slovak\": \"Slovenčina\",\n    \"Slovenian\": \"Slovenščina\",\n    \"Somali\": \"Af Soomaali\",\n    \"Sotho\": \"Sesotho\",\n    \"Spanish\": \"Español\",\n    \"Swahili\": \"Kiswahili\",\n    \"Swedish\": \"Svenska\",\n    \"Tagalog\": \"Tagalog\",\n    \"Tajik\": \"Тоҷикӣ\",\n    \"Tamil\": \"தமிழ்\",\n    \"Telugu\": \"తెలుగు\",\n    \"Thai\": \"ไทย\",\n    \"Tigrinya\": \"ትግርኛ\",\n    \"Turkish\": \"Türkçe\",\n    \"Turkmen\": \"Türkmençe\",\n    \"Ukrainian\": \"Українська\",\n    \"Urdu\": \"اردو\",\n    \"Uzbek\": \"Oʻzbekcha\",\n    \"Vietnamese\": \"Tiếng Việt\",\n    \"Welsh\": \"Cymraeg\",\n    \"Xhosa\": \"IsiXhosa\",\n    \"Yoruba\": \"Yorùbá\",\n    \"Zulu\": \"IsiZulu\",\n  };\n\n  static final Map<String, String> errorMessage = {\n    'empty-email': \"Your email's a blank canvas! \uD83C\uDFA8 Add some words to spark a reply idea.\",\n    'empty-idea': \"Even the best ideas need a little nudge. Type something, and let's get brainstorming!\"\n  };\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/config/constants.dart b/step_ai/lib/config/constants.dart
--- a/step_ai/lib/config/constants.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/config/constants.dart	(date 1735290336127)
@@ -5,7 +5,7 @@
   //API:------------------------------------------------------------------------
   // static String apiBaseUrl = 'https://api.dev.jarvis.cx';
   // static String kbApiUrl = 'https://knowledge-api.dev.jarvis.cx';
-  static String apiBaseUrl = 'https://api.jarvis.cx';
+  static String apiBaseUrl = 'https://api.dev.jarvis.cx';
   static String kbApiUrl = 'https://knowledge-api.jarvis.cx';
 
   static String loginEndpoint = '/api/v1/auth/sign-in';
@@ -251,4 +251,16 @@
     'empty-email': "Your email's a blank canvas! 🎨 Add some words to spark a reply idea.",
     'empty-idea': "Even the best ideas need a little nudge. Type something, and let's get brainstorming!"
   };
+
+  static final Map<String, String> actionType = {
+    'Translate to': 'translate',
+    'Revise it': 'revise',
+    'Extract the main Information': 'custom',
+    'Make it Constructive': 'custom',
+    'Make it more Detailed': 'custom',
+    'Make it more Persuasive': 'custom',
+    'Paraphrase it': 'custom',
+    'Summarize it': 'custom',
+    'Simplify it': 'custom',
+  };
 }
Index: step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:dio/dio.dart';\nimport 'package:step_ai/features/email_composer/data/network/api_response_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/compose_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/response_email.dart';\n\nimport '../../domain/repository/reponse_email_repository.dart';\nimport '../model/response_email_model.dart';\n\nclass ResponseEmailRepositoryImpl extends ResponseEmailRepository {\n\n  final ApiResponseEmail _apiResponseEmail;\n\n  ResponseEmailRepositoryImpl(this._apiResponseEmail);\n\n  @override\n  Future<ResponseEmail> generateResponseEmail({required AiEmail aiEmail}) async {\n\n    Map<String, dynamic> payload = {\n      \"mainIdea\": aiEmail.mainIdea,\n      if (aiEmail.assistant != null) \"assistant\": aiEmail.assistant!.toJson(),\n      \"email\": aiEmail.email,\n      \"action\": aiEmail.action,\n      \"metadata\": {\n        \"context\": [],\n        if (aiEmail.subject != null) \"subject\": aiEmail.subject,\n        if (aiEmail.sender != null) \"sender\": aiEmail.sender,\n        if (aiEmail.receiver != null) \"receiver\": aiEmail.receiver,\n        \"style\": aiEmail.style.toMap(),\n        \"language\": aiEmail.language,\n      }\n    };\n\n    Response response = await _apiResponseEmail.postAiEmail(payload);\n\n    ResponseEmailModel responseEmail = ResponseEmailModel.fromMap(response.data);\n\n    return ResponseEmail.fromModel(responseEmail);\n  }\n\n  @override\n  Future<List<String>> generateIdeasEmail({required AiEmail aiEmail}) async {\n    Map<String, dynamic> payload = {\n      if (aiEmail.assistant != null) \"assistant\": aiEmail.assistant!.toJson(),\n      \"email\": aiEmail.email,\n      \"action\": aiEmail.action,\n      \"metadata\": {\n        \"context\": [],\n        if (aiEmail.subject != null) \"subject\": aiEmail.subject,\n        if (aiEmail.sender != null) \"sender\": aiEmail.sender,\n        if (aiEmail.receiver != null) \"receiver\": aiEmail.receiver,\n        \"language\": aiEmail.language,\n      }\n    };\n\n    Response response = await _apiResponseEmail.postSuggestionRequest(payload);\n\n    return List<String>.from(response.data['ideas']);\n  }\n\n  @override\n  Future<ResponseEmail> composeEmail({required ComposeEmail composeEmail}) async {\n    Map<String, dynamic> payload = {\n      if (composeEmail.assistant != null) \"assistant\": composeEmail.assistant!.toJson(),\n      \"action\": composeEmail.action,\n      \"type\": composeEmail.type,\n      \"content\": composeEmail.content,\n      \"metadata\": {\n        if (composeEmail.language != null) \"translateTo\": composeEmail.language\n      }\n    };\n\n    Response response = await _apiResponseEmail.postComposeEmailRequest(payload);\n\n    ResponseEmailModel responseEmail = ResponseEmailModel.fromMap(response.data);\n\n    return ResponseEmail.fromModel(responseEmail);\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart b/step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart
--- a/step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart	(date 1735252697976)
@@ -4,7 +4,7 @@
 import 'package:step_ai/features/email_composer/domain/entity/compose_email.dart';
 import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
 
-import '../../domain/repository/reponse_email_repository.dart';
+import '../../domain/repository/response_email_repository.dart';
 import '../model/response_email_model.dart';
 
 class ResponseEmailRepositoryImpl extends ResponseEmailRepository {
@@ -62,7 +62,7 @@
   Future<ResponseEmail> composeEmail({required ComposeEmail composeEmail}) async {
     Map<String, dynamic> payload = {
       if (composeEmail.assistant != null) "assistant": composeEmail.assistant!.toJson(),
-      "action": composeEmail.action,
+      if (composeEmail.action != "") "action": composeEmail.action,
       "type": composeEmail.type,
       "content": composeEmail.content,
       "metadata": {
Index: step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\nimport 'package:loading_animation_widget/loading_animation_widget.dart';\nimport 'package:provider/provider.dart';\nimport 'package:step_ai/features/authentication/notifier/login_notifier.dart';\n\nimport 'package:step_ai/features/plan/domain/usecases/get_subscription_usecase.dart';\nimport 'package:step_ai/features/plan/presentation/notifier/subscription_notifier.dart';\nimport 'package:step_ai/shared/styles/horizontal_spacing.dart';\nimport 'package:step_ai/shared/styles/vertical_spacing.dart';\nimport 'package:step_ai/shared/usecases/pricing_redirect_service.dart';\nimport 'package:step_ai/shared/widgets/history_drawer.dart';\n\nimport '../../../../config/routes/routes.dart';\nimport '../../../../core/di/service_locator.dart';\nimport '../../../../shared/styles/colors.dart';\nimport '../../../../shared/widgets/gradient_text.dart';\nimport '../../domain/entity/plan.dart';\n\nclass PlanPricingPage extends StatefulWidget {\n  const PlanPricingPage({super.key});\n\n  @override\n  State<PlanPricingPage> createState() => _PlanPricingPageState();\n}\n\nclass _PlanPricingPageState extends State<PlanPricingPage> {\n  @override\n  void initState() {\n    super.initState();\n\n    final notifier = Provider.of<SubscriptionNotifier>(context, listen: false);\n\n    WidgetsBinding.instance.addPostFrameCallback((_) {\n      Provider.of<SubscriptionNotifier>(context, listen: false).getPlan();\n    });\n\n    notifier.addListener(() {\n      if (notifier.hasError) {\n        Navigator.of(context).pushReplacementNamed(Routes.authenticate);\n      }\n    });\n  }\n\n  @override\n  void dispose() {\n    WidgetsBinding.instance.addPostFrameCallback((_) {\n      if (mounted) {\n        final notifier = Provider.of<SubscriptionNotifier>(context, listen: false);\n        notifier.removeListener(() {});\n      }\n    });\n\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Consumer<SubscriptionNotifier>(\n        builder: (context, subscriptionNotifier, child) {\n      if (subscriptionNotifier.isLoading || subscriptionNotifier.plan == null) {\n        return _buildProgressIndicator();\n      }\n\n      return _buildPlanAndPricing(context, subscriptionNotifier);\n    });\n  }\n\n  Scaffold _buildPlanAndPricing(\n      BuildContext context, SubscriptionNotifier notifier) {\n    return Scaffold(\n      onDrawerChanged: (isOpened) {\n        if (isOpened) {\n          FocusScope.of(context).unfocus();\n        }\n      },\n      appBar: _buildAppBar(),\n      drawer: HistoryDrawer(),\n      body: SafeArea(\n        child: SingleChildScrollView(\n          child: Wrap(\n            spacing: 20,\n            runSpacing: 10,\n            alignment: WrapAlignment.center,\n            children: [\n              Column(\n                children: [\n                  Center(\n                    child: Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: GradientText(\n                        \"Choose your plan\",\n                        style: Theme.of(context).textTheme.titleMedium,\n                        gradient: LinearGradient(colors: [\n                          TColor.tamarama,\n                          TColor.goldenState,\n                        ]),\n                      ),\n                    ),\n                  ),\n                  Container(\n                    margin: const EdgeInsets.symmetric(horizontal: 8.0),\n                    height: 100,\n                    child: Text(\n                        \"Upgrade plan now for a seamless, user-friendly experience. Unlock the full potential of our app and enjoy convenience at your fingertips.\",\n                        maxLines: 3,\n                        textAlign: TextAlign.center,\n                        style: Theme.of(context).textTheme.bodyMedium),\n                  ),\n                ],\n              ),\n              BasicPlan(\n                isSelected: notifier.plan!.name == 'basic',\n              ),\n              StarterPlan(isSelected: notifier.plan!.name == 'starter'),\n              ProPlan(isSelected: notifier.plan!.name == 'pro'),\n              SizedBox(\n                width: MediaQuery.of(context).size.width,\n                height: 20,\n              ),\n              Column(\n                children: [\n                  Container(\n                    margin: const EdgeInsets.symmetric(horizontal: 30.0),\n                    child: const Text(\n                      \"* Our subscription plan is designed with flexibility and transparency in mind. While it offers unlimited usage, we acknowledge the possibility of adjustments in the future to meet evolving needs. Rest assured, any such changes will be communicated well in advance, providing our customers with the information they need to make informed decisions. Additionally, we understand that adjustments may not align with everyone's expectations, which is why we've implemented a generous refund program. Subscribers can terminate their subscription within 7 days of the announced adjustments and receive a refund if they so choose. Moreover, our commitment to customer satisfaction is further emphasized by allowing subscribers the freedom to cancel their subscription at any time, providing ultimate flexibility in managing their subscription preferences.\",\n                      maxLines: 20,\n                      textAlign: TextAlign.center,\n                    ),\n                  ),\n                  VSpacing.sm,\n                  Container(\n                    margin: const EdgeInsets.symmetric(horizontal: 30.0),\n                    child: const Text(\n                      \"* By subscribing, you are enrolling in automatic payments. Cancel or manage your subscription through Stripe's customer portal from \\\"Dashboard\\\".\",\n                      maxLines: 5,\n                      textAlign: TextAlign.center,\n                    ),\n                  ),\n                  VSpacing.sm,\n                  Container(\n                    margin: const EdgeInsets.symmetric(horizontal: 30.0),\n                    child: const Text(\n                      \"* All services are delivered according to the Terms of Service you confirm with your sign-up.\",\n                      maxLines: 5,\n                      textAlign: TextAlign.center,\n                    ),\n                  ),\n                ],\n              ),\n              SizedBox(\n                width: MediaQuery.of(context).size.width,\n                height: 20,\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  AppBar _buildAppBar() {\n    return AppBar(\n      centerTitle: true,\n      leading: Builder(\n        builder: (context) {\n          return IconButton(\n            icon: const Icon(Icons.menu),\n            onPressed: () async {\n              if (context.mounted) {\n                Scaffold.of(context).openDrawer();\n              }\n            },\n          );\n        },\n      ),\n      title: const Text(\n        \"Plan & Pricing\",\n      ),\n    );\n  }\n\n  Widget _buildProgressIndicator() {\n    return Center(\n      child: Padding(\n        padding: const EdgeInsets.all(10.0),\n        child: SizedBox(\n          width: 200,\n          child: Center(\n            child: LoadingAnimationWidget.twistingDots(\n              size: 50,\n              leftDotColor: TColor.tamarama,\n              rightDotColor: TColor.daJuice,\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nclass BasicPlan extends StatelessWidget {\n  final bool isSelected;\n\n  const BasicPlan({super.key, this.isSelected = false});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 350,\n      height: 910,\n      decoration: BoxDecoration(\n        boxShadow: [\n          BoxShadow(\n              offset: const Offset(-3, 3),\n              color: TColor.slate.withOpacity(0.5),\n              blurRadius: 5.0)\n        ],\n        color: TColor.doctorWhite,\n        border: Border.all(color: TColor.petRock.withOpacity(0.5)),\n        borderRadius: BorderRadius.circular(10),\n      ),\n      child: Padding(\n        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 20),\n        child: Stack(\n          children: [\n            if (isSelected)\n              Positioned(\n                right: 0,\n                child: Transform.translate(\n                  offset: const Offset(17, -5),\n                  child: Container(\n                      decoration: BoxDecoration(\n                        borderRadius: BorderRadius.circular(8),\n                        border: Border.all(color: TColor.finePine, width: 2),\n                      ),\n                      child: Padding(\n                        padding: const EdgeInsets.symmetric(\n                            horizontal: 8.0, vertical: 4.0),\n                        child: Text(\"Current plan\",\n                            style: Theme.of(context)\n                                .textTheme\n                                .titleLarge\n                                ?.copyWith(\n                                  color: TColor.finePine,\n                                  fontSize: 13,\n                                  fontWeight: FontWeight.w800,\n                                  fontStyle: FontStyle.italic,\n                                )),\n                      )),\n                ),\n              ),\n            Column(\n              children: [\n                VSpacing.sm,\n                Text(\n                  \"Basic\",\n                  style: Theme.of(context).textTheme.titleLarge,\n                ),\n                VSpacing.sm,\n                const Text(\"\"),\n                VSpacing.sm,\n                Text(\"Free\", style: Theme.of(context).textTheme.titleMedium),\n                VSpacing.sm,\n                const Text(\"\"),\n                VSpacing.sm,\n                const Text(\"\"),\n                VSpacing.sm,\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Basic features\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Column(\n                      mainAxisAlignment: MainAxisAlignment.start,\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\"AI Models\",\n                            style: Theme.of(context).textTheme.titleSmall),\n                        const SizedBox(\n                            width: 250,\n                            child: Text(\n                              \"GPT-3.5 & GPT-4.0/Turbo & Gemini Pro & Gemini Ultra\",\n                              maxLines: 3,\n                            )),\n                      ],\n                    ),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Action Injection\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Select Text for AI Action\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Text(\"\", style: Theme.of(context).textTheme.titleSmall),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Limited queries per day\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(\n                      Icons.check_circle_outline_rounded,\n                      color: TColor.finePine,\n                    ),\n                    HSpacing.sm,\n                    Text(\"50 free queries per day\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Advanced features\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Reading Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Real-time Web Access\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Writing Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Text(\"\", style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Text(\"\", style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Text.rich(\n                  TextSpan(\n                    text: \"\",\n                    style: Theme.of(context)\n                        .textTheme\n                        .titleSmall\n                        ?.copyWith(color: TColor.petRock.withOpacity(0.8)),\n                    children: [\n                      TextSpan(\n                          text: \"\",\n                          style:\n                              Theme.of(context).textTheme.titleSmall!.copyWith(\n                                    fontWeight: FontWeight.w700,\n                                  )),\n                      const TextSpan(text: \"\"),\n                    ],\n                  ),\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Other benefits\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    SizedBox(\n                      width: 270,\n                      child: Text(\"Lower response speed during high-traffic\",\n                          maxLines: 2,\n                          style: Theme.of(context).textTheme.titleSmall),\n                    ),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Text(\"\", style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Text(\"\", style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n              ],\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass StarterPlan extends StatelessWidget {\n  final bool isSelected;\n\n  const StarterPlan({super.key, this.isSelected = false});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 350,\n      height: 910,\n      decoration: BoxDecoration(\n        boxShadow: [\n          BoxShadow(\n              offset: const Offset(-3, 3),\n              color: TColor.slate.withOpacity(0.5),\n              blurRadius: 5.0)\n        ],\n        color: TColor.doctorWhite,\n        border: Border.all(color: TColor.petRock.withOpacity(0.5)),\n        borderRadius: BorderRadius.circular(10),\n      ),\n      child: Padding(\n        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 20),\n        child: Stack(\n          children: [\n            if (isSelected)\n              Positioned(\n                right: 0,\n                child: Transform.translate(\n                  offset: const Offset(17, -5),\n                  child: Container(\n                      decoration: BoxDecoration(\n                        borderRadius: BorderRadius.circular(8),\n                        border: Border.all(color: TColor.finePine, width: 2),\n                      ),\n                      child: Padding(\n                        padding: const EdgeInsets.symmetric(\n                            horizontal: 8.0, vertical: 4.0),\n                        child: Text(\"Current plan\",\n                            style: Theme.of(context)\n                                .textTheme\n                                .titleLarge\n                                ?.copyWith(\n                                  color: TColor.finePine,\n                                  fontSize: 13,\n                                  fontWeight: FontWeight.w800,\n                                  fontStyle: FontStyle.italic,\n                                )),\n                      )),\n                ),\n              ),\n            Column(\n              children: [\n                VSpacing.sm,\n                Text(\"Starter\", style: Theme.of(context).textTheme.titleLarge),\n                VSpacing.sm,\n                Text(\"1-month Free Trial\",\n                    style: Theme.of(context).textTheme.titleSmall),\n                const Text(\"then\"),\n                VSpacing.sm,\n                Text.rich(\n                  TextSpan(\n                    text: \"\\$9.99\",\n                    style: Theme.of(context).textTheme.titleMedium,\n                    children: [\n                      TextSpan(\n                          text: \"/month\",\n                          style: Theme.of(context).textTheme.titleSmall)\n                    ],\n                  ),\n                ),\n                VSpacing.sm,\n                Material(\n                  color: Colors.transparent,\n                  child: InkWell(\n                    onTap: () async => await PricingRedirectService.call(),\n                    borderRadius: BorderRadius.circular(4),\n                    child: Ink(\n                      decoration: BoxDecoration(\n                          borderRadius: BorderRadius.circular(4),\n                          color: TColor.goldenState,\n                          gradient: LinearGradient(\n                              colors: [TColor.tamarama, TColor.royalBlue])),\n                      child: Padding(\n                        padding: const EdgeInsets.symmetric(\n                            vertical: 6.0, horizontal: 50),\n                        child: Text(\n                          isSelected ? \"Unsubscribe\" : \"Choose Plan\",\n                          style: Theme.of(context)\n                              .textTheme\n                              .titleLarge!\n                              .copyWith(\n                                  fontSize: 20,\n                                  color: TColor.doctorWhite,\n                                  fontWeight: FontWeight.w800),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Basic features\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Column(\n                      mainAxisAlignment: MainAxisAlignment.start,\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\"AI Models\",\n                            style: Theme.of(context).textTheme.titleSmall),\n                        const SizedBox(\n                            width: 250,\n                            child: Text(\n                              \"GPT-3.5 & GPT-4.0/Turbo & Gemini Pro & Gemini Ultra\",\n                              maxLines: 3,\n                            )),\n                      ],\n                    ),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Action Injection\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Select Text for AI Action\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(\n                      Icons.check_circle_outline_rounded,\n                      color: TColor.finePine,\n                    ),\n                    HSpacing.sm,\n                    Text(\"No ads\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"More queries per month\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(\n                      Icons.check_circle_outline_rounded,\n                      color: TColor.finePine,\n                    ),\n                    HSpacing.sm,\n                    Text(\"Unlimited queries per month\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Advanced features\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Reading Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Real-time Web Access\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Writing Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Jira Copilot Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Github Copilot Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Text.rich(\n                  TextSpan(\n                    text: \"Maximize productivity with \",\n                    style: Theme.of(context)\n                        .textTheme\n                        .titleSmall\n                        ?.copyWith(color: TColor.petRock.withOpacity(0.8)),\n                    children: [\n                      TextSpan(\n                          text: \"unlimited*\",\n                          style:\n                              Theme.of(context).textTheme.titleSmall!.copyWith(\n                                    fontWeight: FontWeight.w700,\n                                  )),\n                      const TextSpan(text: \" queries\"),\n                    ],\n                  ),\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Other benefits\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"No request limits during high-traffic\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"2X faster response speed\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Priority email support\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n              ],\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n\nclass ProPlan extends StatelessWidget {\n  final bool isSelected;\n\n  const ProPlan({super.key, this.isSelected = false});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      width: 350,\n      height: 910,\n      decoration: BoxDecoration(\n        boxShadow: [\n          BoxShadow(\n              offset: const Offset(-3, 3),\n              color: TColor.slate.withOpacity(0.5),\n              blurRadius: 5.0)\n        ],\n        color: TColor.doctorWhite,\n        borderRadius: BorderRadius.circular(10),\n        border: Border.all(color: TColor.petRock.withOpacity(0.5)),\n      ),\n      child: Padding(\n        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 20),\n        child: Stack(\n          children: [\n            if (isSelected)\n              Positioned(\n                  right: 0,\n                  child: Transform.translate(\n                    offset: const Offset(17, -5),\n                    child: Container(\n                        decoration: BoxDecoration(\n                          borderRadius: BorderRadius.circular(8),\n                          border: Border.all(color: TColor.finePine, width: 2),\n                        ),\n                        child: Padding(\n                          padding: const EdgeInsets.symmetric(\n                              horizontal: 8.0, vertical: 4.0),\n                          child: Text(\"Current plan\",\n                              style: Theme.of(context)\n                                  .textTheme\n                                  .titleLarge\n                                  ?.copyWith(\n                                    color: TColor.finePine,\n                                    fontSize: 13,\n                                    fontWeight: FontWeight.w800,\n                                    fontStyle: FontStyle.italic,\n                                  )),\n                        )),\n                  )),\n            Column(\n              children: [\n                VSpacing.sm,\n                Text(\"Pro Annually\",\n                    style: Theme.of(context).textTheme.titleLarge?.copyWith(\n                          fontSize: 22,\n                          fontWeight: FontWeight.w800,\n                        )),\n                VSpacing.sm,\n                Text(\"1-month Free Trial\",\n                    style: Theme.of(context).textTheme.titleSmall),\n                const Text(\"then\"),\n                VSpacing.sm,\n                Text.rich(\n                  TextSpan(\n                    text: \"\\$79.99\",\n                    style: Theme.of(context).textTheme.titleMedium,\n                    children: [\n                      TextSpan(\n                          text: \"/year\",\n                          style: Theme.of(context).textTheme.titleSmall)\n                    ],\n                  ),\n                ),\n                VSpacing.sm,\n                Material(\n                  color: Colors.transparent,\n                  child: InkWell(\n                    onTap: () async => await PricingRedirectService.call(),\n                    borderRadius: BorderRadius.circular(4),\n                    child: Ink(\n                      decoration: BoxDecoration(\n                          borderRadius: BorderRadius.circular(4),\n                          color: TColor.goldenState,\n                          gradient: LinearGradient(\n                              colors: [TColor.goldenState, Colors.deepOrange])),\n                      child: Padding(\n                        padding: const EdgeInsets.symmetric(\n                            vertical: 6.0, horizontal: 50),\n                        child: Text(\n                          isSelected ? \"Unsubscribe\" : \"Choose Plan\",\n                          style: Theme.of(context)\n                              .textTheme\n                              .titleLarge!\n                              .copyWith(\n                                  fontSize: 20,\n                                  color: TColor.doctorWhite,\n                                  fontWeight: FontWeight.w800),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Basic features\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.start,\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Column(\n                      mainAxisAlignment: MainAxisAlignment.start,\n                      crossAxisAlignment: CrossAxisAlignment.start,\n                      children: [\n                        Text(\"AI Models\",\n                            style: Theme.of(context).textTheme.titleSmall),\n                        const SizedBox(\n                            width: 250,\n                            child: Text(\n                              \"GPT-3.5 & GPT-4.0/Turbo & Gemini Pro & Gemini Ultra\",\n                              maxLines: 3,\n                            )),\n                      ],\n                    ),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Action Injection\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Select Text for AI Action\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(\n                      Icons.check_circle_outline_rounded,\n                      color: TColor.finePine,\n                    ),\n                    HSpacing.sm,\n                    Text(\"No ads\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"More queries per year\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(\n                      Icons.check_circle_outline_rounded,\n                      color: TColor.finePine,\n                    ),\n                    HSpacing.sm,\n                    Text(\"Unlimited queries per year\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Advanced features\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Reading Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Real-time Web Access\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"AI Writing Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Jira Copilot Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Github Copilot Assistant\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Text.rich(\n                  TextSpan(\n                    text: \"Maximize productivity with \",\n                    style: Theme.of(context)\n                        .textTheme\n                        .titleSmall\n                        ?.copyWith(color: TColor.petRock.withOpacity(0.8)),\n                    children: [\n                      TextSpan(\n                          text: \"unlimited*\",\n                          style:\n                              Theme.of(context).textTheme.titleSmall!.copyWith(\n                                    fontWeight: FontWeight.w700,\n                                  )),\n                      const TextSpan(text: \" queries\"),\n                    ],\n                  ),\n                ),\n                Divider(\n                  color: TColor.petRock.withOpacity(0.5),\n                ),\n                Align(\n                  alignment: Alignment.centerLeft,\n                  child: Text(\"Other benefits\",\n                      style: Theme.of(context).textTheme.bodyLarge),\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"No request limits during high-traffic\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"2X faster response speed\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n                Row(\n                  children: [\n                    Icon(Icons.check_circle_outline_rounded,\n                        color: TColor.finePine),\n                    HSpacing.sm,\n                    Text(\"Priority email support\",\n                        style: Theme.of(context).textTheme.titleSmall),\n                  ],\n                ),\n                VSpacing.sm,\n              ],\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart b/step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart
--- a/step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart	(date 1735252975417)
@@ -198,6 +198,229 @@
   }
 }
 
+class CurrentPlan extends StatelessWidget {
+  final Plan _plan;
+  const CurrentPlan({super.key, required Plan plan}) : _plan = plan ;
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      width: 350,
+      height: 910,
+      decoration: BoxDecoration(
+        boxShadow: [
+          BoxShadow(
+              offset: const Offset(-3, 3),
+              color: TColor.slate.withOpacity(0.5),
+              blurRadius: 5.0)
+        ],
+        color: TColor.doctorWhite,
+        border: Border.all(color: TColor.petRock.withOpacity(0.5)),
+        borderRadius: BorderRadius.circular(10),
+      ),
+      child: Padding(
+        padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 20),
+        child: Column(
+          children: [
+            VSpacing.sm,
+            Text(
+              _plan.name,
+              style: Theme.of(context).textTheme.titleLarge,
+            ),
+            VSpacing.sm,
+            const Text(""),
+            VSpacing.sm,
+            Text("Free", style: Theme.of(context).textTheme.titleMedium),
+            VSpacing.sm,
+            const Text(""),
+            VSpacing.sm,
+            const Text(""),
+            VSpacing.sm,
+            Divider(
+              color: TColor.petRock.withOpacity(0.5),
+            ),
+            Align(
+              alignment: Alignment.centerLeft,
+              child: Text("Basic features",
+                  style: Theme.of(context).textTheme.bodyLarge),
+            ),
+            VSpacing.sm,
+            Row(
+              mainAxisAlignment: MainAxisAlignment.start,
+              crossAxisAlignment: CrossAxisAlignment.start,
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                Column(
+                  mainAxisAlignment: MainAxisAlignment.start,
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    Text("AI Models",
+                        style: Theme.of(context).textTheme.titleSmall),
+                    const SizedBox(
+                        width: 250,
+                        child: Text(
+                          "GPT-3.5 & GPT-4.0/Turbo & Gemini Pro & Gemini Ultra",
+                          maxLines: 3,
+                        )),
+                  ],
+                ),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                Text("AI Action Injection",
+                    style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                Text("Select Text for AI Action",
+                    style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Text("", style: Theme.of(context).textTheme.titleSmall),
+            Divider(
+              color: TColor.petRock.withOpacity(0.5),
+            ),
+            Align(
+              alignment: Alignment.centerLeft,
+              child: Text("Limited queries per day",
+                  style: Theme.of(context).textTheme.bodyLarge),
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(
+                  Icons.check_circle_outline_rounded,
+                  color: TColor.finePine,
+                ),
+                HSpacing.sm,
+                Text("50 free queries per day",
+                    style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            Divider(
+              color: TColor.petRock.withOpacity(0.5),
+            ),
+            Align(
+              alignment: Alignment.centerLeft,
+              child: Text("Advanced features",
+                  style: Theme.of(context).textTheme.bodyLarge),
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                Text("AI Reading Assistant",
+                    style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                Text("Real-time Web Access",
+                    style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                Text("AI Writing Assistant",
+                    style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Text("", style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Text("", style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Text.rich(
+              TextSpan(
+                text: "",
+                style: Theme.of(context)
+                    .textTheme
+                    .titleSmall
+                    ?.copyWith(color: TColor.petRock.withOpacity(0.8)),
+                children: [
+                  TextSpan(
+                      text: "",
+                      style:
+                      Theme.of(context).textTheme.titleSmall!.copyWith(
+                        fontWeight: FontWeight.w700,
+                      )),
+                  const TextSpan(text: ""),
+                ],
+              ),
+            ),
+            Divider(
+              color: TColor.petRock.withOpacity(0.5),
+            ),
+            Align(
+              alignment: Alignment.centerLeft,
+              child: Text("Other benefits",
+                  style: Theme.of(context).textTheme.bodyLarge),
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Icon(Icons.check_circle_outline_rounded,
+                    color: TColor.finePine),
+                HSpacing.sm,
+                SizedBox(
+                  width: 270,
+                  child: Text("Lower response speed during high-traffic",
+                      maxLines: 2,
+                      style: Theme.of(context).textTheme.titleSmall),
+                ),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Text("", style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+            Row(
+              children: [
+                Text("", style: Theme.of(context).textTheme.titleSmall),
+              ],
+            ),
+            VSpacing.sm,
+          ],
+        ),
+      ),
+    );
+  }
+}
+
 class BasicPlan extends StatelessWidget {
   final bool isSelected;
 
Index: .idea/caches/deviceStreaming.xml
===================================================================
diff --git a/.idea/caches/deviceStreaming.xml b/.idea/caches/deviceStreaming.xml
deleted file mode 100644
--- a/.idea/caches/deviceStreaming.xml	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ /dev/null	(revision fbf086bb97d721b994de24479443533160e03c2a)
@@ -1,329 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="DeviceStreaming">
-    <option name="deviceSelectionList">
-      <list>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="27" />
-          <option name="brand" value="DOCOMO" />
-          <option name="codename" value="F01L" />
-          <option name="id" value="F01L" />
-          <option name="manufacturer" value="FUJITSU" />
-          <option name="name" value="F-01L" />
-          <option name="screenDensity" value="360" />
-          <option name="screenX" value="720" />
-          <option name="screenY" value="1280" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="28" />
-          <option name="brand" value="DOCOMO" />
-          <option name="codename" value="SH-01L" />
-          <option name="id" value="SH-01L" />
-          <option name="manufacturer" value="SHARP" />
-          <option name="name" value="AQUOS sense2 SH-01L" />
-          <option name="screenDensity" value="480" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2160" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="Lenovo" />
-          <option name="codename" value="TB370FU" />
-          <option name="id" value="TB370FU" />
-          <option name="manufacturer" value="Lenovo" />
-          <option name="name" value="Tab P12" />
-          <option name="screenDensity" value="340" />
-          <option name="screenX" value="1840" />
-          <option name="screenY" value="2944" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="31" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="a51" />
-          <option name="id" value="a51" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy A51" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="akita" />
-          <option name="id" value="akita" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 8a" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="b0q" />
-          <option name="id" value="b0q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy S22 Ultra" />
-          <option name="screenDensity" value="600" />
-          <option name="screenX" value="1440" />
-          <option name="screenY" value="3088" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="32" />
-          <option name="brand" value="google" />
-          <option name="codename" value="bluejay" />
-          <option name="id" value="bluejay" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 6a" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="caiman" />
-          <option name="id" value="caiman" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9 Pro" />
-          <option name="screenDensity" value="360" />
-          <option name="screenX" value="960" />
-          <option name="screenY" value="2142" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="comet" />
-          <option name="id" value="comet" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9 Pro Fold" />
-          <option name="screenDensity" value="390" />
-          <option name="screenX" value="2076" />
-          <option name="screenY" value="2152" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="29" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="crownqlteue" />
-          <option name="id" value="crownqlteue" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Note9" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2220" />
-          <option name="screenY" value="1080" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="dm3q" />
-          <option name="id" value="dm3q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy S23 Ultra" />
-          <option name="screenDensity" value="600" />
-          <option name="screenX" value="1440" />
-          <option name="screenY" value="3088" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="e1q" />
-          <option name="id" value="e1q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy S24" />
-          <option name="screenDensity" value="480" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2340" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="felix" />
-          <option name="id" value="felix" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Fold" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2208" />
-          <option name="screenY" value="1840" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="felix" />
-          <option name="id" value="felix" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Fold" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2208" />
-          <option name="screenY" value="1840" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="felix_camera" />
-          <option name="id" value="felix_camera" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Fold (Camera-enabled)" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="2208" />
-          <option name="screenY" value="1840" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="gts8uwifi" />
-          <option name="id" value="gts8uwifi" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Tab S8 Ultra" />
-          <option name="screenDensity" value="320" />
-          <option name="screenX" value="1848" />
-          <option name="screenY" value="2960" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="husky" />
-          <option name="id" value="husky" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 8 Pro" />
-          <option name="screenDensity" value="390" />
-          <option name="screenX" value="1008" />
-          <option name="screenY" value="2244" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="30" />
-          <option name="brand" value="motorola" />
-          <option name="codename" value="java" />
-          <option name="id" value="java" />
-          <option name="manufacturer" value="Motorola" />
-          <option name="name" value="G20" />
-          <option name="screenDensity" value="280" />
-          <option name="screenX" value="720" />
-          <option name="screenY" value="1600" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="komodo" />
-          <option name="id" value="komodo" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9 Pro XL" />
-          <option name="screenDensity" value="360" />
-          <option name="screenX" value="1008" />
-          <option name="screenY" value="2244" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="lynx" />
-          <option name="id" value="lynx" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 7a" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="31" />
-          <option name="brand" value="google" />
-          <option name="codename" value="oriole" />
-          <option name="id" value="oriole" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 6" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="panther" />
-          <option name="id" value="panther" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 7" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="q5q" />
-          <option name="id" value="q5q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Z Fold5" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1812" />
-          <option name="screenY" value="2176" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="samsung" />
-          <option name="codename" value="q6q" />
-          <option name="id" value="q6q" />
-          <option name="manufacturer" value="Samsung" />
-          <option name="name" value="Galaxy Z Fold6" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1856" />
-          <option name="screenY" value="2160" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="30" />
-          <option name="brand" value="google" />
-          <option name="codename" value="r11" />
-          <option name="id" value="r11" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Watch" />
-          <option name="screenDensity" value="320" />
-          <option name="screenX" value="384" />
-          <option name="screenY" value="384" />
-          <option name="type" value="WEAR_OS" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="30" />
-          <option name="brand" value="google" />
-          <option name="codename" value="redfin" />
-          <option name="id" value="redfin" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 5" />
-          <option name="screenDensity" value="440" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2340" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="shiba" />
-          <option name="id" value="shiba" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 8" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2400" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="33" />
-          <option name="brand" value="google" />
-          <option name="codename" value="tangorpro" />
-          <option name="id" value="tangorpro" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel Tablet" />
-          <option name="screenDensity" value="320" />
-          <option name="screenX" value="1600" />
-          <option name="screenY" value="2560" />
-        </PersistentDeviceSelectionData>
-        <PersistentDeviceSelectionData>
-          <option name="api" value="34" />
-          <option name="brand" value="google" />
-          <option name="codename" value="tokay" />
-          <option name="id" value="tokay" />
-          <option name="manufacturer" value="Google" />
-          <option name="name" value="Pixel 9" />
-          <option name="screenDensity" value="420" />
-          <option name="screenX" value="1080" />
-          <option name="screenY" value="2424" />
-        </PersistentDeviceSelectionData>
-      </list>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: step_ai/lib/config/routes/routes.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\nimport 'package:provider/provider.dart';\nimport 'package:step_ai/core/di/service_locator.dart';\nimport 'package:step_ai/features/email_composer/presentation/pages/email_composer.dart';\nimport 'package:step_ai/lib/features/chat/notifier/history_conversation_list_notifier.dart';\n\nimport 'package:step_ai/features/authentication/presentation/pages/authenticate.dart';\nimport 'package:step_ai/features/chat/domain/usecase/get_prompt_list_usecase.dart';\nimport 'package:step_ai/features/chat/notifier/personal_assistant_notifier.dart';\nimport 'package:step_ai/features/chat/presentation/notifier/chat_bar_notifier.dart';\nimport 'package:step_ai/features/chat/presentation/notifier/prompt_list_notifier.dart';\nimport 'package:step_ai/features/chat/notifier/assistant_notifier.dart';\nimport 'package:step_ai/features/chat/notifier/history_conversation_list_notifier.dart';\n\nimport 'package:step_ai/features/chat/presentation/pages/chat_page.dart';\n\nimport 'package:step_ai/features/authentication/presentation/pages/email_page.dart';\nimport 'package:step_ai/features/authentication/presentation/pages/forgot_password_page.dart';\nimport 'package:step_ai/features/personal/presentation/notifier/bot_list_notifier.dart';\n\nimport 'package:step_ai/features/preview/presentation/notifier/preview_chat_notifier.dart';\nimport 'package:step_ai/features/preview/presentation/pages/preview_chat_page.dart';\nimport 'package:step_ai/features/prompt/presentation/pages/prompt_list.dart';\n\nimport 'package:step_ai/features/chat/presentation/pages/chat_page.dart';\n\nimport 'package:step_ai/features/plan/presentation/notifier/subscription_notifier.dart';\n\nimport 'package:step_ai/features/plan/presentation/pages/plan_pricing_page.dart';\nimport 'package:step_ai/features/units_in_knowledge/presentation/pages/confluence_page.dart';\nimport 'package:step_ai/features/units_in_knowledge/presentation/pages/drive_page.dart';\nimport 'package:step_ai/features/units_in_knowledge/presentation/pages/local_file_page.dart';\nimport 'package:step_ai/features/units_in_knowledge/presentation/pages/slack_page.dart';\nimport 'package:step_ai/features/units_in_knowledge/presentation/pages/units_page.dart';\nimport 'package:step_ai/features/units_in_knowledge/presentation/pages/web_page.dart';\n\nimport '../../features/authentication/notifier/login_notifier.dart';\nimport '../../features/authentication/notifier/register_notifier.dart';\nimport '../../features/authentication/notifier/ui_notifier.dart';\nimport '../../features/chat/notifier/assistant_notifier.dart';\nimport '../../features/chat/notifier/chat_notifier.dart';\nimport '../../features/chat/notifier/history_conversation_list_notifier.dart';\nimport '../../features/chat/presentation/notifier/chat_bar_notifier.dart';\nimport '../../features/chat/presentation/notifier/prompt_list_notifier.dart';\nimport '../../features/personal/presentation/pages/playground_page.dart';\n\nclass Routes {\n  Routes._();\n\n  //static variables\n  static const String splash = '/splash';\n  static const String chat = '/chat';\n  static const String personal = '/personal';\n  static const String email = '/email';\n  static const String planAndPricing = \"/planAndPricing\";\n  static const String authenticate = \"/signIn\";\n  static const String promptList = \"/promptList\";\n  static const String forgotPassword = \"/resetPassword\";\n  static const String previewChat = \"/previewChat\";\n  static const String unitsPage = \"/unitsPage\";\n  //Page in unit\n  static const String localFilePage = \"/localFilePage\";\n  static const String webPage = \"/webPage\";\n  static const String confluencePage = \"/confluencePage\";\n  static const String drivePage = \"/drivePage\";\n  static const String slackPage = \"/slackPage\";\n\n  static final routes = <String, WidgetBuilder>{\n    personal: (BuildContext context) => Builder(builder: (context) {\n          return const PlaygroundPage();\n        }),\n\n    chat: (BuildContext context) => MultiProvider(providers: [\n          ChangeNotifierProvider.value(value: getIt<ChatBarNotifier>()),\n          ChangeNotifierProvider.value(value: getIt<PromptListNotifier>()),\n          ChangeNotifierProvider.value(value: getIt<AssistantNotifier>()),\n          ChangeNotifierProvider.value(value: getIt<ChatNotifier>()),\n          ChangeNotifierProvider.value(\n              value: getIt<HistoryConversationListNotifier>()),\n        ], child: const ChatPage()),\n    unitsPage: (BuildContext context) => UnitsPage(),\n    planAndPricing: (BuildContext context) => Builder(builder: (context) {\n          return MultiProvider(providers: [\n            ChangeNotifierProvider.value(\n                value: getIt<HistoryConversationListNotifier>()),\n            ChangeNotifierProvider.value(value: getIt<ChatNotifier>()),\n            ChangeNotifierProvider.value(value: getIt<SubscriptionNotifier>()),\n          ], child: const PlanPricingPage());\n        }),\n\n    // signIn: (BuildContext context) => SignInPage(),\n    authenticate: (BuildContext context) => Builder(\n          builder: (context) {\n            return MultiProvider(\n              providers: [\n                ChangeNotifierProvider(create: (_) => AuthenticateUINotifier()),\n                ChangeNotifierProvider.value(value: getIt<LoginNotifier>()),\n                ChangeNotifierProvider.value(value: getIt<RegisterNotifier>()),\n              ],\n              child: AuthenticateScreen(),\n            );\n          },\n        ),\n    promptList: (BuildContext context) => PromptApp(),\n    forgotPassword: (BuildContext context) => ForgotPasswordPage(),\n    previewChat:(BuildContext context) => Builder(\n      builder: (context) {\n        return MultiProvider(\n          providers: [\n            ChangeNotifierProvider.value(value: getIt<ChatBarNotifier>()),\n            ChangeNotifierProvider.value(value: getIt<PersonalAssistantNotifier>()),\n            ChangeNotifierProvider.value(value: getIt<PreviewChatNotifier>()),\n          ],\n          child: const PreviewChatPage(),\n        );\n      },\n    ),\n    localFilePage: (BuildContext context) => LocalFilePage(),\n    webPage: (BuildContext context) => WebPage(),\n    slackPage: (BuildContext context) => SlackPage(),\n    confluencePage: (BuildContext context) => ConfluencePage(),\n    drivePage: (BuildContext context) => DrivePage(),\n    email: (BuildContext context) => const EmailComposer(),\n  };\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/config/routes/routes.dart b/step_ai/lib/config/routes/routes.dart
--- a/step_ai/lib/config/routes/routes.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/config/routes/routes.dart	(date 1735249752485)
@@ -1,6 +1,10 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 import 'package:step_ai/core/di/service_locator.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/compose_email_usecase.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/email_composer_notifier.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/usage_token_notifier.dart';
+import 'package:step_ai/features/email_composer/presentation/pages/email_action.dart';
 import 'package:step_ai/features/email_composer/presentation/pages/email_composer.dart';
 import 'package:step_ai/lib/features/chat/notifier/history_conversation_list_notifier.dart';
 
@@ -37,11 +41,7 @@
 import '../../features/authentication/notifier/login_notifier.dart';
 import '../../features/authentication/notifier/register_notifier.dart';
 import '../../features/authentication/notifier/ui_notifier.dart';
-import '../../features/chat/notifier/assistant_notifier.dart';
 import '../../features/chat/notifier/chat_notifier.dart';
-import '../../features/chat/notifier/history_conversation_list_notifier.dart';
-import '../../features/chat/presentation/notifier/chat_bar_notifier.dart';
-import '../../features/chat/presentation/notifier/prompt_list_notifier.dart';
 import '../../features/personal/presentation/pages/playground_page.dart';
 
 class Routes {
@@ -52,18 +52,17 @@
   static const String chat = '/chat';
   static const String personal = '/personal';
   static const String email = '/email';
-  static const String planAndPricing = "/planAndPricing";
-  static const String authenticate = "/signIn";
-  static const String promptList = "/promptList";
-  static const String forgotPassword = "/resetPassword";
-  static const String previewChat = "/previewChat";
-  static const String unitsPage = "/unitsPage";
+  static const String planAndPricing = "/pricing";
+  static const String authenticate = "/sign-in";
+  static const String previewChat = "/preview-chat";
+  static const String unitsPage = "/units-page";
   //Page in unit
-  static const String localFilePage = "/localFilePage";
-  static const String webPage = "/webPage";
-  static const String confluencePage = "/confluencePage";
-  static const String drivePage = "/drivePage";
-  static const String slackPage = "/slackPage";
+  static const String localFilePage = "/local-file-page";
+  static const String webPage = "/web-page";
+  static const String confluencePage = "/confluence-page";
+  static const String drivePage = "/drive-page";
+  static const String slackPage = "/slack-page";
+  static const String aiAction = "/ai-action";
 
   static final routes = <String, WidgetBuilder>{
     personal: (BuildContext context) => Builder(builder: (context) {
@@ -101,8 +100,6 @@
             );
           },
         ),
-    promptList: (BuildContext context) => PromptApp(),
-    forgotPassword: (BuildContext context) => ForgotPasswordPage(),
     previewChat:(BuildContext context) => Builder(
       builder: (context) {
         return MultiProvider(
@@ -120,6 +117,27 @@
     slackPage: (BuildContext context) => SlackPage(),
     confluencePage: (BuildContext context) => ConfluencePage(),
     drivePage: (BuildContext context) => DrivePage(),
-    email: (BuildContext context) => const EmailComposer(),
+    email: (BuildContext context) => Builder(
+      builder: (context) {
+        return MultiProvider(
+          providers: [
+            ChangeNotifierProvider.value(value: getIt<EmailComposerNotifier>()),
+            ChangeNotifierProvider.value(value: getIt<UsageTokenNotifier>()),
+          ],
+          child: const EmailComposer(),
+        );
+      }
+    ),
+    aiAction: (BuildContext context) => Builder(
+        builder: (context) {
+          return MultiProvider(
+            providers: [
+              ChangeNotifierProvider.value(value: getIt<EmailComposerNotifier>()),
+              ChangeNotifierProvider.value(value: getIt<UsageTokenNotifier>()),
+            ],
+            child: const EmailAction(),
+          );
+        }
+    ),
   };
 }
Index: step_ai/lib/features/email_composer/di/data_injection/email_composer_data_di.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/di/data_injection/email_composer_data_di.dart b/step_ai/lib/features/email_composer/di/data_injection/email_composer_data_di.dart
new file mode 100644
--- /dev/null	(date 1735236313877)
+++ b/step_ai/lib/features/email_composer/di/data_injection/email_composer_data_di.dart	(date 1735236313877)
@@ -0,0 +1,17 @@
+import 'package:get_it/get_it.dart';
+import 'package:step_ai/features/email_composer/data/network/api_response_email.dart';
+import 'package:step_ai/features/email_composer/data/network/api_usage.dart';
+
+import '../../data/repository/response_email_repository_impl.dart';
+import '../../data/repository/usage_repository_impl.dart';
+import '../../domain/repository/response_email_repository.dart';
+import '../../domain/repository/usage_repository.dart';
+
+final getIt = GetIt.instance;
+
+Future<void> initEmailComposerData() async {
+  getIt.registerSingleton<ApiResponseEmail>(ApiResponseEmail());
+  getIt.registerSingleton<ApiUsage>(ApiUsage());
+  getIt.registerSingleton<ResponseEmailRepository>(ResponseEmailRepositoryImpl(getIt<ApiResponseEmail>()));
+  getIt.registerSingleton<UsageRepository>(UsageRepositoryImpl(apiUsage: getIt<ApiUsage>()));
+}
\ No newline at end of file
Index: step_ai/lib/features/email_composer/di/presentation_injection/email_composer_presentation_di.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/di/presentation_injection/email_composer_presentation_di.dart b/step_ai/lib/features/email_composer/di/presentation_injection/email_composer_presentation_di.dart
new file mode 100644
--- /dev/null	(date 1735236313870)
+++ b/step_ai/lib/features/email_composer/di/presentation_injection/email_composer_presentation_di.dart	(date 1735236313870)
@@ -0,0 +1,16 @@
+import 'package:get_it/get_it.dart';
+import 'package:step_ai/features/email_composer/domain/repository/response_email_repository.dart';
+import 'package:step_ai/features/email_composer/domain/repository/usage_repository.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/compose_email_usecase.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/generate_email_response_usecase.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/generate_idea_usecase.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/get_usage_usecase.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/email_composer_notifier.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/usage_token_notifier.dart';
+
+final getIt = GetIt.instance;
+
+Future<void> initEmailComposerPresentation() async {
+  getIt.registerSingleton<EmailComposerNotifier>(EmailComposerNotifier(generateResponseEmailUsecase: getIt<GenerateResponseEmailUsecase>(), generateIdeaUsecase: getIt<GenerateIdeaUsecase>()));
+  getIt.registerSingleton<UsageTokenNotifier>(UsageTokenNotifier(usageTokenUsecase: getIt<GetUsageUsecase>()));
+}
\ No newline at end of file
Index: step_ai/lib/features/email_composer/di/domain_injection/email_composer_domain_di.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/di/domain_injection/email_composer_domain_di.dart b/step_ai/lib/features/email_composer/di/domain_injection/email_composer_domain_di.dart
new file mode 100644
--- /dev/null	(date 1735236313873)
+++ b/step_ai/lib/features/email_composer/di/domain_injection/email_composer_domain_di.dart	(date 1735236313873)
@@ -0,0 +1,21 @@
+import 'package:get_it/get_it.dart';
+import 'package:step_ai/features/email_composer/data/network/api_response_email.dart';
+import 'package:step_ai/features/email_composer/data/network/api_usage.dart';
+import 'package:step_ai/features/email_composer/data/repository/response_email_repository_impl.dart';
+import 'package:step_ai/features/email_composer/data/repository/usage_repository_impl.dart';
+import 'package:step_ai/features/email_composer/domain/repository/response_email_repository.dart';
+
+import '../../domain/repository/usage_repository.dart';
+import '../../domain/usecase/compose_email_usecase.dart';
+import '../../domain/usecase/generate_email_response_usecase.dart';
+import '../../domain/usecase/generate_idea_usecase.dart';
+import '../../domain/usecase/get_usage_usecase.dart';
+
+final getIt = GetIt.instance;
+
+Future<void> initEmailComposerDomain() async {
+  getIt.registerSingleton<ComposeEmailUsecase>(ComposeEmailUsecase(repository: getIt<ResponseEmailRepository>()));
+  getIt.registerSingleton<GenerateResponseEmailUsecase>(GenerateResponseEmailUsecase(repository: getIt<ResponseEmailRepository>()));
+  getIt.registerSingleton<GenerateIdeaUsecase>(GenerateIdeaUsecase(repository: getIt<ResponseEmailRepository>()));
+  getIt.registerSingleton<GetUsageUsecase>(GetUsageUsecase(repo: getIt<UsageRepository>()));
+}
\ No newline at end of file
Index: step_ai/lib/core/di/service_locator.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:get_it/get_it.dart';\n\nimport 'data/data_layer_injection.dart';\nimport 'domain/domain_layer_injection.dart';\nimport 'presentation/presentation_layer_injection.dart';\nimport 'package:step_ai/features/prompt/di/prompt_service_locator.dart';\n\nfinal getIt = GetIt.instance;\n\nclass ServiceLocator {\n  static Future<void> configureDependencies() async {\n    await DataLayerInjection.configureDataLayerInjection();\n    await DomainLayerInjection.configureDomainLayerInjection();\n    await PresentationLayerInjection.configurePresentationLayerInjection();\n    await initPromptService();\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/core/di/service_locator.dart b/step_ai/lib/core/di/service_locator.dart
--- a/step_ai/lib/core/di/service_locator.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/core/di/service_locator.dart	(date 1735236313865)
@@ -1,4 +1,5 @@
 import 'package:get_it/get_it.dart';
+import 'package:step_ai/features/email_composer/di/email_composer_service_locator.dart';
 
 import 'data/data_layer_injection.dart';
 import 'domain/domain_layer_injection.dart';
@@ -13,5 +14,6 @@
     await DomainLayerInjection.configureDomainLayerInjection();
     await PresentationLayerInjection.configurePresentationLayerInjection();
     await initPromptService();
+    await initEmailComposerServices();
   }
 }
\ No newline at end of file
Index: step_ai/lib/features/email_composer/presentation/notifier/ai_action_notifier.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/presentation/notifier/ai_action_notifier.dart b/step_ai/lib/features/email_composer/presentation/notifier/ai_action_notifier.dart
new file mode 100644
--- /dev/null	(date 1735252697990)
+++ b/step_ai/lib/features/email_composer/presentation/notifier/ai_action_notifier.dart	(date 1735252697990)
@@ -0,0 +1,47 @@
+
+
+import 'package:flutter/cupertino.dart';
+import 'package:step_ai/features/email_composer/domain/entity/compose_email.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/compose_email_usecase.dart';
+
+import '../../domain/entity/response_email.dart';
+
+class AiActionNotifier extends ChangeNotifier {
+  List<String> ideas = [];
+  var isGeneratingEmail = false;
+  var hasError = false;
+  List<ResponseEmail> emailList = [];
+  int currentEmailIndex = -1;
+  final ComposeEmailUsecase _composeEmailUsecase;
+
+  AiActionNotifier({required ComposeEmailUsecase composeEmailUsecase}) : _composeEmailUsecase = composeEmailUsecase;
+
+
+  Future<void> composeEmail(ComposeEmail email) async {
+    isGeneratingEmail = true;
+    notifyListeners();
+
+    try {
+      emailList.add(await _composeEmailUsecase.call(params: email));
+    } catch (e) {
+      hasError = true;
+    } finally {
+      isGeneratingEmail = false;
+      notifyListeners();
+    }
+  }
+
+  void previousEmail() {
+    if (currentEmailIndex > 0) {
+      currentEmailIndex--;
+      notifyListeners();
+    }
+  }
+
+  void nextEmail() {
+    if (currentEmailIndex < emailList.length - 1) {
+      currentEmailIndex++;
+      notifyListeners();
+    }
+  }
+}
Index: step_ai/lib/shared/widgets/history_drawer.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// ignore_for_file: unused_import\n\nimport 'package:flutter/material.dart';\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\nimport 'package:google_fonts/google_fonts.dart';\nimport 'package:loading_animation_widget/loading_animation_widget.dart';\nimport 'package:provider/provider.dart';\nimport 'package:step_ai/config/routes/routes.dart';\nimport 'package:step_ai/core/di/service_locator.dart';\nimport 'package:step_ai/features/authentication/domain/usecase/logout_usecase.dart';\nimport 'package:step_ai/features/chat/notifier/chat_notifier.dart';\nimport 'package:step_ai/features/chat/notifier/history_conversation_list_notifier.dart';\nimport 'package:step_ai/features/chat/notifier/personal_assistant_notifier.dart';\nimport 'package:step_ai/shared/styles/horizontal_spacing.dart';\nimport 'package:step_ai/shared/styles/vertical_spacing.dart';\nimport 'package:step_ai/shared/widgets/app_name_widget.dart';\nimport 'package:step_ai/features/plan/presentation/pages/plan_pricing_page.dart';\nimport 'package:step_ai/shared/widgets/search_bar.dart';\nimport '../../features/personal/presentation/pages/playground_page.dart';\nimport '../styles/colors.dart';\n\nclass HistoryDrawer extends StatefulWidget {\n  HistoryDrawer({super.key});\n\n  @override\n  State<HistoryDrawer> createState() => _HistoryDrawerState();\n}\n\nclass _HistoryDrawerState extends State<HistoryDrawer> {\n  final TextEditingController searchController = TextEditingController();\n\n  final LogoutUseCase _logoutUseCase = getIt<LogoutUseCase>();\n  final PersonalAssistantNotifier _personalAssistantNotifier\n      = getIt<PersonalAssistantNotifier>();\n  final ChatNotifier _chatNotifier = getIt<ChatNotifier>();\n\n  final ScrollController _scrollController = ScrollController();\n\n  @override\n  void initState() {\n    super.initState();\n\n    // Lắng nghe sự kiện cuộn\n    _scrollController.addListener(() {\n      if (_scrollController.position.pixels ==\n              _scrollController.position.maxScrollExtent &&\n          Provider.of<HistoryConversationListNotifier>(context, listen: false)\n              .hasMore) {\n        //print(\"Scroll to bottom\");\n        try {\n          Provider.of<HistoryConversationListNotifier>(context, listen: false)\n              .getHistoryConversationList();\n        } catch (e) {\n          print(e);\n        }\n      }\n    });\n  }\n\n  @override\n  void dispose() {\n    _scrollController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    final historyConversationListNotifier =\n        Provider.of<HistoryConversationListNotifier>(context);\n    FocusScope.of(context).requestScopeFocus();\n    return SafeArea(\n      child: Drawer(\n        shape: const RoundedRectangleBorder(\n          borderRadius: BorderRadius.only(\n            topRight: Radius.circular(10),\n            bottomRight: Radius.circular(10),\n          ),\n        ),\n        backgroundColor: Colors.transparent,\n        child: Column(\n          children: [\n            //Logo and App Name\n            Container(\n              margin: const EdgeInsets.only(right: 10, top: 10),\n              padding: const EdgeInsets.all(10),\n              decoration: BoxDecoration(\n                boxShadow: [\n                  BoxShadow(\n                      offset: const Offset(-3, 3),\n                      color: TColor.slate.withOpacity(0.5),\n                      blurRadius: 3.0)\n                ],\n                border: const Border(\n                  bottom: BorderSide.none, // Remove the line\n                ),\n                borderRadius: const BorderRadius.only(\n                    topRight: Radius.circular(10),\n                    bottomRight: Radius.circular(10)),\n                color: TColor.tamarama,\n              ),\n              child: Column(\n                children: [\n                  Center(\n                      child: AppNameWidget(\n                    name: 'lib/core/assets/imgs/step-ai-logo-white.png',\n                  )),\n                  VSpacing.sm,\n                  // Search Bar\n                  CustomSearchBar(onChanged: (_) {}),\n                ],\n              ),\n            ),\n\n            // Expanded List\n            // View for Bots and Histories\n            Container(\n              margin: const EdgeInsets.only(top: 10, bottom: 10, right: 10),\n              decoration: BoxDecoration(\n                color: TColor.doctorWhite,\n                boxShadow: [\n                  BoxShadow(\n                      offset: const Offset(-3, 3),\n                      color: TColor.slate.withOpacity(0.5),\n                      blurRadius: 3.0)\n                ],\n                border: const Border(\n                  bottom: BorderSide.none, // Remove the line\n                ),\n                borderRadius: const BorderRadius.only(\n                  topRight: Radius.circular(10),\n                  bottomRight: Radius.circular(10),\n                ),\n              ),\n              child: Column(\n                children: [\n                  Column(\n                    children: [\n                      Row(\n                        children: [\n                          Expanded(\n                              child: Material(\n                                color: Colors.transparent,\n                                child: InkWell(\n                                  borderRadius: const BorderRadius.only(\n                                      topRight: Radius.circular(10)),\n                                  splashColor: TColor.petRock.withOpacity(0.3),\n                                  onTap: () {\n                                    Navigator.of(context).pushNamedAndRemoveUntil(\n                                      Routes.chat,\n                                          (Route<dynamic> route) => false,\n                                    );\n                                  },\n                                  child: Center(\n                                    child: Padding(\n                                      padding: const EdgeInsets.all(8.0),\n                                      child: Text(\n                                        \"Chat\",\n                                        style: Theme.of(context)\n                                            .textTheme\n                                            .displayMedium\n                                            ?.copyWith(\n                                            color: TColor.petRock,\n                                            fontSize: 16,\n                                            fontWeight: FontWeight.w600),\n                                      ),\n                                    ),\n                                  ),\n                                ),\n                              )),\n                        ],\n                      ),\n                      Row(\n                        children: [\n                          Expanded(\n                              child: Material(\n                            color: Colors.transparent,\n                            child: InkWell(\n                              splashColor: TColor.petRock.withOpacity(0.3),\n                              onTap: () {\n                                Navigator.of(context).pushNamedAndRemoveUntil(\n                                  Routes.personal,\n                                  (Route<dynamic> route) => false,\n                                );\n                              },\n                              child: Center(\n                                child: Padding(\n                                  padding: const EdgeInsets.all(8.0),\n                                  child: Text(\n                                    \"Personal\",\n                                    style: Theme.of(context)\n                                        .textTheme\n                                        .displayMedium\n                                        ?.copyWith(\n                                            color: TColor.petRock,\n                                            fontSize: 16,\n                                            fontWeight: FontWeight.w600),\n                                  ),\n                                ),\n                              ),\n                            ),\n                          )),\n                        ],\n                      ),\n                      Row(\n                        children: [\n                          Expanded(\n                            child: Material(\n                              color: Colors.transparent,\n                              child: InkWell(\n                                borderRadius: const BorderRadius.only(\n                                    bottomRight: Radius.circular(10)),\n                                splashColor: TColor.petRock.withOpacity(0.3),\n                                onTap: () {\n                                  if (context.mounted) {\n                                    Navigator.of(context).pushNamedAndRemoveUntil(\n                                      Routes.planAndPricing,\n                                          (Route<dynamic> route) => false,\n                                    );\n                                  }\n                                },\n                                child: Center(\n                                  child: Padding(\n                                    padding: const EdgeInsets.all(8.0),\n                                    child: Text(\n                                      \"Plan & pricing\",\n                                      style: Theme.of(context)\n                                          .textTheme\n                                          .displayMedium\n                                          ?.copyWith(\n                                              color: TColor.petRock,\n                                              fontSize: 16,\n                                              fontWeight: FontWeight.w600),\n                                    ),\n                                  ),\n                                ),\n                              ),\n                            ),\n                          ),\n                          VSpacing.sm,\n                        ],\n                      ),\n                    ],\n                  ),\n                  // List of BOTs\n                ],\n              ),\n            ),\n            Expanded(\n              child: Container(\n                decoration: BoxDecoration(\n                    color: TColor.doctorWhite,\n                    boxShadow: [\n                      BoxShadow(\n                          offset: const Offset(-3, 3),\n                          color: TColor.slate.withOpacity(0.5),\n                          blurRadius: 3.0)\n                    ],\n                    border: const Border(\n                      bottom: BorderSide.none, // Remove the line\n                    ),\n                    borderRadius: const BorderRadius.only(\n                        topRight: Radius.circular(10),\n                        bottomRight: Radius.circular(10))),\n                padding: const EdgeInsets.only(right: 10, top: 10, bottom: 10),\n                margin: const EdgeInsets.only(bottom: 10, right: 10),\n                child: Column(\n                  children: [\n                    Text(\n                      'History',\n                      style: GoogleFonts.aBeeZee(\n                          color: TColor.petRock,\n                          fontWeight: FontWeight.w800,\n                          fontSize: 20),\n                    ),\n                    Expanded(\n                      child: ListView.separated(\n                        controller: _scrollController,\n                        padding: EdgeInsets.zero,\n                        shrinkWrap: true,\n                        itemCount: historyConversationListNotifier\n                                .historyConversationList.length +\n                            (historyConversationListNotifier.hasMore ? 1 : 0),\n                        itemBuilder: (context, index) {\n                          if (index ==\n                                  historyConversationListNotifier\n                                      .historyConversationList.length &&\n                              historyConversationListNotifier.hasMore) {\n                            return Center(\n                              child: Padding(\n                                padding: const EdgeInsets.all(3.0),\n                                child: LoadingAnimationWidget.twistingDots(\n                                  size: 50,\n                                  leftDotColor: TColor.tamarama,\n                                  rightDotColor: TColor.daJuice,\n                                ),\n                              ),\n                            );\n                          }\n                          return ListTile(\n                              leading: Icon(\n                                Icons.access_time,\n                                color: TColor.petRock.withOpacity(0.5),\n                              ),\n                              title: Text(\n                                \"${historyConversationListNotifier.historyConversationList[index].title}\",\n                                style: Theme.of(context)\n                                    .textTheme\n                                    .bodyMedium\n                                    ?.copyWith(\n                                        color: TColor.petRock.withOpacity(0.5),\n                                        fontSize: 16,\n                                        fontWeight: FontWeight.w800),\n                              ),\n                              onTap: () async {\n                                if (Provider.of<ChatNotifier>(context,\n                                            listen: false)\n                                        .idCurrentConversation ==\n                                    historyConversationListNotifier\n                                        .historyConversationList[index].id) {\n                                  Navigator.pop(context);\n                                  return;\n                                }\n\n                                await Provider.of<ChatNotifier>(context,\n                                        listen: false)\n                                    .resetChatNotifier();\n                                if (context.mounted) {\n                                  Provider.of<ChatNotifier>(context,\n                                              listen: false)\n                                          .idCurrentConversation =\n                                      historyConversationListNotifier\n                                          .historyConversationList[index].id;\n                                  Navigator.of(context).pushNamedAndRemoveUntil(\n                                    Routes.chat,\n                                    (Route<dynamic> route) => false,\n                                  );\n                                }\n                              });\n                        },\n                        separatorBuilder: (BuildContext context, int index) {\n                          return const Padding(\n                            padding: EdgeInsets.only(left: 10.0),\n                            child: Divider(),\n                          );\n                        },\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n            Container(\n              decoration: BoxDecoration(\n                  color: TColor.doctorWhite,\n                  boxShadow: [\n                    BoxShadow(\n                        offset: const Offset(-3, 3),\n                        color: TColor.slate.withOpacity(0.5),\n                        blurRadius: 3.0)\n                  ],\n                  border: const Border(\n                    bottom: BorderSide.none, // Remove the line\n                  ),\n                  borderRadius: const BorderRadius.only(\n                      topRight: Radius.circular(10),\n                      bottomRight: Radius.circular(10))),\n              padding: const EdgeInsets.only(right: 10, top: 10, bottom: 10),\n              margin: const EdgeInsets.only(bottom: 10, right: 10),\n              child: Row(\n                children: [\n                  Expanded(\n                      child: InkWell(\n                    onTap: () {\n                      try {\n                        _logoutUseCase.call(params: null);\n                        _personalAssistantNotifier.reset();\n                        _chatNotifier.reset();\n                        Navigator.of(context)\n                            .pushNamedAndRemoveUntil(\n                            Routes.authenticate,\n                                (Route<dynamic> route) => false\n                        );\n                      } catch (e) {\n                        print(e);\n                      }\n                    },\n                    child: Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: Row(\n                        mainAxisAlignment: MainAxisAlignment.center,\n                        children: [\n                          Icon(\n                            Icons.logout_outlined,\n                            color: TColor.poppySurprise,\n                            size: 20,\n                          ),\n                          const SizedBox(\n                            width: 10,\n                          ),\n                          Text(\n                            \"Log out\",\n                            style: GoogleFonts.aBeeZee(\n                                color: TColor.poppySurprise,\n                                fontWeight: FontWeight.w700,\n                                fontSize: 18),\n                          ),\n                        ],\n                      ),\n                    ),\n                  )),\n                ],\n              ),\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/shared/widgets/history_drawer.dart b/step_ai/lib/shared/widgets/history_drawer.dart
--- a/step_ai/lib/shared/widgets/history_drawer.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/shared/widgets/history_drawer.dart	(date 1735237462983)
@@ -186,19 +186,51 @@
                                 child: Padding(
                                   padding: const EdgeInsets.all(8.0),
                                   child: Text(
-                                    "Personal",
+                                    "Playground",
                                     style: Theme.of(context)
                                         .textTheme
                                         .displayMedium
                                         ?.copyWith(
+                                            color: TColor.petRock,
+                                            fontSize: 16,
+                                            fontWeight: FontWeight.w600),
+                                  ),
+                                ),
+                              ),
+                            ),
+                          )),
+                        ],
+                      ),
+                      Row(
+                        children: [
+                          Expanded(
+                              child: Material(
+                                color: Colors.transparent,
+                                child: InkWell(
+                                  splashColor: TColor.petRock.withOpacity(0.3),
+                                  onTap: () {
+                                    Navigator.of(context).pushNamedAndRemoveUntil(
+                                      Routes.email,
+                                          (Route<dynamic> route) => false,
+                                    );
+                                  },
+                                  child: Center(
+                                    child: Padding(
+                                      padding: const EdgeInsets.all(8.0),
+                                      child: Text(
+                                        "Email composer",
+                                        style: Theme.of(context)
+                                            .textTheme
+                                            .displayMedium
+                                            ?.copyWith(
                                             color: TColor.petRock,
                                             fontSize: 16,
                                             fontWeight: FontWeight.w600),
-                                  ),
-                                ),
-                              ),
-                            ),
-                          )),
+                                      ),
+                                    ),
+                                  ),
+                                ),
+                              )),
                         ],
                       ),
                       Row(
Index: step_ai/lib/features/email_composer/presentation/pages/email_action.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/presentation/pages/email_action.dart b/step_ai/lib/features/email_composer/presentation/pages/email_action.dart
new file mode 100644
--- /dev/null	(date 1735252975388)
+++ b/step_ai/lib/features/email_composer/presentation/pages/email_action.dart	(date 1735252975388)
@@ -0,0 +1,754 @@
+import 'dart:math';
+
+import 'package:flutter/material.dart';
+import 'package:flutter/services.dart';
+import 'package:loading_animation_widget/loading_animation_widget.dart';
+import 'package:provider/provider.dart';
+import 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';
+import 'package:step_ai/features/email_composer/domain/entity/email_style.dart';
+import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
+import 'package:step_ai/features/email_composer/domain/usecase/generate_email_response_usecase.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/email_composer_notifier.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/usage_token_notifier.dart';
+import 'package:step_ai/features/email_composer/presentation/widgets/action_tile.dart';
+import 'package:step_ai/features/prompt/presentation/widgets/language_custom_dropdown.dart';
+import 'package:step_ai/shared/styles/horizontal_spacing.dart';
+import 'package:step_ai/shared/styles/vertical_spacing.dart';
+import 'package:step_ai/shared/widgets/category_chips_selector.dart';
+import 'package:step_ai/shared/widgets/history_drawer.dart';
+import '../../../../config/routes/routes.dart';
+import '../../../../shared/usecases/pricing_redirect_service.dart';
+import '../../../../shared/widgets/gradient_text.dart';
+import '../../../../shared/widgets/image_by_text_widget.dart';
+import '../../../email_composer/domain/entity/assistant.dart';
+import 'package:step_ai/features/email_composer/presentation/widgets/ai_selector.dart';
+import 'package:step_ai/shared/widgets/category_selector.dart';
+
+import '../../../../config/constants.dart';
+import '../../../../shared/styles/colors.dart';
+import '../../domain/usecase/generate_idea_usecase.dart';
+
+class EmailAction extends StatefulWidget {
+  const EmailAction({super.key});
+
+  @override
+  State<EmailAction> createState() => _EmailActionState();
+}
+
+class _EmailActionState extends State<EmailAction> {
+  final _formKey = GlobalKey<FormState>();
+
+  var _isGeneratingEmail = false;
+
+  final TextEditingController _subjectController = TextEditingController();
+  final TextEditingController _senderController = TextEditingController();
+  final TextEditingController _receiverController = TextEditingController();
+  final TextEditingController _yourEmailController = TextEditingController();
+  final TextEditingController _mainIdeaController = TextEditingController();
+  final _formalityOptions = Constant.formalityOptions.keys.toList();
+  final _toneOptions = Constant.toneOptions.keys.toList();
+  final _lengthOptions = Constant.lengthOptions.keys.toList();
+  final _assistantList = Constant.baseModels.map(Assistant.fromJson).toList();
+  final _languages = Constant.languages;
+  late String _selectedFormality;
+  late String _selectedTone;
+  late String _selectedLength;
+  late Assistant _selectedAssistant;
+  late String _selectedLanguage;
+  late EmailComposerNotifier _composerNotifier;
+  late UsageTokenNotifier _notifier;
+  List<String> ideas = [];
+
+  @override
+  void initState() {
+    super.initState();
+    _selectedFormality = _formalityOptions.first;
+    _selectedTone = _toneOptions.first;
+    _selectedLength = _lengthOptions.first;
+    _selectedAssistant = _assistantList.first;
+    _selectedLanguage = _languages.keys.first;
+
+    _mainIdeaController.addListener(_textChange);
+    _yourEmailController.addListener(_textChange);
+    final notifier = Provider.of<UsageTokenNotifier>(context, listen: false);
+
+    WidgetsBinding.instance.addPostFrameCallback((_) async {
+      await notifier.loadUsageToken();
+    });
+
+    notifier.addListener(() {
+      if (notifier.hasError) {
+        Navigator.of(context).pushReplacementNamed(Routes.authenticate);
+      }
+    });
+  }
+
+  void _textChange() {
+    setState(() {});
+  }
+
+  @override
+  void dispose() {
+    _mainIdeaController.removeListener(_textChange);
+    _yourEmailController.removeListener(_textChange);
+    // Dispose controllers to free resources
+    _subjectController.dispose();
+    _senderController.dispose();
+    _receiverController.dispose();
+    _yourEmailController.dispose();
+    _mainIdeaController.dispose();
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      if (mounted) {
+        final notifier =
+        Provider.of<UsageTokenNotifier>(context, listen: false);
+        notifier.removeListener(() {});
+      }
+    });
+
+    super.dispose();
+  }
+
+  String? _validateField(String? value) {
+    if (value == null || value.trim().isEmpty) {
+      return 'Put a few words into it';
+    }
+    return null;
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    _composerNotifier =
+        Provider.of<EmailComposerNotifier>(context, listen: true);
+    _notifier = Provider.of<UsageTokenNotifier>(context, listen: true);
+
+    return Scaffold(
+      resizeToAvoidBottomInset: true,
+      drawer: HistoryDrawer(),
+      onDrawerChanged: (isOpened) {
+        if (isOpened) {
+          FocusScope.of(context).unfocus();
+        }
+      },
+      appBar: AppBar(
+        title: const Text("Email Action"),
+      ),
+      body: Padding(
+        padding: const EdgeInsets.all(8.0),
+        child: _buildForm(),
+      ),
+    );
+  }
+
+  Widget _buildResult(String email) {
+    return SingleChildScrollView(
+      child: Column(
+        children: [
+          Row(
+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
+            children: [
+              Text(
+                'Word count: ${email.trim().split(RegExp(r'\s+')).length}',
+                style: Theme.of(context).textTheme.bodyMedium,
+              ),
+              Row(
+                children: [
+                  IconButton(
+                    onPressed: () {
+                      // Implement copying logic
+                      Clipboard.setData(ClipboardData(text: email));
+                    },
+                    tooltip: 'Copy',
+                    icon: const Icon(Icons.copy_rounded),
+                  ),
+                ],
+              ),
+            ],
+          ),
+          Text(email, style: Theme.of(context).textTheme.bodyLarge),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildForm() {
+    return Padding(
+      padding: const EdgeInsets.all(8.0),
+      child: Form(
+        key: _formKey,
+        child: SizedBox(
+          height: MediaQuery.of(context).size.height,
+          child: Column(
+            mainAxisSize: MainAxisSize.max,
+            mainAxisAlignment: MainAxisAlignment.start,
+            children: [
+              Expanded(
+                child: SingleChildScrollView(
+                  child: Column(
+                    children: [
+                      _buildEmailFormField("Email:",
+                          _yourEmailController, _validateField),
+                      Padding(
+                        padding: const EdgeInsets.all(8.0),
+                        child: CollapsibleCategoryChips(categories: Constant.actionType.keys.toList(), selectedCategory: Constant.actionType.keys.first, isExpanded: true, onCategorySelected: (c) {}, onToggleExpanded: (){}),
+                      )
+                    ],
+                  ),
+                ),
+              ),
+              Padding(
+                padding: const EdgeInsets.only(bottom: 20.0),
+                child: SafeArea(
+                  child: Align(
+                    alignment: Alignment.bottomCenter,
+                    child: Column(
+                      children: [
+                        Padding(
+                            padding: const EdgeInsets.all(8.0),
+                            child: Row(
+                                mainAxisAlignment:
+                                MainAxisAlignment.spaceBetween,
+                                crossAxisAlignment: CrossAxisAlignment.center,
+                                children: [
+                                  AiSelector(
+                                    assistants: _assistantList,
+                                    onAssistantSelected: (a) {
+                                      setState(() {
+                                        _selectedAssistant = a;
+                                      });
+                                    },
+                                    selectedAssistant: _selectedAssistant,
+                                  ),
+                                  IconButton(
+                                    tooltip: "Generate ideas",
+                                    onPressed:
+                                    _composerNotifier.isGeneratingIdea
+                                        ? () {}
+                                        : () async {
+                                      if (_formKey.currentState!
+                                          .validate()) {
+                                        await _generateIdeas();
+                                      } else {
+                                        showErrorDialog(
+                                            context,
+                                            Constant.errorMessage[
+                                            'empty-email']!);
+                                      }
+                                    },
+                                    icon: _composerNotifier.isGeneratingIdea
+                                        ? Row(
+                                      children: [
+                                        LoadingAnimationWidget
+                                            .discreteCircle(
+                                            color: TColor.doctorWhite,
+                                            size: 12),
+                                        HSpacing.sm,
+                                        Text(
+                                          "Generating...",
+                                          style: Theme.of(context)
+                                              .textTheme
+                                              .titleLarge!
+                                              .copyWith(
+                                            fontSize: 13,
+                                            color: TColor.doctorWhite,
+                                            fontWeight:
+                                            FontWeight.w800,
+                                          ),
+                                        ),
+                                      ],
+                                    )
+                                        : Icon(
+                                      Icons.lightbulb_outline_rounded,
+                                      color: TColor.doctorWhite,
+                                    ),
+                                    color: TColor.goldenState,
+                                    highlightColor: TColor.goldenState,
+                                    style: ButtonStyle(
+                                        backgroundColor:
+                                        _composerNotifier.isGeneratingIdea
+                                            ? WidgetStatePropertyAll(
+                                            TColor.goldenState)
+                                            : WidgetStatePropertyAll(
+                                            TColor.tamarama)),
+                                  )
+                                ])),
+                        _buildActionField(_mainIdeaController),
+                        const SizedBox(
+                          height: 2,
+                        ),
+                        Padding(
+                          padding: const EdgeInsets.only(left: 10),
+                          child: Row(
+                            children: [
+                              ImageByText(
+                                imagePath: "lib/core/assets/imgs/flame.png",
+                                text: _notifier.model != null
+                                    ? _notifier.model!.availableTokens
+                                    .toString()
+                                    : "",
+                              ),
+                              HSpacing.sm,
+                              Material(
+                                color: Colors.transparent,
+                                child: InkWell(
+                                  borderRadius: BorderRadius.circular(20),
+                                  onTap: () async =>
+                                  await PricingRedirectService.call(),
+                                  child: Padding(
+                                    padding: const EdgeInsets.all(4.0),
+                                    child: Row(
+                                      children: [
+                                        Icon(
+                                          Icons.rocket_launch_rounded,
+                                          color: TColor.tamarama,
+                                        ),
+                                        const SizedBox(
+                                          width: 3,
+                                        ),
+                                        GradientText(
+                                          'Upgrade',
+                                          style: Theme.of(context)
+                                              .textTheme
+                                              .titleMedium!
+                                              .copyWith(
+                                            color: TColor.tamarama,
+                                            fontWeight: FontWeight.w600,
+                                            fontSize: 14,
+                                          ),
+                                          gradient: LinearGradient(
+                                            begin: Alignment.bottomLeft,
+                                            end: Alignment.topRight,
+                                            tileMode: TileMode.decal,
+                                            colors: [
+                                              TColor.tamarama,
+                                              TColor.goldenState,
+                                            ],
+                                          ),
+                                        ),
+                                      ],
+                                    ),
+                                  ),
+                                ),
+                              ),
+                            ],
+                          ),
+                        ),
+                      ],
+                    ),
+                  ),
+                ),
+              ),
+            ],
+          ),
+        ),
+      ),
+    );
+  }
+
+  Future<void> _generateIdeas(
+      {String suggestion = "Suggest 3 ideas for this email"}) async {
+    EmailStyle style = EmailStyle(
+        formality: _selectedFormality,
+        length: _selectedLength,
+        tone: _selectedTone);
+    AiEmail email = _buildAiEmail(style, suggestion, _mainIdeaController.text);
+    await _composerNotifier.generateIdeas(email);
+  }
+
+  AiEmail _buildAiEmail(EmailStyle style, String action, String mainIdea) {
+    return AiEmail(
+      subject: _subjectController.text,
+      sender: _senderController.text,
+      receiver: _receiverController.text,
+      action: action,
+      email: _yourEmailController.text,
+      mainIdea: mainIdea,
+      language: _languages[_selectedLanguage] ?? "English",
+      style: style,
+    );
+  }
+
+  Widget _buildAdvancedOptionsButton() {
+    return Material(
+      color: Colors.transparent,
+      child: InkWell(
+        focusColor: Colors.transparent,
+        splashColor: TColor.northEastSnow,
+        hoverColor: Colors.transparent,
+        borderRadius: BorderRadius.circular(10),
+        onTap: () {
+          showDialog(
+              context: context,
+              builder: (_) {
+                return _buildStyleAndLength();
+              });
+        },
+        child: Padding(
+          padding: const EdgeInsets.all(4.0),
+          child: Text(
+            "Advanced Options",
+            style: Theme.of(context).textTheme.titleLarge!.copyWith(
+                fontSize: 13,
+                color: TColor.tamarama,
+                fontWeight: FontWeight.w800),
+          ),
+        ),
+      ),
+    );
+  }
+
+  Widget _buildStyleAndLength() {
+    return Dialog(
+      backgroundColor: TColor.doctorWhite,
+      child: StatefulBuilder(
+        builder: (BuildContext context, StateSetter setState) {
+          return Padding(
+            padding: const EdgeInsets.all(20.0),
+            child: SizedBox(
+              width: min(450, MediaQuery.of(context).size.width * 0.8),
+              height: 600,
+              child: SingleChildScrollView(
+                child: Column(
+                  crossAxisAlignment: CrossAxisAlignment.start,
+                  children: [
+                    Row(
+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                      children: [
+                        Text("Advanced Options",
+                            style: Theme.of(context).textTheme.bodyLarge),
+                        CloseButton(
+                          onPressed: Navigator.of(context).pop,
+                        )
+                      ],
+                    ),
+                    _buildRowFormField("Subject:", _subjectController),
+                    _buildRowFormField("From:", _senderController),
+                    _buildRowFormField("To:", _receiverController),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: Text(
+                        "Language:",
+                        style: Theme.of(context).textTheme.titleSmall!.copyWith(
+                          color: TColor.petRock.withOpacity(0.8),
+                          fontSize: 14,
+                        ),
+                      ),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: LanguageCustomDropdown(
+                          value: _selectedLanguage,
+                          items: _languages,
+                          onChanged: (e) {
+                            setState(() {
+                              _selectedLanguage = e ?? "Auto";
+                            });
+                          },
+                          hintText: "Select a language"),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: Text(
+                        "Length:",
+                        style: Theme.of(context).textTheme.titleSmall!.copyWith(
+                          color: TColor.petRock.withOpacity(0.8),
+                          fontSize: 14,
+                        ),
+                      ),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: CategoryChips(
+                          categories: _lengthOptions,
+                          selectedCategory: _selectedLength,
+                          onCategorySelected: (e) {
+                            setState(() {
+                              _selectedLength = e;
+                            });
+                          }),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: Text(
+                        "Formality:",
+                        style: Theme.of(context).textTheme.titleSmall!.copyWith(
+                          color: TColor.petRock.withOpacity(0.8),
+                          fontSize: 14,
+                        ),
+                      ),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: CategoryChips(
+                          categories: _formalityOptions,
+                          selectedCategory: _selectedFormality,
+                          onCategorySelected: (e) {
+                            setState(() {
+                              _selectedFormality = e;
+                            });
+                          }),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: Text(
+                        "Tone:",
+                        style: Theme.of(context).textTheme.titleSmall!.copyWith(
+                          color: TColor.petRock.withOpacity(0.8),
+                          fontSize: 14,
+                        ),
+                      ),
+                    ),
+                    Padding(
+                      padding: const EdgeInsets.all(8.0),
+                      child: CategoryChips(
+                          categories: _toneOptions,
+                          selectedCategory: _selectedTone,
+                          onCategorySelected: (e) {
+                            setState(() {
+                              _selectedTone = e;
+                            });
+                          }),
+                    ),
+                  ],
+                ),
+              ),
+            ),
+          );
+        },
+      ),
+    );
+  }
+
+  Widget _buildActionField(TextEditingController controller) {
+    return Padding(
+      padding: const EdgeInsets.all(8.0),
+      child: TextField(
+        enabled: !_isGeneratingEmail,
+        style: Theme.of(context).textTheme.bodyMedium!.copyWith(
+          color: TColor.petRock,
+          fontWeight: FontWeight.w600,
+          fontSize: 13,
+        ),
+        controller: controller,
+        decoration: InputDecoration(
+          suffixIcon: _mainIdeaController.text.isNotEmpty
+              ? IconButton(
+            padding: const EdgeInsets.all(2),
+            icon: _isGeneratingEmail
+                ? Container(
+                decoration: BoxDecoration(
+                  borderRadius: BorderRadius.circular(50),
+                  color: TColor.tamarama,
+                ),
+                child: Padding(
+                  padding: const EdgeInsets.all(4.0),
+                  child: LoadingAnimationWidget.discreteCircle(
+                      color: TColor.doctorWhite, size: 12),
+                ))
+                : Icon(Icons.send_rounded,
+                size: 20, color: TColor.tamarama),
+            onPressed: () async {
+              if (_formKey.currentState!.validate()) {
+                setState(() {
+                  _isGeneratingEmail = true;
+                });
+                await _composeEmail(_mainIdeaController.text);
+                _mainIdeaController.clear();
+                setState(() {
+                  _isGeneratingEmail = false;
+                });
+              } else {
+                showErrorDialog(
+                    context, Constant.errorMessage['empty-email']!);
+              }
+            },
+          )
+              : IconButton(
+            padding: const EdgeInsets.all(2),
+            icon:
+            Icon(Icons.send_rounded, size: 20, color: TColor.petRock),
+            onPressed: () {
+              showErrorDialog(
+                  context, Constant.errorMessage['empty-email']!);
+            },
+          ),
+          hintText: "Tell STEP how you would like to reply...",
+          floatingLabelBehavior: FloatingLabelBehavior.auto,
+          hintStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(
+            color: TColor.petRock.withOpacity(0.7),
+            fontWeight: FontWeight.w600,
+            fontSize: 13,
+          ),
+          labelStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(
+            color: TColor.petRock.withOpacity(0.7),
+            fontWeight: FontWeight.w600,
+            fontSize: 13,
+          ),
+          filled: true,
+          fillColor: TColor.northEastSnow,
+          focusedBorder: OutlineInputBorder(
+            borderRadius: BorderRadius.circular(50.0),
+            borderSide: BorderSide(
+              color: TColor.tamarama,
+            ),
+          ),
+          border: OutlineInputBorder(
+            borderRadius: BorderRadius.circular(50.0),
+            borderSide: BorderSide.none,
+          ),
+        ),
+      ),
+    );
+  }
+
+
+  Widget _buildRowFormField(String label, TextEditingController controller) {
+    return Padding(
+      padding: const EdgeInsets.all(8.0),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.start,
+        children: [
+          Text(
+            label,
+            style: Theme.of(context).textTheme.titleMedium!.copyWith(
+              color: TColor.petRock.withOpacity(0.8),
+              fontSize: 14,
+            ),
+          ),
+          TextFormField(
+            style: Theme.of(context).textTheme.titleSmall!.copyWith(
+              color: TColor.petRock,
+              fontSize: 14,
+              fontWeight: FontWeight.w800,
+            ),
+            controller: controller,
+            decoration: InputDecoration(
+              floatingLabelBehavior: FloatingLabelBehavior.auto,
+              hintStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(
+                color: TColor.petRock.withOpacity(0.7),
+                fontWeight: FontWeight.w600,
+                fontSize: 13,
+              ),
+              labelStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(
+                color: TColor.petRock.withOpacity(0.7),
+                fontWeight: FontWeight.w600,
+                fontSize: 13,
+              ),
+              filled: true,
+              fillColor: TColor.northEastSnow,
+              focusedBorder: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(8.0),
+                borderSide: BorderSide(
+                  color: TColor.tamarama,
+                ),
+              ),
+              border: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(8.0),
+                borderSide: BorderSide.none,
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+
+  Widget _buildEmailFormField(String label, TextEditingController controller,
+      FormFieldValidator<String> validator) {
+    return Padding(
+      padding: const EdgeInsets.all(8.0),
+      child: Column(
+        crossAxisAlignment: CrossAxisAlignment.end,
+        children: [
+          Text(
+            label,
+            style: Theme.of(context).textTheme.bodyMedium!.copyWith(
+              color: TColor.petRock,
+              fontWeight: FontWeight.w700,
+              fontSize: 14,
+            ),
+          ),
+          VSpacing.sm,
+          TextFormField(
+            maxLines: 10,
+            minLines: 10,
+            controller: controller,
+            validator: validator,
+            decoration: InputDecoration(
+              hintText: "Your email",
+              hintStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(
+                color: TColor.petRock.withOpacity(0.7),
+                fontWeight: FontWeight.w600,
+                fontSize: 13,
+              ),
+              labelStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(
+                color: TColor.petRock.withOpacity(0.7),
+                fontWeight: FontWeight.w700,
+                fontSize: 13,
+              ),
+              filled: true,
+              fillColor: TColor.northEastSnow,
+              focusedBorder: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(8.0),
+                borderSide: BorderSide(
+                  color: TColor.tamarama,
+                ),
+              ),
+              border: OutlineInputBorder(
+                borderRadius: BorderRadius.circular(8.0),
+                borderSide: BorderSide.none,
+              ),
+            ),
+          ),
+        ],
+      ),
+    );
+  }
+
+  void showErrorDialog(BuildContext context, String error) {
+    showDialog(
+      context: context,
+      builder: (BuildContext context) {
+        return AlertDialog(
+          backgroundColor: TColor.doctorWhite,
+          title: Row(
+            mainAxisAlignment: MainAxisAlignment.spaceBetween,
+            children: [
+              Text(
+                "Oops!",
+                style: Theme.of(context).textTheme.bodyLarge!.copyWith(
+                  fontWeight: FontWeight.w800,
+                ),
+              ),
+              CloseButton(
+                onPressed: Navigator.of(context).pop,
+              )
+            ],
+          ),
+          content: Padding(
+            padding: const EdgeInsets.all(8.0),
+            child: Text(error,
+                style: Theme.of(context).textTheme.bodyMedium!.copyWith(
+                  color: TColor.petRock,
+                  fontWeight: FontWeight.w700,
+                )),
+          ),
+          actions: [
+            TextButton(
+              onPressed: () => Navigator.of(context).pop(),
+              child: Text(
+                "Got it",
+                style: Theme.of(context).textTheme.bodyLarge!.copyWith(
+                  color: TColor.poppySurprise,
+                ),
+              ),
+            ),
+          ],
+        );
+      },
+    );
+  }
+
+  _composeEmail(String text) {
+
+  }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"NONE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d36423b6-326c-41d1-9fba-ad3516026006\" name=\"Changes\" comment=\"Refactor to Feature-based clean Architecture\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Dart File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"basic-feature--fix-auth-bug\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;LeHuuTri-186&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/LeHuuTri-186/STEP-AI.git&quot;,\n    &quot;accountId&quot;: &quot;62d97789-2552-40bd-9fca-043bb35448e7&quot;\n  },\n  &quot;recentNewPullRequestHead&quot;: {\n    &quot;server&quot;: {\n      &quot;useHttp&quot;: false,\n      &quot;host&quot;: &quot;github.com&quot;,\n      &quot;port&quot;: null,\n      &quot;suffix&quot;: null\n    },\n    &quot;owner&quot;: &quot;LeHuuTri-186&quot;,\n    &quot;repository&quot;: &quot;STEP-AI&quot;\n  }\n}</component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 7\n}</component>\n  <component name=\"ProjectId\" id=\"2n8xYLYUlMeQFNmQv51UvaX1rqL\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\n    \"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"Flutter.main.dart.executor\": \"Run\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"RunOnceActivity.cidr.known.project.marker\": \"true\",\n    \"RunOnceActivity.readMode.enableVisualFormatting\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"cf.first.check.clang-format\": \"false\",\n    \"cidr.known.project.marker\": \"true\",\n    \"com.google.services.firebase.aqiPopupShown\": \"true\",\n    \"dart.analysis.tool.window.visible\": \"false\",\n    \"git-widget-placeholder\": \"advance-kb-bot\",\n    \"io.flutter.reload.alreadyRun\": \"true\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"C:/Users/Admins/Downloads/STEP-AI/step_ai\",\n    \"run.code.analysis.last.selected.profile\": \"pProject Default\",\n    \"settings.editor.selected.configurable\": \"dart.settings\",\n    \"show.migrate.to.gradle.popup\": \"false\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/config/theme\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/features/personal\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/features/prompt\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/features/plan\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/features/knowledge_base\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/config/routes\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/shared/widgets\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/core/utils\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/features/authentication/presentation/pages\" />\n      <recent name=\"$PROJECT_DIR$/step_ai/lib/features/prompt/presentation/pages\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\">\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/step_ai/lib/main.dart\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"SwiftWorkspaceSettings\">\n    <option name=\"detectedToolchain\" value=\"true\" />\n    <option name=\"toolchainPathValue\" value=\"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\" />\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d36423b6-326c-41d1-9fba-ad3516026006\" name=\"Changes\" comment=\"\" />\n      <created>1728368564200</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1728368564200</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Test ui for prompt library\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729702617410</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729702617410</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"restructure code merge pages and create basic navigation\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729805162862</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729805162862</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"restructure code merge pages and create basic navigation\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729805294251</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729805294251</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"merge flow and UI pages\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729872623228</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729872623228</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Merge remote-tracking branch 'origin/nths_lht' into nths_lht\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1729873318561</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1729873318561</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"create new branch\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1731684301187</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1731684301187</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Refactor to Feature-based clean Architecture\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1731751014909</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1731751014909</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"Test ui for prompt library\" />\n    <MESSAGE value=\"restructure code merge pages and create basic navigation\" />\n    <MESSAGE value=\"merge flow and UI pages\" />\n    <MESSAGE value=\"update demo Video\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/nths_lht' into nths_lht\" />\n    <MESSAGE value=\"create new branch\" />\n    <MESSAGE value=\"Refactor to Feature-based clean Architecture\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Refactor to Feature-based clean Architecture\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/.idea/workspace.xml	(date 1735983012770)
@@ -5,8 +5,37 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d36423b6-326c-41d1-9fba-ad3516026006" name="Changes" comment="Refactor to Feature-based clean Architecture">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/di/data_injection/email_composer_data_di.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/di/domain_injection/email_composer_domain_di.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/di/email_composer_service_locator.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/di/presentation_injection/email_composer_presentation_di.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/get_usage_usecase.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/notifier/ai_action_notifier.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/notifier/usage_token_notifier.dart" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/pages/email_action.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/caches/deviceStreaming.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/ios/Podfile.lock" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/ios/Podfile.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/config/constants.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/config/constants.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/config/routes/routes.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/config/routes/routes.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/core/di/service_locator.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/core/di/service_locator.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/data/repository/response_email_repository_impl.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/repository/reponse_email_repository.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/repository/response_email_repository.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/pages/email_composer.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/pages/email_composer.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/features/plan/presentation/pages/plan_pricing_page.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/lib/shared/widgets/history_drawer.dart" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/lib/shared/widgets/history_drawer.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/linux/flutter/generated_plugin_registrant.cc" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/linux/flutter/generated_plugin_registrant.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/linux/flutter/generated_plugins.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/linux/flutter/generated_plugins.cmake" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/macos/Flutter/GeneratedPluginRegistrant.swift" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/macos/Flutter/GeneratedPluginRegistrant.swift" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/pubspec.lock" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/pubspec.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/pubspec.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/pubspec.yaml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/windows/flutter/generated_plugin_registrant.cc" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/windows/flutter/generated_plugin_registrant.cc" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/step_ai/windows/flutter/generated_plugins.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/step_ai/windows/flutter/generated_plugins.cmake" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -26,7 +55,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="basic-feature--fix-auth-bug" />
+        <entry key="$PROJECT_DIR$" value="advanced-features" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -70,29 +99,29 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "ASKED_ADD_EXTERNAL_FILES": "true",
-    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "Flutter.main.dart.executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "RunOnceActivity.cidr.known.project.marker": "true",
-    "RunOnceActivity.readMode.enableVisualFormatting": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "cf.first.check.clang-format": "false",
-    "cidr.known.project.marker": "true",
-    "com.google.services.firebase.aqiPopupShown": "true",
-    "dart.analysis.tool.window.visible": "false",
-    "git-widget-placeholder": "advance-kb-bot",
-    "io.flutter.reload.alreadyRun": "true",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/Admins/Downloads/STEP-AI/step_ai",
-    "run.code.analysis.last.selected.profile": "pProject Default",
-    "settings.editor.selected.configurable": "dart.settings",
-    "show.migrate.to.gradle.popup": "false"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
+    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;Flutter.main.dart.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
+    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
+    &quot;com.google.services.firebase.aqiPopupShown&quot;: &quot;true&quot;,
+    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;advanced-features-v01&quot;,
+    &quot;io.flutter.reload.alreadyRun&quot;: &quot;true&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/Admins/Downloads/STEP-AI/step_ai&quot;,
+    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;dart.settings&quot;,
+    &quot;show.migrate.to.gradle.popup&quot;: &quot;false&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/step_ai/lib/config/theme" />
@@ -102,11 +131,11 @@
       <recent name="$PROJECT_DIR$/step_ai/lib/features/knowledge_base" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/step_ai/lib/features/email_composer/domain/entity" />
+      <recent name="$PROJECT_DIR$/step_ai/lib/features/email_composer/data/model" />
+      <recent name="$PROJECT_DIR$/step_ai/lib/shared/widgets" />
       <recent name="$PROJECT_DIR$/step_ai/lib/config/routes" />
-      <recent name="$PROJECT_DIR$/step_ai/lib/shared/widgets" />
       <recent name="$PROJECT_DIR$/step_ai/lib/core/utils" />
-      <recent name="$PROJECT_DIR$/step_ai/lib/features/authentication/presentation/pages" />
-      <recent name="$PROJECT_DIR$/step_ai/lib/features/prompt/presentation/pages" />
     </key>
   </component>
   <component name="RunManager">
Index: step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\n\nimport '../../../../shared/styles/colors.dart';\n\nclass ActionTile extends StatelessWidget {\n  const ActionTile({super.key, required this.action, this.onTap});\n  final String action;\n  final Function()? onTap;\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 10.0),\n      child: Material(\n        color: Colors.transparent,\n        child: InkWell(\n          onTap: onTap,\n          borderRadius: BorderRadius.circular(10),\n          child: Ink(\n            decoration: BoxDecoration(\n              borderRadius: BorderRadius.circular(10),\n              color: TColor.northEastSnow.withOpacity(0.5),\n            ),\n            child: Padding(\n              padding: const EdgeInsets.all(10.0),\n              child: Row(\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                children: [\n                  SizedBox(\n                    width: MediaQuery.of(context).size.width * 0.8,\n                    child: Text(\n                      action,\n                      style: Theme.of(context).textTheme.bodyLarge!.copyWith(\n                            color: TColor.petRock,\n                            fontWeight: FontWeight.w600,\n                          ),\n                    ),\n                  ),\n                  Icon(\n                    Icons.arrow_circle_right_outlined,\n                    color: TColor.petRock,\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n    ;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart b/step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart
--- a/step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/presentation/widgets/action_tile.dart	(date 1735240666470)
@@ -27,8 +27,9 @@
                 mainAxisAlignment: MainAxisAlignment.spaceBetween,
                 children: [
                   SizedBox(
-                    width: MediaQuery.of(context).size.width * 0.8,
+                    width: MediaQuery.of(context).size.width * 0.6,
                     child: Text(
+                      maxLines: 10,
                       action,
                       style: Theme.of(context).textTheme.bodyLarge!.copyWith(
                             color: TColor.petRock,
Index: step_ai/pubspec.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by pub\n# See https://dart.dev/tools/pub/glossary#lockfile\npackages:\n  _fe_analyzer_shared:\n    dependency: transitive\n    description:\n      name: _fe_analyzer_shared\n      sha256: f256b0c0ba6c7577c15e2e4e114755640a875e885099367bf6e012b19314c834\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"72.0.0\"\n  _macros:\n    dependency: transitive\n    description: dart\n    source: sdk\n    version: \"0.3.2\"\n  analyzer:\n    dependency: transitive\n    description:\n      name: analyzer\n      sha256: b652861553cd3990d8ed361f7979dc6d7053a9ac8843fa73820ab68ce5410139\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.7.0\"\n  ansicolor:\n    dependency: transitive\n    description:\n      name: ansicolor\n      sha256: \"50e982d500bc863e1d703448afdbf9e5a72eb48840a4f766fa361ffd6877055f\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.3\"\n  archive:\n    dependency: transitive\n    description:\n      name: archive\n      sha256: \"08064924cbf0ab88280a0c3f60db9dd24fec693927e725ecb176f16c629d1cb8\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.1\"\n  args:\n    dependency: transitive\n    description:\n      name: args\n      sha256: bf9f5caeea8d8fe6721a9c358dd8a5c1947b27f1cfaa18b39c301273594919e6\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.6.0\"\n  async:\n    dependency: transitive\n    description:\n      name: async\n      sha256: \"947bfcf187f74dbc5e146c9eb9c0f10c9f8b30743e341481c1e2ed3ecc18c20c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.11.0\"\n  boolean_selector:\n    dependency: transitive\n    description:\n      name: boolean_selector\n      sha256: \"6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.1\"\n  build:\n    dependency: transitive\n    description:\n      name: build\n      sha256: \"80184af8b6cb3e5c1c4ec6d8544d27711700bc3e6d2efad04238c7b5290889f0\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.1\"\n  build_config:\n    dependency: transitive\n    description:\n      name: build_config\n      sha256: bf80fcfb46a29945b423bd9aad884590fb1dc69b330a4d4700cac476af1708d1\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.1\"\n  build_daemon:\n    dependency: transitive\n    description:\n      name: build_daemon\n      sha256: \"79b2aef6ac2ed00046867ed354c88778c9c0f029df8a20fe10b5436826721ef9\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.2\"\n  build_resolvers:\n    dependency: transitive\n    description:\n      name: build_resolvers\n      sha256: \"339086358431fa15d7eca8b6a36e5d783728cf025e559b834f4609a1fcfb7b0a\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.2\"\n  build_runner:\n    dependency: \"direct dev\"\n    description:\n      name: build_runner\n      sha256: \"028819cfb90051c6b5440c7e574d1896f8037e3c96cf17aaeb054c9311cfbf4d\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.13\"\n  build_runner_core:\n    dependency: transitive\n    description:\n      name: build_runner_core\n      sha256: f8126682b87a7282a339b871298cc12009cb67109cfa1614d6436fb0289193e0\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"7.3.2\"\n  built_collection:\n    dependency: transitive\n    description:\n      name: built_collection\n      sha256: \"376e3dd27b51ea877c28d525560790aee2e6fbb5f20e2f85d5081027d94e2100\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.1.1\"\n  built_value:\n    dependency: transitive\n    description:\n      name: built_value\n      sha256: c7913a9737ee4007efedaffc968c049fd0f3d0e49109e778edc10de9426005cb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"8.9.2\"\n  characters:\n    dependency: transitive\n    description:\n      name: characters\n      sha256: \"04a925763edad70e8443c99234dc3328f442e811f1d8fd1a72f1c8ad0f69a605\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  checked_yaml:\n    dependency: transitive\n    description:\n      name: checked_yaml\n      sha256: feb6bed21949061731a7a75fc5d2aa727cf160b91af9a3e464c5e3a32e28b5ff\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.3\"\n  clock:\n    dependency: transitive\n    description:\n      name: clock\n      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.1\"\n  code_builder:\n    dependency: transitive\n    description:\n      name: code_builder\n      sha256: \"0ec10bf4a89e4c613960bf1e8b42c64127021740fb21640c29c909826a5eea3e\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.10.1\"\n  collection:\n    dependency: transitive\n    description:\n      name: collection\n      sha256: ee67cb0715911d28db6bf4af1026078bd6f0128b07a5f66fb2ed94ec6783c09a\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.18.0\"\n  connectivity_plus:\n    dependency: \"direct main\"\n    description:\n      name: connectivity_plus\n      sha256: e0817759ec6d2d8e57eb234e6e57d2173931367a865850c7acea40d4b4f9c27d\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.1.1\"\n  connectivity_plus_platform_interface:\n    dependency: transitive\n    description:\n      name: connectivity_plus_platform_interface\n      sha256: \"42657c1715d48b167930d5f34d00222ac100475f73d10162ddf43e714932f204\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.1\"\n  convert:\n    dependency: transitive\n    description:\n      name: convert\n      sha256: b30acd5944035672bc15c6b7a8b47d773e41e2f17de064350988c5d02adb1c68\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.2\"\n  cross_file:\n    dependency: transitive\n    description:\n      name: cross_file\n      sha256: \"7caf6a750a0c04effbb52a676dce9a4a592e10ad35c34d6d2d0e4811160d5670\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.3.4+2\"\n  crypto:\n    dependency: transitive\n    description:\n      name: crypto\n      sha256: \"1e445881f28f22d6140f181e07737b22f1e099a5e1ff94b0af2f9e4a463f4855\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.6\"\n  csslib:\n    dependency: transitive\n    description:\n      name: csslib\n      sha256: \"09bad715f418841f976c77db72d5398dc1253c21fb9c0c7f0b0b985860b2d58e\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.0.2\"\n  cupertino_icons:\n    dependency: \"direct main\"\n    description:\n      name: cupertino_icons\n      sha256: ba631d1c7f7bef6b729a622b7b752645a2d076dba9976925b8f25725a30e1ee6\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.0.8\"\n  dart_style:\n    dependency: transitive\n    description:\n      name: dart_style\n      sha256: \"7856d364b589d1f08986e140938578ed36ed948581fbc3bc9aef1805039ac5ab\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.7\"\n  dbus:\n    dependency: transitive\n    description:\n      name: dbus\n      sha256: \"365c771ac3b0e58845f39ec6deebc76e3276aa9922b0cc60840712094d9047ac\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.10\"\n  dio:\n    dependency: \"direct main\"\n    description:\n      name: dio\n      sha256: \"5598aa796bbf4699afd5c67c0f5f6e2ed542afc956884b9cd58c306966efc260\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.7.0\"\n  dio_web_adapter:\n    dependency: transitive\n    description:\n      name: dio_web_adapter\n      sha256: \"33259a9276d6cea88774a0000cfae0d861003497755969c92faa223108620dc8\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.0\"\n  fake_async:\n    dependency: transitive\n    description:\n      name: fake_async\n      sha256: \"511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.1\"\n  ffi:\n    dependency: transitive\n    description:\n      name: ffi\n      sha256: \"16ed7b077ef01ad6170a3d0c57caa4a112a38d7a2ed5602e0aca9ca6f3d98da6\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.3\"\n  file:\n    dependency: transitive\n    description:\n      name: file\n      sha256: a3b4f84adafef897088c160faf7dfffb7696046cb13ae90b508c2cbc95d3b8d4\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"7.0.1\"\n  file_picker:\n    dependency: \"direct main\"\n    description:\n      name: file_picker\n      sha256: c2376a6aae82358a9f9ccdd7d1f4006d08faa39a2767cce01031d9f593a8bd3b\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"8.1.6\"\n  file_selector_linux:\n    dependency: transitive\n    description:\n      name: file_selector_linux\n      sha256: \"54cbbd957e1156d29548c7d9b9ec0c0ebb6de0a90452198683a7d23aed617a33\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.9.3+2\"\n  file_selector_macos:\n    dependency: transitive\n    description:\n      name: file_selector_macos\n      sha256: \"271ab9986df0c135d45c3cdb6bd0faa5db6f4976d3e4b437cf7d0f258d941bfc\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.9.4+2\"\n  file_selector_platform_interface:\n    dependency: transitive\n    description:\n      name: file_selector_platform_interface\n      sha256: a3994c26f10378a039faa11de174d7b78eb8f79e4dd0af2a451410c1a5c3f66b\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.6.2\"\n  file_selector_windows:\n    dependency: transitive\n    description:\n      name: file_selector_windows\n      sha256: \"8f5d2f6590d51ecd9179ba39c64f722edc15226cc93dcc8698466ad36a4a85a4\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.9.3+3\"\n  fixnum:\n    dependency: transitive\n    description:\n      name: fixnum\n      sha256: b6dc7065e46c974bc7c5f143080a6764ec7a4be6da1285ececdc37be96de53be\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.1\"\n  flutter:\n    dependency: \"direct main\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_highlight:\n    dependency: \"direct main\"\n    description:\n      name: flutter_highlight\n      sha256: \"7b96333867aa07e122e245c033b8ad622e4e3a42a1a2372cbb098a2541d8782c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.0\"\n  flutter_lints:\n    dependency: \"direct dev\"\n    description:\n      name: flutter_lints\n      sha256: \"3f41d009ba7172d5ff9be5f6e6e6abb4300e263aab8866d2a0842ed2a70f8f0c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.0\"\n  flutter_markdown:\n    dependency: \"direct main\"\n    description:\n      name: flutter_markdown\n      sha256: f0e599ba89c9946c8e051780f0ec99aba4ba15895e0380a7ab68f420046fc44e\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.4+1\"\n  flutter_native_splash:\n    dependency: \"direct dev\"\n    description:\n      name: flutter_native_splash\n      sha256: \"1152ab0067ca5a2ebeb862fe0a762057202cceb22b7e62692dcbabf6483891bb\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.3\"\n  flutter_plugin_android_lifecycle:\n    dependency: transitive\n    description:\n      name: flutter_plugin_android_lifecycle\n      sha256: \"9b78450b89f059e96c9ebb355fa6b3df1d6b330436e0b885fb49594c41721398\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.23\"\n  flutter_secure_storage:\n    dependency: \"direct main\"\n    description:\n      name: flutter_secure_storage\n      sha256: \"165164745e6afb5c0e3e3fcc72a012fb9e58496fb26ffb92cf22e16a821e85d0\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"9.2.2\"\n  flutter_secure_storage_linux:\n    dependency: transitive\n    description:\n      name: flutter_secure_storage_linux\n      sha256: \"4d91bfc23047422cbcd73ac684bc169859ee766482517c22172c86596bf1464b\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.1\"\n  flutter_secure_storage_macos:\n    dependency: transitive\n    description:\n      name: flutter_secure_storage_macos\n      sha256: \"1693ab11121a5f925bbea0be725abfcfbbcf36c1e29e571f84a0c0f436147a81\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.2\"\n  flutter_secure_storage_platform_interface:\n    dependency: transitive\n    description:\n      name: flutter_secure_storage_platform_interface\n      sha256: cf91ad32ce5adef6fba4d736a542baca9daf3beac4db2d04be350b87f69ac4a8\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.2\"\n  flutter_secure_storage_web:\n    dependency: transitive\n    description:\n      name: flutter_secure_storage_web\n      sha256: f4ebff989b4f07b2656fb16b47852c0aab9fed9b4ec1c70103368337bc1886a9\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.1\"\n  flutter_secure_storage_windows:\n    dependency: transitive\n    description:\n      name: flutter_secure_storage_windows\n      sha256: b20b07cb5ed4ed74fc567b78a72936203f587eba460af1df11281c9326cd3709\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.2\"\n  flutter_test:\n    dependency: \"direct dev\"\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  flutter_web_plugins:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.0\"\n  font_awesome_flutter:\n    dependency: \"direct main\"\n    description:\n      name: font_awesome_flutter\n      sha256: d3a89184101baec7f4600d58840a764d2ef760fe1c5a20ef9e6b0e9b24a07a3a\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"10.8.0\"\n  freezed:\n    dependency: \"direct dev\"\n    description:\n      name: freezed\n      sha256: \"44c19278dd9d89292cf46e97dc0c1e52ce03275f40a97c5a348e802a924bf40e\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.5.7\"\n  freezed_annotation:\n    dependency: \"direct main\"\n    description:\n      name: freezed_annotation\n      sha256: c2e2d632dd9b8a2b7751117abcfc2b4888ecfe181bd9fca7170d9ef02e595fe2\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.4\"\n  frontend_server_client:\n    dependency: transitive\n    description:\n      name: frontend_server_client\n      sha256: f64a0333a82f30b0cca061bc3d143813a486dc086b574bfb233b7c1372427694\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.0\"\n  get_it:\n    dependency: \"direct main\"\n    description:\n      name: get_it\n      sha256: c49895c1ecb0ee2a0ec568d39de882e2c299ba26355aa6744ab1001f98cebd15\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"8.0.2\"\n  glob:\n    dependency: transitive\n    description:\n      name: glob\n      sha256: \"0e7014b3b7d4dac1ca4d6114f82bf1782ee86745b9b42a92c9289c23d8a0ab63\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.2\"\n  google_fonts:\n    dependency: \"direct main\"\n    description:\n      name: google_fonts\n      sha256: b1ac0fe2832c9cc95e5e88b57d627c5e68c223b9657f4b96e1487aa9098c7b82\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.2.1\"\n  google_mobile_ads:\n    dependency: \"direct main\"\n    description:\n      name: google_mobile_ads\n      sha256: \"4775006383a27a5d86d46f8fb452bfcb17794fc0a46c732979e49a8eb1c8963f\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.2.0\"\n  graphs:\n    dependency: transitive\n    description:\n      name: graphs\n      sha256: \"741bbf84165310a68ff28fe9e727332eef1407342fca52759cb21ad8177bb8d0\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.2\"\n  highlight:\n    dependency: transitive\n    description:\n      name: highlight\n      sha256: \"5353a83ffe3e3eca7df0abfb72dcf3fa66cc56b953728e7113ad4ad88497cf21\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.0\"\n  html:\n    dependency: transitive\n    description:\n      name: html\n      sha256: \"1fc58edeaec4307368c60d59b7e15b9d658b57d7f3125098b6294153c75337ec\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.15.5\"\n  http:\n    dependency: \"direct main\"\n    description:\n      name: http\n      sha256: b9c29a161230ee03d3ccf545097fccd9b87a5264228c5d348202e0f0c28f9010\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.2\"\n  http_multi_server:\n    dependency: transitive\n    description:\n      name: http_multi_server\n      sha256: \"97486f20f9c2f7be8f514851703d0119c3596d14ea63227af6f7a481ef2b2f8b\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.2.1\"\n  http_parser:\n    dependency: \"direct main\"\n    description:\n      name: http_parser\n      sha256: \"2aa08ce0341cc9b354a498388e30986515406668dbcc4f7c950c3e715496693b\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.2\"\n  image:\n    dependency: transitive\n    description:\n      name: image\n      sha256: \"599d08e369969bdf83138f5b4e0a7e823d3f992f23b8a64dd626877c37013533\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.4.0\"\n  image_picker:\n    dependency: \"direct main\"\n    description:\n      name: image_picker\n      sha256: b6951e25b795d053a6ba03af5f710069c99349de9341af95155d52665cb4607c\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.8.9\"\n  image_picker_android:\n    dependency: transitive\n    description:\n      name: image_picker_android\n      sha256: fa8141602fde3f7e2f81dbf043613eb44dfa325fa0bcf93c0f142c9f7a2c193e\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.8.12+18\"\n  image_picker_for_web:\n    dependency: transitive\n    description:\n      name: image_picker_for_web\n      sha256: \"98f50d6b9f294c8ba35e25cc0d13b04bfddd25dbc8d32fa9d566a6572f2c081c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.12\"\n  image_picker_ios:\n    dependency: transitive\n    description:\n      name: image_picker_ios\n      sha256: \"4f0568120c6fcc0aaa04511cb9f9f4d29fc3d0139884b1d06be88dcec7641d6b\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.8.12+1\"\n  image_picker_linux:\n    dependency: transitive\n    description:\n      name: image_picker_linux\n      sha256: \"4ed1d9bb36f7cd60aa6e6cd479779cc56a4cb4e4de8f49d487b1aaad831300fa\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.2.1+1\"\n  image_picker_macos:\n    dependency: transitive\n    description:\n      name: image_picker_macos\n      sha256: \"3f5ad1e8112a9a6111c46d0b57a7be2286a9a07fc6e1976fdf5be2bd31d4ff62\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.2.1+1\"\n  image_picker_platform_interface:\n    dependency: transitive\n    description:\n      name: image_picker_platform_interface\n      sha256: \"9ec26d410ff46f483c5519c29c02ef0e02e13a543f882b152d4bfd2f06802f80\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.10.0\"\n  image_picker_windows:\n    dependency: transitive\n    description:\n      name: image_picker_windows\n      sha256: \"6ad07afc4eb1bc25f3a01084d28520496c4a3bb0cb13685435838167c9dcedeb\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.2.1+1\"\n  io:\n    dependency: transitive\n    description:\n      name: io\n      sha256: \"2ec25704aba361659e10e3e5f5d672068d332fc8ac516421d483a11e5cbd061e\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.0.4\"\n  js:\n    dependency: transitive\n    description:\n      name: js\n      sha256: f2c445dce49627136094980615a031419f7f3eb393237e4ecd97ac15dea343f3\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.6.7\"\n  json_annotation:\n    dependency: \"direct main\"\n    description:\n      name: json_annotation\n      sha256: \"1ce844379ca14835a50d2f019a3099f419082cfdd231cd86a142af94dd5c6bb1\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.9.0\"\n  json_serializable:\n    dependency: \"direct dev\"\n    description:\n      name: json_serializable\n      sha256: ea1432d167339ea9b5bb153f0571d0039607a873d6e04e0117af043f14a1fd4b\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.8.0\"\n  leak_tracker:\n    dependency: transitive\n    description:\n      name: leak_tracker\n      sha256: \"3f87a60e8c63aecc975dda1ceedbc8f24de75f09e4856ea27daf8958f2f0ce05\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"10.0.5\"\n  leak_tracker_flutter_testing:\n    dependency: transitive\n    description:\n      name: leak_tracker_flutter_testing\n      sha256: \"932549fb305594d82d7183ecd9fa93463e9914e1b67cacc34bc40906594a1806\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.5\"\n  leak_tracker_testing:\n    dependency: transitive\n    description:\n      name: leak_tracker_testing\n      sha256: \"6ba465d5d76e67ddf503e1161d1f4a6bc42306f9d66ca1e8f079a47290fb06d3\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.1\"\n  lints:\n    dependency: transitive\n    description:\n      name: lints\n      sha256: \"976c774dd944a42e83e2467f4cc670daef7eed6295b10b36ae8c85bcbf828235\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.0.0\"\n  loading_animation_widget:\n    dependency: \"direct main\"\n    description:\n      name: loading_animation_widget\n      sha256: \"9fe23381f3096e902f39e87e487648ff7f74925e86234353fa885bb9f6c98004\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  logging:\n    dependency: transitive\n    description:\n      name: logging\n      sha256: c8245ada5f1717ed44271ed1c26b8ce85ca3228fd2ffdb75468ab01979309d61\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  macros:\n    dependency: transitive\n    description:\n      name: macros\n      sha256: \"0acaed5d6b7eab89f63350bccd82119e6c602df0f391260d0e32b5e23db79536\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.1.2-main.4\"\n  markdown:\n    dependency: transitive\n    description:\n      name: markdown\n      sha256: ef2a1298144e3f985cc736b22e0ccdaf188b5b3970648f2d9dc13efd1d9df051\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"7.2.2\"\n  matcher:\n    dependency: transitive\n    description:\n      name: matcher\n      sha256: d2323aa2060500f906aa31a895b4030b6da3ebdcc5619d14ce1aada65cd161cb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.12.16+1\"\n  material_color_utilities:\n    dependency: transitive\n    description:\n      name: material_color_utilities\n      sha256: f7142bb1154231d7ea5f96bc7bde4bda2a0945d2806bb11670e30b850d56bdec\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.11.1\"\n  meta:\n    dependency: transitive\n    description:\n      name: meta\n      sha256: bdb68674043280c3428e9ec998512fb681678676b3c54e773629ffe74419f8c7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.15.0\"\n  mime:\n    dependency: transitive\n    description:\n      name: mime\n      sha256: \"41a20518f0cb1256669420fdba0cd90d21561e560ac240f26ef8322e45bb7ed6\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.0\"\n  nested:\n    dependency: transitive\n    description:\n      name: nested\n      sha256: \"03bac4c528c64c95c722ec99280375a6f2fc708eec17c7b3f07253b626cd2a20\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.0.0\"\n  nm:\n    dependency: transitive\n    description:\n      name: nm\n      sha256: \"2c9aae4127bdc8993206464fcc063611e0e36e72018696cd9631023a31b24254\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.5.0\"\n  package_config:\n    dependency: transitive\n    description:\n      name: package_config\n      sha256: \"1c5b77ccc91e4823a5af61ee74e6b972db1ef98c2ff5a18d3161c982a55448bd\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.0\"\n  path:\n    dependency: transitive\n    description:\n      name: path\n      sha256: \"087ce49c3f0dc39180befefc60fdb4acd8f8620e5682fe2476afd0b3688bb4af\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.9.0\"\n  path_provider:\n    dependency: transitive\n    description:\n      name: path_provider\n      sha256: \"50c5dd5b6e1aaf6fb3a78b33f6aa3afca52bf903a8a5298f53101fdaee55bbcd\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.5\"\n  path_provider_android:\n    dependency: transitive\n    description:\n      name: path_provider_android\n      sha256: c464428172cb986b758c6d1724c603097febb8fb855aa265aeecc9280c294d4a\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.2.12\"\n  path_provider_foundation:\n    dependency: transitive\n    description:\n      name: path_provider_foundation\n      sha256: f234384a3fdd67f989b4d54a5d73ca2a6c422fa55ae694381ae0f4375cd1ea16\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.0\"\n  path_provider_linux:\n    dependency: transitive\n    description:\n      name: path_provider_linux\n      sha256: f7a1fe3a634fe7734c8d3f2766ad746ae2a2884abe22e241a8b301bf5cac3279\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.2.1\"\n  path_provider_platform_interface:\n    dependency: transitive\n    description:\n      name: path_provider_platform_interface\n      sha256: \"88f5779f72ba699763fa3a3b06aa4bf6de76c8e5de842cf6f29e2e06476c2334\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.2\"\n  path_provider_windows:\n    dependency: transitive\n    description:\n      name: path_provider_windows\n      sha256: bd6f00dbd873bfb70d0761682da2b3a2c2fccc2b9e84c495821639601d81afe7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.0\"\n  petitparser:\n    dependency: transitive\n    description:\n      name: petitparser\n      sha256: c15605cd28af66339f8eb6fbe0e541bfe2d1b72d5825efc6598f3e0a31b9ad27\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.0.2\"\n  platform:\n    dependency: transitive\n    description:\n      name: platform\n      sha256: \"5d6b1b0036a5f331ebc77c850ebc8506cbc1e9416c27e59b439f917a902a4984\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.6\"\n  plugin_platform_interface:\n    dependency: transitive\n    description:\n      name: plugin_platform_interface\n      sha256: \"4820fbfdb9478b1ebae27888254d445073732dae3d6ea81f0b7e06d5dedc3f02\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.8\"\n  pool:\n    dependency: transitive\n    description:\n      name: pool\n      sha256: \"20fe868b6314b322ea036ba325e6fc0711a22948856475e2c2b6306e8ab39c2a\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.5.1\"\n  posix:\n    dependency: transitive\n    description:\n      name: posix\n      sha256: a0117dc2167805aa9125b82eee515cc891819bac2f538c83646d355b16f58b9a\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.0.1\"\n  provider:\n    dependency: \"direct main\"\n    description:\n      name: provider\n      sha256: c8a055ee5ce3fd98d6fc872478b03823ffdb448699c6ebdbbc71d59b596fd48c\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.1.2\"\n  pub_semver:\n    dependency: transitive\n    description:\n      name: pub_semver\n      sha256: \"40d3ab1bbd474c4c2328c91e3a7df8c6dd629b79ece4c4bd04bee496a224fb0c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.4\"\n  pubspec_parse:\n    dependency: transitive\n    description:\n      name: pubspec_parse\n      sha256: c799b721d79eb6ee6fa56f00c04b472dcd44a30d258fac2174a6ec57302678f8\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.0\"\n  shared_preferences:\n    dependency: \"direct main\"\n    description:\n      name: shared_preferences\n      sha256: \"95f9997ca1fb9799d494d0cb2a780fd7be075818d59f00c43832ed112b158a82\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.3\"\n  shared_preferences_android:\n    dependency: transitive\n    description:\n      name: shared_preferences_android\n      sha256: \"3b9febd815c9ca29c9e3520d50ec32f49157711e143b7a4ca039eb87e8ade5ab\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.3\"\n  shared_preferences_foundation:\n    dependency: transitive\n    description:\n      name: shared_preferences_foundation\n      sha256: \"07e050c7cd39bad516f8d64c455f04508d09df104be326d8c02551590a0d513d\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.5.3\"\n  shared_preferences_linux:\n    dependency: transitive\n    description:\n      name: shared_preferences_linux\n      sha256: \"580abfd40f415611503cae30adf626e6656dfb2f0cee8f465ece7b6defb40f2f\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.1\"\n  shared_preferences_platform_interface:\n    dependency: transitive\n    description:\n      name: shared_preferences_platform_interface\n      sha256: \"57cbf196c486bc2cf1f02b85784932c6094376284b3ad5779d1b1c6c6a816b80\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.1\"\n  shared_preferences_web:\n    dependency: transitive\n    description:\n      name: shared_preferences_web\n      sha256: d2ca4132d3946fec2184261726b355836a82c33d7d5b67af32692aff18a4684e\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.2\"\n  shared_preferences_windows:\n    dependency: transitive\n    description:\n      name: shared_preferences_windows\n      sha256: \"94ef0f72b2d71bc3e700e025db3710911bd51a71cefb65cc609dd0d9a982e3c1\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.4.1\"\n  shelf:\n    dependency: transitive\n    description:\n      name: shelf\n      sha256: ad29c505aee705f41a4d8963641f91ac4cee3c8fad5947e033390a7bd8180fa4\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.4.1\"\n  shelf_web_socket:\n    dependency: transitive\n    description:\n      name: shelf_web_socket\n      sha256: \"073c147238594ecd0d193f3456a5fe91c4b0abbcc68bf5cd95b36c4e194ac611\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.0.0\"\n  sky_engine:\n    dependency: transitive\n    description: flutter\n    source: sdk\n    version: \"0.0.99\"\n  source_gen:\n    dependency: transitive\n    description:\n      name: source_gen\n      sha256: \"14658ba5f669685cd3d63701d01b31ea748310f7ab854e471962670abcf57832\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.5.0\"\n  source_helper:\n    dependency: transitive\n    description:\n      name: source_helper\n      sha256: \"6adebc0006c37dd63fe05bca0a929b99f06402fc95aa35bf36d67f5c06de01fd\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.3.4\"\n  source_span:\n    dependency: transitive\n    description:\n      name: source_span\n      sha256: \"53e943d4206a5e30df338fd4c6e7a077e02254531b138a15aec3bd143c1a8b3c\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.10.0\"\n  stack_trace:\n    dependency: transitive\n    description:\n      name: stack_trace\n      sha256: \"73713990125a6d93122541237550ee3352a2d84baad52d375a4cad2eb9b7ce0b\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.11.1\"\n  stream_channel:\n    dependency: transitive\n    description:\n      name: stream_channel\n      sha256: ba2aa5d8cc609d96bbb2899c28934f9e1af5cddbd60a827822ea467161eb54e7\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.2\"\n  stream_transform:\n    dependency: transitive\n    description:\n      name: stream_transform\n      sha256: \"14a00e794c7c11aa145a170587321aedce29769c08d7f58b1d141da75e3b1c6f\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.0\"\n  string_scanner:\n    dependency: transitive\n    description:\n      name: string_scanner\n      sha256: \"556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.0\"\n  term_glyph:\n    dependency: transitive\n    description:\n      name: term_glyph\n      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.2.1\"\n  test_api:\n    dependency: transitive\n    description:\n      name: test_api\n      sha256: \"5b8a98dafc4d5c4c9c72d8b31ab2b23fc13422348d2997120294d3bac86b4ddb\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.7.2\"\n  timing:\n    dependency: transitive\n    description:\n      name: timing\n      sha256: \"70a3b636575d4163c477e6de42f247a23b315ae20e86442bebe32d3cabf61c32\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.0.1\"\n  typed_data:\n    dependency: transitive\n    description:\n      name: typed_data\n      sha256: f9049c039ebfeb4cf7a7104a675823cd72dba8297f264b6637062516699fa006\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.4.0\"\n  universal_io:\n    dependency: transitive\n    description:\n      name: universal_io\n      sha256: \"1722b2dcc462b4b2f3ee7d188dad008b6eb4c40bbd03a3de451d82c78bba9aad\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.2.2\"\n  url_launcher:\n    dependency: \"direct main\"\n    description:\n      name: url_launcher\n      sha256: \"9d06212b1362abc2f0f0d78e6f09f726608c74e3b9462e8368bb03314aa8d603\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.3.1\"\n  url_launcher_android:\n    dependency: transitive\n    description:\n      name: url_launcher_android\n      sha256: \"6fc2f56536ee873eeb867ad176ae15f304ccccc357848b351f6f0d8d4a40d193\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.3.14\"\n  url_launcher_ios:\n    dependency: transitive\n    description:\n      name: url_launcher_ios\n      sha256: \"16a513b6c12bb419304e72ea0ae2ab4fed569920d1c7cb850263fe3acc824626\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.3.2\"\n  url_launcher_linux:\n    dependency: transitive\n    description:\n      name: url_launcher_linux\n      sha256: \"4e9ba368772369e3e08f231d2301b4ef72b9ff87c31192ef471b380ef29a4935\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.2.1\"\n  url_launcher_macos:\n    dependency: transitive\n    description:\n      name: url_launcher_macos\n      sha256: \"17ba2000b847f334f16626a574c702b196723af2a289e7a93ffcb79acff855c2\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.2.2\"\n  url_launcher_platform_interface:\n    dependency: transitive\n    description:\n      name: url_launcher_platform_interface\n      sha256: \"552f8a1e663569be95a8190206a38187b531910283c3e982193e4f2733f01029\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.2\"\n  url_launcher_web:\n    dependency: transitive\n    description:\n      name: url_launcher_web\n      sha256: \"772638d3b34c779ede05ba3d38af34657a05ac55b06279ea6edd409e323dca8e\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.3.3\"\n  url_launcher_windows:\n    dependency: transitive\n    description:\n      name: url_launcher_windows\n      sha256: \"44cf3aabcedde30f2dba119a9dea3b0f2672fbe6fa96e85536251d678216b3c4\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.3\"\n  vector_math:\n    dependency: transitive\n    description:\n      name: vector_math\n      sha256: \"80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.1.4\"\n  vm_service:\n    dependency: transitive\n    description:\n      name: vm_service\n      sha256: \"5c5f338a667b4c644744b661f309fb8080bb94b18a7e91ef1dbd343bed00ed6d\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"14.2.5\"\n  watcher:\n    dependency: transitive\n    description:\n      name: watcher\n      sha256: \"3d2ad6751b3c16cf07c7fca317a1413b3f26530319181b37e3b9039b84fc01d8\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.0\"\n  web:\n    dependency: transitive\n    description:\n      name: web\n      sha256: cd3543bd5798f6ad290ea73d210f423502e71900302dde696f8bff84bf89a1cb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.0\"\n  web_socket:\n    dependency: transitive\n    description:\n      name: web_socket\n      sha256: \"3c12d96c0c9a4eec095246debcea7b86c0324f22df69893d538fcc6f1b8cce83\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"0.1.6\"\n  web_socket_channel:\n    dependency: transitive\n    description:\n      name: web_socket_channel\n      sha256: \"9f187088ed104edd8662ca07af4b124465893caf063ba29758f97af57e61da8f\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.0.1\"\n  webview_flutter:\n    dependency: transitive\n    description:\n      name: webview_flutter\n      sha256: ec81f57aa1611f8ebecf1d2259da4ef052281cb5ad624131c93546c79ccc7736\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"4.9.0\"\n  webview_flutter_android:\n    dependency: transitive\n    description:\n      name: webview_flutter_android\n      sha256: \"47a8da40d02befda5b151a26dba71f47df471cddd91dfdb7802d0a87c5442558\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.16.9\"\n  webview_flutter_platform_interface:\n    dependency: transitive\n    description:\n      name: webview_flutter_platform_interface\n      sha256: d937581d6e558908d7ae3dc1989c4f87b786891ab47bb9df7de548a151779d8d\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"2.10.0\"\n  webview_flutter_wkwebview:\n    dependency: transitive\n    description:\n      name: webview_flutter_wkwebview\n      sha256: b7e92f129482460951d96ef9a46b49db34bd2e1621685de26e9eaafd9674e7eb\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.16.3\"\n  win32:\n    dependency: transitive\n    description:\n      name: win32\n      sha256: \"84ba388638ed7a8cb3445a320c8273136ab2631cd5f2c57888335504ddab1bc2\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"5.8.0\"\n  xdg_directories:\n    dependency: transitive\n    description:\n      name: xdg_directories\n      sha256: \"7a3f37b05d989967cdddcbb571f1ea834867ae2faa29725fd085180e0883aa15\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"1.1.0\"\n  xml:\n    dependency: transitive\n    description:\n      name: xml\n      sha256: b015a8ad1c488f66851d762d3090a21c600e479dc75e68328c52774040cf9226\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"6.5.0\"\n  yaml:\n    dependency: transitive\n    description:\n      name: yaml\n      sha256: \"75769501ea3489fca56601ff33454fe45507ea3bfb014161abc3b43ae25989d5\"\n      url: \"https://pub.dev\"\n    source: hosted\n    version: \"3.1.2\"\nsdks:\n  dart: \">=3.5.3 <4.0.0\"\n  flutter: \">=3.24.0\"\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/pubspec.lock b/step_ai/pubspec.lock
--- a/step_ai/pubspec.lock	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/pubspec.lock	(date 1735924938491)
@@ -765,6 +765,22 @@
       url: "https://pub.dev"
     source: hosted
     version: "2.1.0"
+  package_info_plus:
+    dependency: transitive
+    description:
+      name: package_info_plus
+      sha256: "70c421fe9d9cc1a9a7f3b05ae56befd469fe4f8daa3b484823141a55442d858d"
+      url: "https://pub.dev"
+    source: hosted
+    version: "8.1.2"
+  package_info_plus_platform_interface:
+    dependency: transitive
+    description:
+      name: package_info_plus_platform_interface
+      sha256: a5ef9986efc7bf772f2696183a3992615baa76c1ffb1189318dd8803778fb05b
+      url: "https://pub.dev"
+    source: hosted
+    version: "3.0.2"
   path:
     dependency: transitive
     description:
@@ -885,6 +901,22 @@
       url: "https://pub.dev"
     source: hosted
     version: "1.3.0"
+  sentry:
+    dependency: transitive
+    description:
+      name: sentry
+      sha256: "576ad83415102ba2060142a6701611abc6e67a55af1d7ab339cedd3ba1b0f84c"
+      url: "https://pub.dev"
+    source: hosted
+    version: "8.12.0"
+  sentry_flutter:
+    dependency: "direct main"
+    description:
+      name: sentry_flutter
+      sha256: dc3761e8659839cc67a18432d9f12e5531affb7ff68e196dbb56846909b5dfdc
+      url: "https://pub.dev"
+    source: hosted
+    version: "8.12.0"
   shared_preferences:
     dependency: "direct main"
     description:
@@ -986,6 +1018,14 @@
       url: "https://pub.dev"
     source: hosted
     version: "1.10.0"
+  sprintf:
+    dependency: transitive
+    description:
+      name: sprintf
+      sha256: "1fc9ffe69d4df602376b52949af107d8f5703b77cda567c4d7d86a0693120f23"
+      url: "https://pub.dev"
+    source: hosted
+    version: "7.0.0"
   stack_trace:
     dependency: transitive
     description:
@@ -1122,6 +1162,14 @@
       url: "https://pub.dev"
     source: hosted
     version: "3.1.3"
+  uuid:
+    dependency: transitive
+    description:
+      name: uuid
+      sha256: a5be9ef6618a7ac1e964353ef476418026db906c4facdedaa299b7a2e71690ff
+      url: "https://pub.dev"
+    source: hosted
+    version: "4.5.1"
   vector_math:
     dependency: transitive
     description:
Index: step_ai/windows/flutter/generated_plugin_registrant.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  Generated file. Do not edit.\n//\n\n// clang-format off\n\n#include \"generated_plugin_registrant.h\"\n\n#include <connectivity_plus/connectivity_plus_windows_plugin.h>\n#include <file_selector_windows/file_selector_windows.h>\n#include <flutter_secure_storage_windows/flutter_secure_storage_windows_plugin.h>\n#include <url_launcher_windows/url_launcher_windows.h>\n\nvoid RegisterPlugins(flutter::PluginRegistry* registry) {\n  ConnectivityPlusWindowsPluginRegisterWithRegistrar(\n      registry->GetRegistrarForPlugin(\"ConnectivityPlusWindowsPlugin\"));\n  FileSelectorWindowsRegisterWithRegistrar(\n      registry->GetRegistrarForPlugin(\"FileSelectorWindows\"));\n  FlutterSecureStorageWindowsPluginRegisterWithRegistrar(\n      registry->GetRegistrarForPlugin(\"FlutterSecureStorageWindowsPlugin\"));\n  UrlLauncherWindowsRegisterWithRegistrar(\n      registry->GetRegistrarForPlugin(\"UrlLauncherWindows\"));\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/windows/flutter/generated_plugin_registrant.cc b/step_ai/windows/flutter/generated_plugin_registrant.cc
--- a/step_ai/windows/flutter/generated_plugin_registrant.cc	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/windows/flutter/generated_plugin_registrant.cc	(date 1735983071466)
@@ -9,6 +9,7 @@
 #include <connectivity_plus/connectivity_plus_windows_plugin.h>
 #include <file_selector_windows/file_selector_windows.h>
 #include <flutter_secure_storage_windows/flutter_secure_storage_windows_plugin.h>
+#include <sentry_flutter/sentry_flutter_plugin.h>
 #include <url_launcher_windows/url_launcher_windows.h>
 
 void RegisterPlugins(flutter::PluginRegistry* registry) {
@@ -18,6 +19,8 @@
       registry->GetRegistrarForPlugin("FileSelectorWindows"));
   FlutterSecureStorageWindowsPluginRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("FlutterSecureStorageWindowsPlugin"));
+  SentryFlutterPluginRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("SentryFlutterPlugin"));
   UrlLauncherWindowsRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("UrlLauncherWindows"));
 }
Index: step_ai/windows/flutter/generated_plugins.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#\n# Generated file, do not edit.\n#\n\nlist(APPEND FLUTTER_PLUGIN_LIST\n  connectivity_plus\n  file_selector_windows\n  flutter_secure_storage_windows\n  url_launcher_windows\n)\n\nlist(APPEND FLUTTER_FFI_PLUGIN_LIST\n)\n\nset(PLUGIN_BUNDLED_LIBRARIES)\n\nforeach(plugin ${FLUTTER_PLUGIN_LIST})\n  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/windows plugins/${plugin})\n  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})\nendforeach(plugin)\n\nforeach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})\n  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/windows plugins/${ffi_plugin})\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})\nendforeach(ffi_plugin)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/windows/flutter/generated_plugins.cmake b/step_ai/windows/flutter/generated_plugins.cmake
--- a/step_ai/windows/flutter/generated_plugins.cmake	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/windows/flutter/generated_plugins.cmake	(date 1735983071469)
@@ -6,6 +6,7 @@
   connectivity_plus
   file_selector_windows
   flutter_secure_storage_windows
+  sentry_flutter
   url_launcher_windows
 )
 
Index: step_ai/ios/Podfile.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>PODS:\n  - connectivity_plus (0.0.1):\n    - Flutter\n    - FlutterMacOS\n  - DKImagePickerController/Core (4.3.9):\n    - DKImagePickerController/ImageDataManager\n    - DKImagePickerController/Resource\n  - DKImagePickerController/ImageDataManager (4.3.9)\n  - DKImagePickerController/PhotoGallery (4.3.9):\n    - DKImagePickerController/Core\n    - DKPhotoGallery\n  - DKImagePickerController/Resource (4.3.9)\n  - DKPhotoGallery (0.0.19):\n    - DKPhotoGallery/Core (= 0.0.19)\n    - DKPhotoGallery/Model (= 0.0.19)\n    - DKPhotoGallery/Preview (= 0.0.19)\n    - DKPhotoGallery/Resource (= 0.0.19)\n    - SDWebImage\n    - SwiftyGif\n  - DKPhotoGallery/Core (0.0.19):\n    - DKPhotoGallery/Model\n    - DKPhotoGallery/Preview\n    - SDWebImage\n    - SwiftyGif\n  - DKPhotoGallery/Model (0.0.19):\n    - SDWebImage\n    - SwiftyGif\n  - DKPhotoGallery/Preview (0.0.19):\n    - DKPhotoGallery/Model\n    - DKPhotoGallery/Resource\n    - SDWebImage\n    - SwiftyGif\n  - DKPhotoGallery/Resource (0.0.19):\n    - SDWebImage\n    - SwiftyGif\n  - file_picker (0.0.1):\n    - DKImagePickerController/PhotoGallery\n    - Flutter\n  - Flutter (1.0.0)\n  - flutter_native_splash (2.4.3):\n    - Flutter\n  - flutter_secure_storage (6.0.0):\n    - Flutter\n  - Google-Mobile-Ads-SDK (11.10.0):\n    - GoogleUserMessagingPlatform (>= 1.1)\n  - google_mobile_ads (5.2.0):\n    - Flutter\n    - Google-Mobile-Ads-SDK (~> 11.10.0)\n    - webview_flutter_wkwebview\n  - GoogleUserMessagingPlatform (2.7.0)\n  - image_picker_ios (0.0.1):\n    - Flutter\n  - path_provider_foundation (0.0.1):\n    - Flutter\n    - FlutterMacOS\n  - SDWebImage (5.20.0):\n    - SDWebImage/Core (= 5.20.0)\n  - SDWebImage/Core (5.20.0)\n  - shared_preferences_foundation (0.0.1):\n    - Flutter\n    - FlutterMacOS\n  - SwiftyGif (5.4.5)\n  - url_launcher_ios (0.0.1):\n    - Flutter\n  - webview_flutter_wkwebview (0.0.1):\n    - Flutter\n    - FlutterMacOS\n\nDEPENDENCIES:\n  - connectivity_plus (from `.symlinks/plugins/connectivity_plus/darwin`)\n  - file_picker (from `.symlinks/plugins/file_picker/ios`)\n  - Flutter (from `Flutter`)\n  - flutter_native_splash (from `.symlinks/plugins/flutter_native_splash/ios`)\n  - flutter_secure_storage (from `.symlinks/plugins/flutter_secure_storage/ios`)\n  - google_mobile_ads (from `.symlinks/plugins/google_mobile_ads/ios`)\n  - image_picker_ios (from `.symlinks/plugins/image_picker_ios/ios`)\n  - path_provider_foundation (from `.symlinks/plugins/path_provider_foundation/darwin`)\n  - shared_preferences_foundation (from `.symlinks/plugins/shared_preferences_foundation/darwin`)\n  - url_launcher_ios (from `.symlinks/plugins/url_launcher_ios/ios`)\n  - webview_flutter_wkwebview (from `.symlinks/plugins/webview_flutter_wkwebview/darwin`)\n\nSPEC REPOS:\n  trunk:\n    - DKImagePickerController\n    - DKPhotoGallery\n    - Google-Mobile-Ads-SDK\n    - GoogleUserMessagingPlatform\n    - SDWebImage\n    - SwiftyGif\n\nEXTERNAL SOURCES:\n  connectivity_plus:\n    :path: \".symlinks/plugins/connectivity_plus/darwin\"\n  file_picker:\n    :path: \".symlinks/plugins/file_picker/ios\"\n  Flutter:\n    :path: Flutter\n  flutter_native_splash:\n    :path: \".symlinks/plugins/flutter_native_splash/ios\"\n  flutter_secure_storage:\n    :path: \".symlinks/plugins/flutter_secure_storage/ios\"\n  google_mobile_ads:\n    :path: \".symlinks/plugins/google_mobile_ads/ios\"\n  image_picker_ios:\n    :path: \".symlinks/plugins/image_picker_ios/ios\"\n  path_provider_foundation:\n    :path: \".symlinks/plugins/path_provider_foundation/darwin\"\n  shared_preferences_foundation:\n    :path: \".symlinks/plugins/shared_preferences_foundation/darwin\"\n  url_launcher_ios:\n    :path: \".symlinks/plugins/url_launcher_ios/ios\"\n  webview_flutter_wkwebview:\n    :path: \".symlinks/plugins/webview_flutter_wkwebview/darwin\"\n\nSPEC CHECKSUMS:\n  connectivity_plus: 18382e7311ba19efcaee94442b23b32507b20695\n  DKImagePickerController: 946cec48c7873164274ecc4624d19e3da4c1ef3c\n  DKPhotoGallery: b3834fecb755ee09a593d7c9e389d8b5d6deed60\n  file_picker: 09aa5ec1ab24135ccd7a1621c46c84134bfd6655\n  Flutter: e0871f40cf51350855a761d2e70bf5af5b9b5de7\n  flutter_native_splash: e8a1e01082d97a8099d973f919f57904c925008a\n  flutter_secure_storage: d33dac7ae2ea08509be337e775f6b59f1ff45f12\n  Google-Mobile-Ads-SDK: 13e6e98edfd78ad8d8a791edb927658cc260a56f\n  google_mobile_ads: 2a538d8e42b1813809782792e48f8cf4374c2180\n  GoogleUserMessagingPlatform: a8b56893477f67212fbc8411c139e61d463349f5\n  image_picker_ios: c560581cceedb403a6ff17f2f816d7fea1421fc1\n  path_provider_foundation: 2b6b4c569c0fb62ec74538f866245ac84301af46\n  SDWebImage: 73c6079366fea25fa4bb9640d5fb58f0893facd8\n  shared_preferences_foundation: fcdcbc04712aee1108ac7fda236f363274528f78\n  SwiftyGif: 706c60cf65fa2bc5ee0313beece843c8eb8194d4\n  url_launcher_ios: 5334b05cef931de560670eeae103fd3e431ac3fe\n  webview_flutter_wkwebview: 0982481e3d9c78fd5c6f62a002fcd24fc791f1e4\n\nPODFILE CHECKSUM: 819463e6a0290f5a72f145ba7cde16e8b6ef0796\n\nCOCOAPODS: 1.15.2\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/ios/Podfile.lock b/step_ai/ios/Podfile.lock
--- a/step_ai/ios/Podfile.lock	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/ios/Podfile.lock	(date 1735925049534)
@@ -50,12 +50,19 @@
   - GoogleUserMessagingPlatform (2.7.0)
   - image_picker_ios (0.0.1):
     - Flutter
+  - package_info_plus (0.4.5):
+    - Flutter
   - path_provider_foundation (0.0.1):
     - Flutter
     - FlutterMacOS
   - SDWebImage (5.20.0):
     - SDWebImage/Core (= 5.20.0)
   - SDWebImage/Core (5.20.0)
+  - Sentry/HybridSDK (8.42.0)
+  - sentry_flutter (8.12.0):
+    - Flutter
+    - FlutterMacOS
+    - Sentry/HybridSDK (= 8.42.0)
   - shared_preferences_foundation (0.0.1):
     - Flutter
     - FlutterMacOS
@@ -74,7 +81,9 @@
   - flutter_secure_storage (from `.symlinks/plugins/flutter_secure_storage/ios`)
   - google_mobile_ads (from `.symlinks/plugins/google_mobile_ads/ios`)
   - image_picker_ios (from `.symlinks/plugins/image_picker_ios/ios`)
+  - package_info_plus (from `.symlinks/plugins/package_info_plus/ios`)
   - path_provider_foundation (from `.symlinks/plugins/path_provider_foundation/darwin`)
+  - sentry_flutter (from `.symlinks/plugins/sentry_flutter/ios`)
   - shared_preferences_foundation (from `.symlinks/plugins/shared_preferences_foundation/darwin`)
   - url_launcher_ios (from `.symlinks/plugins/url_launcher_ios/ios`)
   - webview_flutter_wkwebview (from `.symlinks/plugins/webview_flutter_wkwebview/darwin`)
@@ -86,6 +95,7 @@
     - Google-Mobile-Ads-SDK
     - GoogleUserMessagingPlatform
     - SDWebImage
+    - Sentry
     - SwiftyGif
 
 EXTERNAL SOURCES:
@@ -103,8 +113,12 @@
     :path: ".symlinks/plugins/google_mobile_ads/ios"
   image_picker_ios:
     :path: ".symlinks/plugins/image_picker_ios/ios"
+  package_info_plus:
+    :path: ".symlinks/plugins/package_info_plus/ios"
   path_provider_foundation:
     :path: ".symlinks/plugins/path_provider_foundation/darwin"
+  sentry_flutter:
+    :path: ".symlinks/plugins/sentry_flutter/ios"
   shared_preferences_foundation:
     :path: ".symlinks/plugins/shared_preferences_foundation/darwin"
   url_launcher_ios:
@@ -113,24 +127,27 @@
     :path: ".symlinks/plugins/webview_flutter_wkwebview/darwin"
 
 SPEC CHECKSUMS:
-  connectivity_plus: 18382e7311ba19efcaee94442b23b32507b20695
+  connectivity_plus: 2256d3e20624a7749ed21653aafe291a46446fee
   DKImagePickerController: 946cec48c7873164274ecc4624d19e3da4c1ef3c
   DKPhotoGallery: b3834fecb755ee09a593d7c9e389d8b5d6deed60
-  file_picker: 09aa5ec1ab24135ccd7a1621c46c84134bfd6655
+  file_picker: 9b3292d7c8bc68c8a7bf8eb78f730e49c8efc517
   Flutter: e0871f40cf51350855a761d2e70bf5af5b9b5de7
-  flutter_native_splash: e8a1e01082d97a8099d973f919f57904c925008a
-  flutter_secure_storage: d33dac7ae2ea08509be337e775f6b59f1ff45f12
+  flutter_native_splash: 576fbd69b830a63594ae678396fa17e43abbc5f8
+  flutter_secure_storage: 1ed9476fba7e7a782b22888f956cce43e2c62f13
   Google-Mobile-Ads-SDK: 13e6e98edfd78ad8d8a791edb927658cc260a56f
-  google_mobile_ads: 2a538d8e42b1813809782792e48f8cf4374c2180
+  google_mobile_ads: dc2b2a5884bef7ab2b4ff30022a513df5373e208
   GoogleUserMessagingPlatform: a8b56893477f67212fbc8411c139e61d463349f5
-  image_picker_ios: c560581cceedb403a6ff17f2f816d7fea1421fc1
-  path_provider_foundation: 2b6b4c569c0fb62ec74538f866245ac84301af46
+  image_picker_ios: 7fe1ff8e34c1790d6fff70a32484959f563a928a
+  package_info_plus: af8e2ca6888548050f16fa2f1938db7b5a5df499
+  path_provider_foundation: 080d55be775b7414fd5a5ef3ac137b97b097e564
   SDWebImage: 73c6079366fea25fa4bb9640d5fb58f0893facd8
-  shared_preferences_foundation: fcdcbc04712aee1108ac7fda236f363274528f78
+  Sentry: 38ed8bf38eab5812787274bf591e528074c19e02
+  sentry_flutter: a72ca0eb6e78335db7c4ddcddd1b9f6c8ed5b764
+  shared_preferences_foundation: 9e1978ff2562383bd5676f64ec4e9aa8fa06a6f7
   SwiftyGif: 706c60cf65fa2bc5ee0313beece843c8eb8194d4
-  url_launcher_ios: 5334b05cef931de560670eeae103fd3e431ac3fe
-  webview_flutter_wkwebview: 0982481e3d9c78fd5c6f62a002fcd24fc791f1e4
+  url_launcher_ios: 694010445543906933d732453a59da0a173ae33d
+  webview_flutter_wkwebview: 44d4dee7d7056d5ad185d25b38404436d56c547c
 
 PODFILE CHECKSUM: 819463e6a0290f5a72f145ba7cde16e8b6ef0796
 
-COCOAPODS: 1.15.2
+COCOAPODS: 1.16.2
Index: step_ai/lib/features/email_composer/presentation/pages/email_composer.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:math';\n\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:loading_animation_widget/loading_animation_widget.dart';\nimport 'package:step_ai/features/email_composer/data/network/api_response_email.dart';\nimport 'package:step_ai/features/email_composer/data/repository/response_email_repository_impl.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/email_style.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/response_email.dart';\nimport 'package:step_ai/features/email_composer/domain/usecase/generate_email_response_usecase.dart';\nimport 'package:step_ai/features/email_composer/presentation/widgets/action_tile.dart';\nimport 'package:step_ai/features/prompt/presentation/widgets/language_custom_dropdown.dart';\nimport 'package:step_ai/shared/styles/horizontal_spacing.dart';\nimport 'package:step_ai/shared/styles/vertical_spacing.dart';\nimport '../../../email_composer/domain/entity/assistant.dart';\nimport 'package:step_ai/features/email_composer/presentation/widgets/ai_selector.dart';\nimport 'package:step_ai/shared/widgets/category_selector.dart';\n\nimport '../../../../config/constants.dart';\nimport '../../../../shared/styles/colors.dart';\nimport '../../domain/usecase/generate_idea_usecase.dart';\n\nclass EmailComposer extends StatefulWidget {\n  const EmailComposer({super.key});\n\n  @override\n  State<EmailComposer> createState() => _EmailComposerState();\n}\n\nclass _EmailComposerState extends State<EmailComposer> {\n  final _formKey = GlobalKey<FormState>();\n\n  var _isGeneratingIdea = false;\n  var _isGeneratingEmail = false;\n\n  final TextEditingController _subjectController = TextEditingController();\n  final TextEditingController _senderController = TextEditingController();\n  final TextEditingController _receiverController = TextEditingController();\n  final TextEditingController _yourEmailController = TextEditingController();\n  final TextEditingController _mainIdeaController = TextEditingController();\n  final _formalityOptions = Constant.formalityOptions.keys.toList();\n  final _toneOptions = Constant.toneOptions.keys.toList();\n  final _lengthOptions = Constant.lengthOptions.keys.toList();\n  final _assistantList = Constant.baseModels.map(Assistant.fromJson).toList();\n  final _languages = Constant.languages;\n  late String _selectedFormality;\n  late String _selectedTone;\n  late String _selectedLength;\n  late Assistant _selectedAssistant;\n  late String _selectedLanguage;\n  List<String> ideas = [];\n\n  @override\n  void initState() {\n    super.initState();\n    _selectedFormality = _formalityOptions.first;\n    _selectedTone = _toneOptions.first;\n    _selectedLength = _lengthOptions.first;\n    _selectedAssistant = _assistantList.first;\n    _selectedLanguage = _languages.keys.first;\n\n    _mainIdeaController.addListener(_textChange);\n    _yourEmailController.addListener(_textChange);\n  }\n\n  void _textChange() {\n    setState(() {});\n  }\n\n  @override\n  void dispose() {\n    _mainIdeaController.removeListener(_textChange);\n    _yourEmailController.removeListener(_textChange);\n    // Dispose controllers to free resources\n    _subjectController.dispose();\n    _senderController.dispose();\n    _receiverController.dispose();\n    _yourEmailController.dispose();\n    _mainIdeaController.dispose();\n\n    super.dispose();\n  }\n\n  String? _validateField(String? value) {\n    if (value == null || value.trim().isEmpty) {\n      return 'Put a few words into it';\n    }\n    return null;\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text(\"Email Composer\"),\n      ),\n      body: SingleChildScrollView(\n        child: SafeArea(\n          child: Padding(\n            padding: const EdgeInsets.all(8.0),\n            child: _buildForm(),\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildResult(String email) {\n    return SingleChildScrollView(\n      child: Column(\n        children: [\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n              Text('Word count: ${email.trim().split(RegExp(r'\\s+')).length}'),\n              Row(\n                children: [\n                  IconButton(\n                    onPressed: () {\n                      // Implement copying logic\n                      Clipboard.setData(ClipboardData(text: email));\n                      ScaffoldMessenger.of(context).showSnackBar(\n                        const SnackBar(content: Text('Copied to clipboard!')),\n                      );\n                    },\n                    tooltip: 'Copy',\n                    icon: const Icon(Icons.copy_rounded),\n                  ),\n                ],\n              ),\n            ],\n          ),\n          Text(email),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildForm() {\n    return SizedBox(\n      child: Padding(\n        padding: const EdgeInsets.all(8.0),\n        child: Form(\n          key: _formKey,\n          child: Wrap(\n            children: [\n              _buildEmailFormField(\n                  \"Email to reply to:\", _yourEmailController, _validateField),\n              if (ideas.isNotEmpty)\n                ...ideas.map((idea) => Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: ActionTile(\n                          action: idea,\n                          onTap: () async {\n                            await _replyEmail(idea);\n                          }),\n                    )),\n              Padding(\n                  padding: const EdgeInsets.all(8.0),\n                  child: Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                      crossAxisAlignment: CrossAxisAlignment.center,\n                      children: [\n                        AiSelector(\n                          assistants: _assistantList,\n                          onAssistantSelected: (a) {\n                            setState(() {\n                              _selectedAssistant = a;\n                            });\n                          },\n                          selectedAssistant: _selectedAssistant,\n                        ),\n                        IconButton(\n                          tooltip: \"Generate ideas\",\n                          onPressed: _isGeneratingIdea\n                              ? () {}\n                              : () async {\n                                  if (_formKey.currentState!.validate()) {\n                                    setState(() {\n                                      _isGeneratingIdea = true;\n                                    });\n\n                                    await _generateIdeas();\n\n                                    setState(() {\n                                      _isGeneratingIdea = false;\n                                    });\n                                  } else {\n                                    showErrorDialog(context,\n                                        Constant.errorMessage['empty-email']!);\n                                  }\n                                },\n                          icon: _isGeneratingIdea\n                              ? Row(\n                                  children: [\n                                    LoadingAnimationWidget.discreteCircle(\n                                        color: TColor.doctorWhite, size: 12),\n                                    HSpacing.sm,\n                                    Text(\n                                      \"Generating...\",\n                                      style: Theme.of(context)\n                                          .textTheme\n                                          .titleLarge!\n                                          .copyWith(\n                                            fontSize: 13,\n                                            color: TColor.doctorWhite,\n                                            fontWeight: FontWeight.w800,\n                                          ),\n                                    ),\n                                  ],\n                                )\n                              : Icon(\n                                  Icons.lightbulb_outline_rounded,\n                                  color: TColor.doctorWhite,\n                                ),\n                          color: TColor.goldenState,\n                          highlightColor: TColor.goldenState,\n                          style: ButtonStyle(\n                              backgroundColor: _isGeneratingIdea\n                                  ? WidgetStatePropertyAll(TColor.goldenState)\n                                  : WidgetStatePropertyAll(TColor.tamarama)),\n                        )\n                      ])),\n              _buildActionField(_mainIdeaController),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  Future<void> _generateIdeas(\n      {String suggestion = \"Suggest 3 ideas for this email\"}) async {\n    EmailStyle style = EmailStyle(\n        formality: _selectedFormality,\n        length: _selectedLength,\n        tone: _selectedTone);\n    AiEmail email = _buildAiEmail(style, suggestion, _mainIdeaController.text);\n    ideas = await GenerateIdeaUsecase(\n            repository: ResponseEmailRepositoryImpl(ApiResponseEmail()))\n        .call(params: email);\n  }\n\n  AiEmail _buildAiEmail(EmailStyle style, String action, String mainIdea) {\n    return AiEmail(\n      subject: _subjectController.text,\n      sender: _senderController.text,\n      receiver: _receiverController.text,\n      action: action,\n      email: _yourEmailController.text,\n      mainIdea: mainIdea,\n      language: _languages[_selectedLanguage] ?? \"English\",\n      style: style,\n    );\n  }\n\n  Widget _buildAdvancedOptionsButton() {\n    return Material(\n      color: Colors.transparent,\n      child: InkWell(\n        focusColor: Colors.transparent,\n        splashColor: TColor.northEastSnow,\n        hoverColor: Colors.transparent,\n        borderRadius: BorderRadius.circular(10),\n        onTap: () {\n          showDialog(\n              context: context,\n              builder: (_) {\n                return _buildStyleAndLength();\n              });\n        },\n        child: Padding(\n          padding: const EdgeInsets.all(4.0),\n          child: Text(\n            \"Advanced Options\",\n            style: Theme.of(context).textTheme.titleLarge!.copyWith(\n                fontSize: 13,\n                color: TColor.tamarama,\n                fontWeight: FontWeight.w800),\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget _buildStyleAndLength() {\n    return Dialog(\n      backgroundColor: TColor.doctorWhite,\n      child: StatefulBuilder(\n        builder: (BuildContext context, StateSetter setState) {\n          return Padding(\n            padding: const EdgeInsets.all(20.0),\n            child: SizedBox(\n              width: min(450, MediaQuery.of(context).size.width * 0.8),\n              height: 600,\n              child: SingleChildScrollView(\n                child: Column(\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                      children: [\n                        Text(\"Advanced Options\",\n                            style: Theme.of(context).textTheme.bodyLarge),\n                        CloseButton(\n                          onPressed: Navigator.of(context).pop,\n                        )\n                      ],\n                    ),\n                    _buildRowFormField(\"Subject:\", _subjectController),\n                    _buildRowFormField(\"From:\", _senderController),\n                    _buildRowFormField(\"To:\", _receiverController),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: Text(\n                        \"Language:\",\n                        style: Theme.of(context).textTheme.titleSmall!.copyWith(\n                              color: TColor.petRock.withOpacity(0.8),\n                              fontSize: 14,\n                            ),\n                      ),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: LanguageCustomDropdown(\n                          value: _selectedLanguage,\n                          items: _languages,\n                          onChanged: (e) {\n                            setState(() {\n                              _selectedLanguage = e ?? \"Auto\";\n                            });\n                          },\n                          hintText: \"Select a language\"),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: Text(\n                        \"Length:\",\n                        style: Theme.of(context).textTheme.titleSmall!.copyWith(\n                              color: TColor.petRock.withOpacity(0.8),\n                              fontSize: 14,\n                            ),\n                      ),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: CategoryChips(\n                          categories: _lengthOptions,\n                          selectedCategory: _selectedLength,\n                          onCategorySelected: (e) {\n                            setState(() {\n                              _selectedLength = e;\n                            });\n                          }),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: Text(\n                        \"Formality:\",\n                        style: Theme.of(context).textTheme.titleSmall!.copyWith(\n                              color: TColor.petRock.withOpacity(0.8),\n                              fontSize: 14,\n                            ),\n                      ),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: CategoryChips(\n                          categories: _formalityOptions,\n                          selectedCategory: _selectedFormality,\n                          onCategorySelected: (e) {\n                            setState(() {\n                              _selectedFormality = e;\n                            });\n                          }),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: Text(\n                        \"Tone:\",\n                        style: Theme.of(context).textTheme.titleSmall!.copyWith(\n                              color: TColor.petRock.withOpacity(0.8),\n                              fontSize: 14,\n                            ),\n                      ),\n                    ),\n                    Padding(\n                      padding: const EdgeInsets.all(8.0),\n                      child: CategoryChips(\n                          categories: _toneOptions,\n                          selectedCategory: _selectedTone,\n                          onCategorySelected: (e) {\n                            setState(() {\n                              _selectedTone = e;\n                            });\n                          }),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          );\n        },\n      ),\n    );\n  }\n\n  Widget _buildActionField(TextEditingController controller) {\n    return Padding(\n      padding: const EdgeInsets.all(8.0),\n      child: TextField(\n        enabled: !_isGeneratingEmail,\n        style: Theme.of(context).textTheme.bodyMedium!.copyWith(\n              color: TColor.petRock,\n              fontWeight: FontWeight.w600,\n              fontSize: 13,\n            ),\n        controller: controller,\n        decoration: InputDecoration(\n          suffixIcon: _mainIdeaController.text.isNotEmpty\n              ? IconButton(\n                  padding: const EdgeInsets.all(2),\n                  icon: _isGeneratingEmail\n                      ? Container(\n                          decoration: BoxDecoration(\n                            borderRadius: BorderRadius.circular(50),\n                            color: TColor.tamarama,\n                          ),\n                          child: Padding(\n                            padding: const EdgeInsets.all(4.0),\n                            child: LoadingAnimationWidget.discreteCircle(\n                                color: TColor.doctorWhite, size: 12),\n                          ))\n                      : Icon(Icons.send_rounded,\n                          size: 20, color: TColor.tamarama),\n                  onPressed: () async {\n                    if (_formKey.currentState!.validate()) {\n                      setState(() {\n                        _isGeneratingEmail = true;\n                      });\n                      await _replyEmail(_mainIdeaController.text);\n                      _mainIdeaController.clear();\n                      setState(() {\n                        _isGeneratingEmail = false;\n                      });\n                    } else {\n                      showErrorDialog(\n                          context, Constant.errorMessage['empty-email']!);\n                    }\n                  },\n                )\n              : IconButton(\n                  padding: const EdgeInsets.all(2),\n                  icon:\n                      Icon(Icons.send_rounded, size: 20, color: TColor.petRock),\n                  onPressed: () {\n                    showErrorDialog(\n                        context, Constant.errorMessage['empty-email']!);\n                  },\n                ),\n          hintText: \"Tell STEP how you would like to reply...\",\n          floatingLabelBehavior: FloatingLabelBehavior.auto,\n          hintStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                color: TColor.petRock.withOpacity(0.7),\n                fontWeight: FontWeight.w600,\n                fontSize: 13,\n              ),\n          labelStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                color: TColor.petRock.withOpacity(0.7),\n                fontWeight: FontWeight.w600,\n                fontSize: 13,\n              ),\n          filled: true,\n          fillColor: TColor.northEastSnow,\n          focusedBorder: OutlineInputBorder(\n            borderRadius: BorderRadius.circular(50.0),\n            borderSide: BorderSide(\n              color: TColor.tamarama,\n            ),\n          ),\n          border: OutlineInputBorder(\n            borderRadius: BorderRadius.circular(50.0),\n            borderSide: BorderSide.none,\n          ),\n        ),\n      ),\n    );\n  }\n\n  Future<void> _replyEmail(String mainIdea) async {\n    EmailStyle style = EmailStyle(\n        formality: _selectedFormality,\n        length: _selectedLength,\n        tone: _selectedTone);\n    AiEmail email = _buildAiEmail(style, \"Reply to this email\", mainIdea);\n\n    ResponseEmail result = await GenerateResponseEmailUsecase(\n            repository: ResponseEmailRepositoryImpl(ApiResponseEmail()))\n        .call(params: email);\n\n    if (context.mounted) {\n      showDialog(\n        context: context,\n        barrierDismissible: true,\n        builder: (_) {\n          return AlertDialog(\n            backgroundColor: TColor.doctorWhite,\n            contentPadding: const EdgeInsets.all(16.0),\n            shape: RoundedRectangleBorder(\n              borderRadius: BorderRadius.circular(10.0),\n            ),\n            content: Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: Wrap(children: [\n                Column(\n                  children: [\n                    _buildResult(result.email),\n                  ],\n                ),\n              ]),\n            ),\n          );\n        },\n      );\n    }\n  }\n\n  Widget _buildRowFormField(String label, TextEditingController controller) {\n    return Padding(\n      padding: const EdgeInsets.all(8.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            label,\n            style: Theme.of(context).textTheme.titleMedium!.copyWith(\n                  color: TColor.petRock.withOpacity(0.8),\n                  fontSize: 14,\n                ),\n          ),\n          TextFormField(\n            style: Theme.of(context).textTheme.titleSmall!.copyWith(\n                  color: TColor.petRock,\n                  fontSize: 14,\n                  fontWeight: FontWeight.w800,\n                ),\n            controller: controller,\n            decoration: InputDecoration(\n              floatingLabelBehavior: FloatingLabelBehavior.auto,\n              hintStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                    color: TColor.petRock.withOpacity(0.7),\n                    fontWeight: FontWeight.w600,\n                    fontSize: 13,\n                  ),\n              labelStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                    color: TColor.petRock.withOpacity(0.7),\n                    fontWeight: FontWeight.w600,\n                    fontSize: 13,\n                  ),\n              filled: true,\n              fillColor: TColor.northEastSnow,\n              focusedBorder: OutlineInputBorder(\n                borderRadius: BorderRadius.circular(8.0),\n                borderSide: BorderSide(\n                  color: TColor.tamarama,\n                ),\n              ),\n              border: OutlineInputBorder(\n                borderRadius: BorderRadius.circular(8.0),\n                borderSide: BorderSide.none,\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildEmailFormField(String label, TextEditingController controller,\n      FormFieldValidator<String> validator) {\n    return Padding(\n      padding: const EdgeInsets.all(8.0),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.end,\n        children: [\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            crossAxisAlignment: CrossAxisAlignment.end,\n            children: [\n              Text(\n                label,\n                style: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                      color: TColor.petRock,\n                      fontWeight: FontWeight.w700,\n                      fontSize: 14,\n                    ),\n              ),\n              _buildAdvancedOptionsButton(),\n            ],\n          ),\n          VSpacing.sm,\n          TextFormField(\n            maxLines: 20,\n            minLines: 10,\n            controller: controller,\n            validator: validator,\n            decoration: InputDecoration(\n              hintText: \"Parse the email you would like to reply\",\n              hintStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                    color: TColor.petRock.withOpacity(0.7),\n                    fontWeight: FontWeight.w600,\n                    fontSize: 13,\n                  ),\n              labelStyle: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                    color: TColor.petRock.withOpacity(0.7),\n                    fontWeight: FontWeight.w700,\n                    fontSize: 13,\n                  ),\n              filled: true,\n              fillColor: TColor.northEastSnow,\n              focusedBorder: OutlineInputBorder(\n                borderRadius: BorderRadius.circular(8.0),\n                borderSide: BorderSide(\n                  color: TColor.tamarama,\n                ),\n              ),\n              border: OutlineInputBorder(\n                borderRadius: BorderRadius.circular(8.0),\n                borderSide: BorderSide.none,\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  void showErrorDialog(BuildContext context, String error) {\n    showDialog(\n      context: context,\n      builder: (BuildContext context) {\n        return AlertDialog(\n          backgroundColor: TColor.doctorWhite,\n          title: Row(\n            mainAxisAlignment: MainAxisAlignment.spaceBetween,\n            children: [\n              Text(\n                \"Oops!\",\n                style: Theme.of(context).textTheme.bodyLarge!.copyWith(\n                      fontWeight: FontWeight.w800,\n                    ),\n              ),\n              CloseButton(\n                onPressed: Navigator.of(context).pop,\n              )\n            ],\n          ),\n          content: Padding(\n            padding: const EdgeInsets.all(8.0),\n            child: Text(error,\n                style: Theme.of(context).textTheme.bodyMedium!.copyWith(\n                      color: TColor.petRock,\n                      fontWeight: FontWeight.w700,\n                    )),\n          ),\n          actions: [\n            TextButton(\n              onPressed: () => Navigator.of(context).pop(),\n              child: Text(\n                \"Got it\",\n                style: Theme.of(context).textTheme.bodyLarge!.copyWith(\n                      color: TColor.poppySurprise,\n                    ),\n              ),\n            ),\n          ],\n        );\n      },\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/presentation/pages/email_composer.dart b/step_ai/lib/features/email_composer/presentation/pages/email_composer.dart
--- a/step_ai/lib/features/email_composer/presentation/pages/email_composer.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/presentation/pages/email_composer.dart	(date 1735244558512)
@@ -3,16 +3,22 @@
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:loading_animation_widget/loading_animation_widget.dart';
-import 'package:step_ai/features/email_composer/data/network/api_response_email.dart';
-import 'package:step_ai/features/email_composer/data/repository/response_email_repository_impl.dart';
+import 'package:provider/provider.dart';
 import 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';
 import 'package:step_ai/features/email_composer/domain/entity/email_style.dart';
 import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
 import 'package:step_ai/features/email_composer/domain/usecase/generate_email_response_usecase.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/email_composer_notifier.dart';
+import 'package:step_ai/features/email_composer/presentation/notifier/usage_token_notifier.dart';
 import 'package:step_ai/features/email_composer/presentation/widgets/action_tile.dart';
 import 'package:step_ai/features/prompt/presentation/widgets/language_custom_dropdown.dart';
 import 'package:step_ai/shared/styles/horizontal_spacing.dart';
 import 'package:step_ai/shared/styles/vertical_spacing.dart';
+import 'package:step_ai/shared/widgets/history_drawer.dart';
+import '../../../../config/routes/routes.dart';
+import '../../../../shared/usecases/pricing_redirect_service.dart';
+import '../../../../shared/widgets/gradient_text.dart';
+import '../../../../shared/widgets/image_by_text_widget.dart';
 import '../../../email_composer/domain/entity/assistant.dart';
 import 'package:step_ai/features/email_composer/presentation/widgets/ai_selector.dart';
 import 'package:step_ai/shared/widgets/category_selector.dart';
@@ -31,7 +37,6 @@
 class _EmailComposerState extends State<EmailComposer> {
   final _formKey = GlobalKey<FormState>();
 
-  var _isGeneratingIdea = false;
   var _isGeneratingEmail = false;
 
   final TextEditingController _subjectController = TextEditingController();
@@ -49,6 +54,8 @@
   late String _selectedLength;
   late Assistant _selectedAssistant;
   late String _selectedLanguage;
+  late EmailComposerNotifier _composerNotifier;
+  late UsageTokenNotifier _notifier;
   List<String> ideas = [];
 
   @override
@@ -62,6 +69,17 @@
 
     _mainIdeaController.addListener(_textChange);
     _yourEmailController.addListener(_textChange);
+    final notifier = Provider.of<UsageTokenNotifier>(context, listen: false);
+
+    WidgetsBinding.instance.addPostFrameCallback((_) async {
+      await notifier.loadUsageToken();
+    });
+
+    notifier.addListener(() {
+      if (notifier.hasError) {
+        Navigator.of(context).pushReplacementNamed(Routes.authenticate);
+      }
+    });
   }
 
   void _textChange() {
@@ -78,6 +96,13 @@
     _receiverController.dispose();
     _yourEmailController.dispose();
     _mainIdeaController.dispose();
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      if (mounted) {
+        final notifier =
+            Provider.of<UsageTokenNotifier>(context, listen: false);
+        notifier.removeListener(() {});
+      }
+    });
 
     super.dispose();
   }
@@ -91,17 +116,24 @@
 
   @override
   Widget build(BuildContext context) {
+    _composerNotifier =
+        Provider.of<EmailComposerNotifier>(context, listen: true);
+    _notifier = Provider.of<UsageTokenNotifier>(context, listen: true);
+
     return Scaffold(
+      resizeToAvoidBottomInset: true,
+      drawer: HistoryDrawer(),
+      onDrawerChanged: (isOpened) {
+        if (isOpened) {
+          FocusScope.of(context).unfocus();
+        }
+      },
       appBar: AppBar(
         title: const Text("Email Composer"),
       ),
-      body: SingleChildScrollView(
-        child: SafeArea(
-          child: Padding(
-            padding: const EdgeInsets.all(8.0),
-            child: _buildForm(),
-          ),
-        ),
+      body: Padding(
+        padding: const EdgeInsets.all(8.0),
+        child: _buildForm(),
       ),
     );
   }
@@ -113,16 +145,16 @@
           Row(
             mainAxisAlignment: MainAxisAlignment.spaceBetween,
             children: [
-              Text('Word count: ${email.trim().split(RegExp(r'\s+')).length}'),
+              Text(
+                'Word count: ${email.trim().split(RegExp(r'\s+')).length}',
+                style: Theme.of(context).textTheme.bodyMedium,
+              ),
               Row(
                 children: [
                   IconButton(
                     onPressed: () {
                       // Implement copying logic
                       Clipboard.setData(ClipboardData(text: email));
-                      ScaffoldMessenger.of(context).showSnackBar(
-                        const SnackBar(content: Text('Copied to clipboard!')),
-                      );
                     },
                     tooltip: 'Copy',
                     icon: const Icon(Icons.copy_rounded),
@@ -131,98 +163,186 @@
               ),
             ],
           ),
-          Text(email),
+          Text(email, style: Theme.of(context).textTheme.bodyLarge),
         ],
       ),
     );
   }
 
   Widget _buildForm() {
-    return SizedBox(
-      child: Padding(
-        padding: const EdgeInsets.all(8.0),
-        child: Form(
-          key: _formKey,
-          child: Wrap(
+    return Padding(
+      padding: const EdgeInsets.all(8.0),
+      child: Form(
+        key: _formKey,
+        child: SizedBox(
+          height: MediaQuery.of(context).size.height,
+          child: Column(
+            mainAxisSize: MainAxisSize.max,
+            mainAxisAlignment: MainAxisAlignment.start,
             children: [
-              _buildEmailFormField(
-                  "Email to reply to:", _yourEmailController, _validateField),
-              if (ideas.isNotEmpty)
-                ...ideas.map((idea) => Padding(
-                      padding: const EdgeInsets.all(8.0),
-                      child: ActionTile(
-                          action: idea,
-                          onTap: () async {
-                            await _replyEmail(idea);
-                          }),
-                    )),
+              Expanded(
+                child: SingleChildScrollView(
+                  child: Column(
+                    children: [
+                      _buildEmailFormField("Email to reply to:",
+                          _yourEmailController, _validateField),
+                      if (_composerNotifier.ideas.isNotEmpty)
+                        ..._composerNotifier.ideas.map(
+                          (idea) => Padding(
+                            padding: const EdgeInsets.all(8.0),
+                            child: ActionTile(
+                                action: idea,
+                                onTap: () async {
+                                  await _replyEmail(idea);
+                                }),
+                          ),
+                        ),
+                    ],
+                  ),
+                ),
+              ),
               Padding(
-                  padding: const EdgeInsets.all(8.0),
-                  child: Row(
-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
-                      crossAxisAlignment: CrossAxisAlignment.center,
-                      children: [
-                        AiSelector(
-                          assistants: _assistantList,
-                          onAssistantSelected: (a) {
-                            setState(() {
-                              _selectedAssistant = a;
-                            });
-                          },
-                          selectedAssistant: _selectedAssistant,
-                        ),
-                        IconButton(
-                          tooltip: "Generate ideas",
-                          onPressed: _isGeneratingIdea
-                              ? () {}
-                              : () async {
-                                  if (_formKey.currentState!.validate()) {
-                                    setState(() {
-                                      _isGeneratingIdea = true;
-                                    });
-
-                                    await _generateIdeas();
-
-                                    setState(() {
-                                      _isGeneratingIdea = false;
-                                    });
-                                  } else {
-                                    showErrorDialog(context,
-                                        Constant.errorMessage['empty-email']!);
-                                  }
-                                },
-                          icon: _isGeneratingIdea
-                              ? Row(
-                                  children: [
-                                    LoadingAnimationWidget.discreteCircle(
-                                        color: TColor.doctorWhite, size: 12),
-                                    HSpacing.sm,
-                                    Text(
-                                      "Generating...",
-                                      style: Theme.of(context)
-                                          .textTheme
-                                          .titleLarge!
-                                          .copyWith(
-                                            fontSize: 13,
-                                            color: TColor.doctorWhite,
-                                            fontWeight: FontWeight.w800,
-                                          ),
-                                    ),
-                                  ],
-                                )
-                              : Icon(
-                                  Icons.lightbulb_outline_rounded,
-                                  color: TColor.doctorWhite,
-                                ),
-                          color: TColor.goldenState,
-                          highlightColor: TColor.goldenState,
-                          style: ButtonStyle(
-                              backgroundColor: _isGeneratingIdea
-                                  ? WidgetStatePropertyAll(TColor.goldenState)
-                                  : WidgetStatePropertyAll(TColor.tamarama)),
-                        )
-                      ])),
-              _buildActionField(_mainIdeaController),
+                padding: const EdgeInsets.only(bottom: 20.0),
+                child: SafeArea(
+                  child: Align(
+                    alignment: Alignment.bottomCenter,
+                    child: Column(
+                      children: [
+                        Padding(
+                            padding: const EdgeInsets.all(8.0),
+                            child: Row(
+                                mainAxisAlignment:
+                                    MainAxisAlignment.spaceBetween,
+                                crossAxisAlignment: CrossAxisAlignment.center,
+                                children: [
+                                  AiSelector(
+                                    assistants: _assistantList,
+                                    onAssistantSelected: (a) {
+                                      setState(() {
+                                        _selectedAssistant = a;
+                                      });
+                                    },
+                                    selectedAssistant: _selectedAssistant,
+                                  ),
+                                  IconButton(
+                                    tooltip: "Generate ideas",
+                                    onPressed:
+                                        _composerNotifier.isGeneratingIdea
+                                            ? () {}
+                                            : () async {
+                                                if (_formKey.currentState!
+                                                    .validate()) {
+                                                  await _generateIdeas();
+                                                } else {
+                                                  showErrorDialog(
+                                                      context,
+                                                      Constant.errorMessage[
+                                                          'empty-email']!);
+                                                }
+                                              },
+                                    icon: _composerNotifier.isGeneratingIdea
+                                        ? Row(
+                                            children: [
+                                              LoadingAnimationWidget
+                                                  .discreteCircle(
+                                                      color: TColor.doctorWhite,
+                                                      size: 12),
+                                              HSpacing.sm,
+                                              Text(
+                                                "Generating...",
+                                                style: Theme.of(context)
+                                                    .textTheme
+                                                    .titleLarge!
+                                                    .copyWith(
+                                                      fontSize: 13,
+                                                      color: TColor.doctorWhite,
+                                                      fontWeight:
+                                                          FontWeight.w800,
+                                                    ),
+                                              ),
+                                            ],
+                                          )
+                                        : Icon(
+                                            Icons.lightbulb_outline_rounded,
+                                            color: TColor.doctorWhite,
+                                          ),
+                                    color: TColor.goldenState,
+                                    highlightColor: TColor.goldenState,
+                                    style: ButtonStyle(
+                                        backgroundColor:
+                                            _composerNotifier.isGeneratingIdea
+                                                ? WidgetStatePropertyAll(
+                                                    TColor.goldenState)
+                                                : WidgetStatePropertyAll(
+                                                    TColor.tamarama)),
+                                  )
+                                ])),
+                        _buildActionField(_mainIdeaController),
+                        const SizedBox(
+                          height: 2,
+                        ),
+                        Padding(
+                          padding: const EdgeInsets.only(left: 10),
+                          child: Row(
+                            children: [
+                              ImageByText(
+                                imagePath: "lib/core/assets/imgs/flame.png",
+                                text: _notifier.model != null
+                                    ? _notifier.model!.availableTokens
+                                        .toString()
+                                    : "",
+                              ),
+                              HSpacing.sm,
+                              Material(
+                                color: Colors.transparent,
+                                child: InkWell(
+                                  borderRadius: BorderRadius.circular(20),
+                                  onTap: () async =>
+                                      await PricingRedirectService.call(),
+                                  child: Padding(
+                                    padding: const EdgeInsets.all(4.0),
+                                    child: Row(
+                                      children: [
+                                        Icon(
+                                          Icons.rocket_launch_rounded,
+                                          color: TColor.tamarama,
+                                        ),
+                                        const SizedBox(
+                                          width: 3,
+                                        ),
+                                        GradientText(
+                                          'Upgrade',
+                                          style: Theme.of(context)
+                                              .textTheme
+                                              .titleMedium!
+                                              .copyWith(
+                                                color: TColor.tamarama,
+                                                fontWeight: FontWeight.w600,
+                                                fontSize: 14,
+                                              ),
+                                          gradient: LinearGradient(
+                                            begin: Alignment.bottomLeft,
+                                            end: Alignment.topRight,
+                                            tileMode: TileMode.decal,
+                                            colors: [
+                                              TColor.tamarama,
+                                              TColor.goldenState,
+                                            ],
+                                          ),
+                                        ),
+                                      ],
+                                    ),
+                                  ),
+                                ),
+                              ),
+                            ],
+                          ),
+                        ),
+                      ],
+                    ),
+                  ),
+                ),
+              ),
             ],
           ),
         ),
@@ -237,9 +357,7 @@
         length: _selectedLength,
         tone: _selectedTone);
     AiEmail email = _buildAiEmail(style, suggestion, _mainIdeaController.text);
-    ideas = await GenerateIdeaUsecase(
-            repository: ResponseEmailRepositoryImpl(ApiResponseEmail()))
-        .call(params: email);
+    await _composerNotifier.generateIdeas(email);
   }
 
   AiEmail _buildAiEmail(EmailStyle style, String action, String mainIdea) {
@@ -495,9 +613,12 @@
         tone: _selectedTone);
     AiEmail email = _buildAiEmail(style, "Reply to this email", mainIdea);
 
-    ResponseEmail result = await GenerateResponseEmailUsecase(
-            repository: ResponseEmailRepositoryImpl(ApiResponseEmail()))
-        .call(params: email);
+    await _composerNotifier.generateEmail(email);
+
+    ResponseEmail result =
+        _composerNotifier.emailList[_composerNotifier.currentEmailIndex];
+
+    _notifier.loadUsageToken();
 
     if (context.mounted) {
       showDialog(
@@ -601,7 +722,7 @@
           ),
           VSpacing.sm,
           TextFormField(
-            maxLines: 20,
+            maxLines: 10,
             minLines: 10,
             controller: controller,
             validator: validator,
Index: step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\n\nimport 'package:step_ai/core/usecase/use_case.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/response_email.dart';\nimport 'package:step_ai/features/email_composer/domain/repository/reponse_email_repository.dart';\n\nclass GenerateResponseEmailUsecase extends UseCase<ResponseEmail, AiEmail> {\n\n  final ResponseEmailRepository repository;\n\n  GenerateResponseEmailUsecase({required this.repository});\n\n\n  @override\n  FutureOr<ResponseEmail> call({required AiEmail params}) {\n    return repository.generateResponseEmail(aiEmail: params);\n  }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart b/step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart
--- a/step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/domain/usecase/generate_email_response_usecase.dart	(date 1735225622197)
@@ -3,7 +3,7 @@
 import 'package:step_ai/core/usecase/use_case.dart';
 import 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';
 import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
-import 'package:step_ai/features/email_composer/domain/repository/reponse_email_repository.dart';
+import 'package:step_ai/features/email_composer/domain/repository/response_email_repository.dart';
 
 class GenerateResponseEmailUsecase extends UseCase<ResponseEmail, AiEmail> {
 
Index: step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\n\nimport 'package:step_ai/core/usecase/use_case.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/response_email.dart';\nimport 'package:step_ai/features/email_composer/domain/repository/reponse_email_repository.dart';\n\nclass GenerateIdeaUsecase extends UseCase<List<String>, AiEmail> {\n\n  final ResponseEmailRepository repository;\n\n  GenerateIdeaUsecase({required this.repository});\n\n\n  @override\n  FutureOr<List<String>> call({required AiEmail params}) {\n    return repository.generateIdeasEmail(aiEmail: params);\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart b/step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart
--- a/step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/domain/usecase/generate_idea_usecase.dart	(date 1735225622199)
@@ -3,7 +3,7 @@
 import 'package:step_ai/core/usecase/use_case.dart';
 import 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';
 import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
-import 'package:step_ai/features/email_composer/domain/repository/reponse_email_repository.dart';
+import 'package:step_ai/features/email_composer/domain/repository/response_email_repository.dart';
 
 class GenerateIdeaUsecase extends UseCase<List<String>, AiEmail> {
 
Index: step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\n\nimport 'package:step_ai/core/usecase/use_case.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/compose_email.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/response_email.dart';\nimport 'package:step_ai/features/email_composer/domain/repository/reponse_email_repository.dart';\n\nclass ComposeEmailUsecase extends UseCase<ResponseEmail, ComposeEmail> {\n\n  final ResponseEmailRepository repository;\n\n  ComposeEmailUsecase({required this.repository});\n\n  @override\n  FutureOr<ResponseEmail> call({required ComposeEmail params}) {\n    return repository.composeEmail(composeEmail: params);\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart b/step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart
--- a/step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/domain/usecase/compose_email_usecase.dart	(date 1735225622159)
@@ -4,7 +4,7 @@
 import 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';
 import 'package:step_ai/features/email_composer/domain/entity/compose_email.dart';
 import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
-import 'package:step_ai/features/email_composer/domain/repository/reponse_email_repository.dart';
+import 'package:step_ai/features/email_composer/domain/repository/response_email_repository.dart';
 
 class ComposeEmailUsecase extends UseCase<ResponseEmail, ComposeEmail> {
 
Index: step_ai/linux/flutter/generated_plugin_registrant.cc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  Generated file. Do not edit.\n//\n\n// clang-format off\n\n#include \"generated_plugin_registrant.h\"\n\n#include <file_selector_linux/file_selector_plugin.h>\n#include <flutter_secure_storage_linux/flutter_secure_storage_linux_plugin.h>\n#include <url_launcher_linux/url_launcher_plugin.h>\n\nvoid fl_register_plugins(FlPluginRegistry* registry) {\n  g_autoptr(FlPluginRegistrar) file_selector_linux_registrar =\n      fl_plugin_registry_get_registrar_for_plugin(registry, \"FileSelectorPlugin\");\n  file_selector_plugin_register_with_registrar(file_selector_linux_registrar);\n  g_autoptr(FlPluginRegistrar) flutter_secure_storage_linux_registrar =\n      fl_plugin_registry_get_registrar_for_plugin(registry, \"FlutterSecureStorageLinuxPlugin\");\n  flutter_secure_storage_linux_plugin_register_with_registrar(flutter_secure_storage_linux_registrar);\n  g_autoptr(FlPluginRegistrar) url_launcher_linux_registrar =\n      fl_plugin_registry_get_registrar_for_plugin(registry, \"UrlLauncherPlugin\");\n  url_launcher_plugin_register_with_registrar(url_launcher_linux_registrar);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/linux/flutter/generated_plugin_registrant.cc b/step_ai/linux/flutter/generated_plugin_registrant.cc
--- a/step_ai/linux/flutter/generated_plugin_registrant.cc	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/linux/flutter/generated_plugin_registrant.cc	(date 1735983071423)
@@ -8,6 +8,7 @@
 
 #include <file_selector_linux/file_selector_plugin.h>
 #include <flutter_secure_storage_linux/flutter_secure_storage_linux_plugin.h>
+#include <sentry_flutter/sentry_flutter_plugin.h>
 #include <url_launcher_linux/url_launcher_plugin.h>
 
 void fl_register_plugins(FlPluginRegistry* registry) {
@@ -17,6 +18,9 @@
   g_autoptr(FlPluginRegistrar) flutter_secure_storage_linux_registrar =
       fl_plugin_registry_get_registrar_for_plugin(registry, "FlutterSecureStorageLinuxPlugin");
   flutter_secure_storage_linux_plugin_register_with_registrar(flutter_secure_storage_linux_registrar);
+  g_autoptr(FlPluginRegistrar) sentry_flutter_registrar =
+      fl_plugin_registry_get_registrar_for_plugin(registry, "SentryFlutterPlugin");
+  sentry_flutter_plugin_register_with_registrar(sentry_flutter_registrar);
   g_autoptr(FlPluginRegistrar) url_launcher_linux_registrar =
       fl_plugin_registry_get_registrar_for_plugin(registry, "UrlLauncherPlugin");
   url_launcher_plugin_register_with_registrar(url_launcher_linux_registrar);
Index: step_ai/linux/flutter/generated_plugins.cmake
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#\n# Generated file, do not edit.\n#\n\nlist(APPEND FLUTTER_PLUGIN_LIST\n  file_selector_linux\n  flutter_secure_storage_linux\n  url_launcher_linux\n)\n\nlist(APPEND FLUTTER_FFI_PLUGIN_LIST\n)\n\nset(PLUGIN_BUNDLED_LIBRARIES)\n\nforeach(plugin ${FLUTTER_PLUGIN_LIST})\n  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/linux plugins/${plugin})\n  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})\nendforeach(plugin)\n\nforeach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})\n  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/linux plugins/${ffi_plugin})\n  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})\nendforeach(ffi_plugin)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/linux/flutter/generated_plugins.cmake b/step_ai/linux/flutter/generated_plugins.cmake
--- a/step_ai/linux/flutter/generated_plugins.cmake	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/linux/flutter/generated_plugins.cmake	(date 1735983071436)
@@ -5,6 +5,7 @@
 list(APPEND FLUTTER_PLUGIN_LIST
   file_selector_linux
   flutter_secure_storage_linux
+  sentry_flutter
   url_launcher_linux
 )
 
Index: step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\nimport 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';\nimport 'package:step_ai/features/email_composer/domain/usecase/compose_email_usecase.dart';\nimport 'package:step_ai/features/email_composer/domain/usecase/generate_email_response_usecase.dart';\nimport 'package:step_ai/features/email_composer/domain/usecase/generate_idea_usecase.dart';\n\nclass EmailComposerNotifier extends ChangeNotifier {\n  List<String> ideas = [];\n  String emailContent = \"\";\n  var isGeneratingIdea = false;\n  var isGeneratingEmail = false;\n  var hasError = false;\n  final GenerateResponseEmailUsecase _generateResponseEmailUsecase;\n  final GenerateIdeaUsecase _generateIdeaUsecase;\n\n  EmailComposerNotifier(\n      {required GenerateResponseEmailUsecase generateResponseEmailUsecase,\n      required GenerateIdeaUsecase generateIdeaUsecase})\n      : _generateResponseEmailUsecase = generateResponseEmailUsecase,\n        _generateIdeaUsecase = generateIdeaUsecase;\n\n  Future<void> generateIdeas(AiEmail email) async {\n    isGeneratingIdea = true;\n    notifyListeners();\n\n    try {\n      ideas = await _generateIdeaUsecase.call(params: email);\n    } catch (e) {\n      hasError = true;\n    } finally {\n      isGeneratingIdea = false;\n      notifyListeners();\n    }\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart b/step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart
--- a/step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/lib/features/email_composer/presentation/notifier/email_composer_notifier.dart	(date 1735225622192)
@@ -1,6 +1,6 @@
 import 'package:flutter/material.dart';
 import 'package:step_ai/features/email_composer/domain/entity/ai_email.dart';
-import 'package:step_ai/features/email_composer/domain/usecase/compose_email_usecase.dart';
+import 'package:step_ai/features/email_composer/domain/entity/response_email.dart';
 import 'package:step_ai/features/email_composer/domain/usecase/generate_email_response_usecase.dart';
 import 'package:step_ai/features/email_composer/domain/usecase/generate_idea_usecase.dart';
 
@@ -10,6 +10,8 @@
   var isGeneratingIdea = false;
   var isGeneratingEmail = false;
   var hasError = false;
+  List<ResponseEmail> emailList = [];
+  int currentEmailIndex = -1;
   final GenerateResponseEmailUsecase _generateResponseEmailUsecase;
   final GenerateIdeaUsecase _generateIdeaUsecase;
 
@@ -32,4 +34,33 @@
       notifyListeners();
     }
   }
+
+  Future<void> generateEmail(AiEmail email) async {
+    isGeneratingEmail = true;
+    notifyListeners();
+
+    try {
+      emailList.add(await _generateResponseEmailUsecase.call(params: email));
+      currentEmailIndex++;
+    } catch (e) {
+      hasError = true;
+    } finally {
+      isGeneratingEmail = false;
+      notifyListeners();
+    }
+  }
+
+  void previousEmail() {
+    if (currentEmailIndex > 0) {
+      currentEmailIndex--;
+      notifyListeners();
+    }
+  }
+
+  void nextEmail() {
+    if (currentEmailIndex < emailList.length - 1) {
+      currentEmailIndex++;
+      notifyListeners();
+    }
+  }
 }
Index: step_ai/lib/features/email_composer/presentation/notifier/usage_token_notifier.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/presentation/notifier/usage_token_notifier.dart b/step_ai/lib/features/email_composer/presentation/notifier/usage_token_notifier.dart
new file mode 100644
--- /dev/null	(date 1735237292202)
+++ b/step_ai/lib/features/email_composer/presentation/notifier/usage_token_notifier.dart	(date 1735237292202)
@@ -0,0 +1,22 @@
+import 'package:flutter/cupertino.dart';
+import 'package:step_ai/core/data/model/usage_token_model.dart';
+
+import '../../domain/usecase/get_usage_usecase.dart';
+
+class UsageTokenNotifier extends ChangeNotifier {
+  final GetUsageUsecase _usageTokenUsecase;
+  UsageTokenModel? model;
+  bool hasError = false;
+
+  UsageTokenNotifier({required GetUsageUsecase usageTokenUsecase}) : _usageTokenUsecase = usageTokenUsecase;
+
+  Future<void> loadUsageToken() async {
+    try {
+      model = await _usageTokenUsecase.call();
+    } catch (e) {
+      hasError = true;
+    } finally {
+      notifyListeners();
+    }
+  }
+}
\ No newline at end of file
Index: step_ai/lib/features/email_composer/domain/usecase/get_usage_usecase.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/domain/usecase/get_usage_usecase.dart b/step_ai/lib/features/email_composer/domain/usecase/get_usage_usecase.dart
new file mode 100644
--- /dev/null	(date 1735230572405)
+++ b/step_ai/lib/features/email_composer/domain/usecase/get_usage_usecase.dart	(date 1735230572405)
@@ -0,0 +1,17 @@
+import 'dart:async';
+
+import 'package:step_ai/core/data/model/usage_token_model.dart';
+import 'package:step_ai/core/usecase/use_case.dart';
+import 'package:step_ai/features/email_composer/domain/repository/usage_repository.dart';
+
+class GetUsageUsecase extends NoParamUseCase<UsageTokenModel> {
+
+  final UsageRepository _repository;
+
+  GetUsageUsecase({required UsageRepository repo}): _repository = repo;
+
+  @override
+  FutureOr<UsageTokenModel> call() {
+    return _repository.getUsageToken();
+  }
+}
\ No newline at end of file
Index: step_ai/macos/Flutter/GeneratedPluginRegistrant.swift
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n//  Generated file. Do not edit.\n//\n\nimport FlutterMacOS\nimport Foundation\n\nimport connectivity_plus\nimport file_selector_macos\nimport flutter_secure_storage_macos\nimport path_provider_foundation\nimport shared_preferences_foundation\nimport url_launcher_macos\nimport webview_flutter_wkwebview\n\nfunc RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {\n  ConnectivityPlusPlugin.register(with: registry.registrar(forPlugin: \"ConnectivityPlusPlugin\"))\n  FileSelectorPlugin.register(with: registry.registrar(forPlugin: \"FileSelectorPlugin\"))\n  FlutterSecureStoragePlugin.register(with: registry.registrar(forPlugin: \"FlutterSecureStoragePlugin\"))\n  PathProviderPlugin.register(with: registry.registrar(forPlugin: \"PathProviderPlugin\"))\n  SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: \"SharedPreferencesPlugin\"))\n  UrlLauncherPlugin.register(with: registry.registrar(forPlugin: \"UrlLauncherPlugin\"))\n  FLTWebViewFlutterPlugin.register(with: registry.registrar(forPlugin: \"FLTWebViewFlutterPlugin\"))\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/macos/Flutter/GeneratedPluginRegistrant.swift b/step_ai/macos/Flutter/GeneratedPluginRegistrant.swift
--- a/step_ai/macos/Flutter/GeneratedPluginRegistrant.swift	(revision fbf086bb97d721b994de24479443533160e03c2a)
+++ b/step_ai/macos/Flutter/GeneratedPluginRegistrant.swift	(date 1735983071451)
@@ -8,7 +8,9 @@
 import connectivity_plus
 import file_selector_macos
 import flutter_secure_storage_macos
+import package_info_plus
 import path_provider_foundation
+import sentry_flutter
 import shared_preferences_foundation
 import url_launcher_macos
 import webview_flutter_wkwebview
@@ -17,7 +19,9 @@
   ConnectivityPlusPlugin.register(with: registry.registrar(forPlugin: "ConnectivityPlusPlugin"))
   FileSelectorPlugin.register(with: registry.registrar(forPlugin: "FileSelectorPlugin"))
   FlutterSecureStoragePlugin.register(with: registry.registrar(forPlugin: "FlutterSecureStoragePlugin"))
+  FPPPackageInfoPlusPlugin.register(with: registry.registrar(forPlugin: "FPPPackageInfoPlusPlugin"))
   PathProviderPlugin.register(with: registry.registrar(forPlugin: "PathProviderPlugin"))
+  SentryFlutterPlugin.register(with: registry.registrar(forPlugin: "SentryFlutterPlugin"))
   SharedPreferencesPlugin.register(with: registry.registrar(forPlugin: "SharedPreferencesPlugin"))
   UrlLauncherPlugin.register(with: registry.registrar(forPlugin: "UrlLauncherPlugin"))
   FLTWebViewFlutterPlugin.register(with: registry.registrar(forPlugin: "FLTWebViewFlutterPlugin"))
Index: step_ai/lib/features/email_composer/di/email_composer_service_locator.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/step_ai/lib/features/email_composer/di/email_composer_service_locator.dart b/step_ai/lib/features/email_composer/di/email_composer_service_locator.dart
new file mode 100644
--- /dev/null	(date 1735236313875)
+++ b/step_ai/lib/features/email_composer/di/email_composer_service_locator.dart	(date 1735236313875)
@@ -0,0 +1,9 @@
+import 'package:step_ai/features/email_composer/di/data_injection/email_composer_data_di.dart';
+import 'package:step_ai/features/email_composer/di/domain_injection/email_composer_domain_di.dart';
+import 'package:step_ai/features/email_composer/di/presentation_injection/email_composer_presentation_di.dart';
+
+Future<void> initEmailComposerServices() async {
+  await initEmailComposerData();
+  await initEmailComposerDomain();
+  await initEmailComposerPresentation();
+}
\ No newline at end of file
diff --git a/step_ai/lib/features/email_composer/domain/repository/reponse_email_repository.dart b/step_ai/lib/features/email_composer/domain/repository/response_email_repository.dart
rename from step_ai/lib/features/email_composer/domain/repository/reponse_email_repository.dart
rename to step_ai/lib/features/email_composer/domain/repository/response_email_repository.dart
